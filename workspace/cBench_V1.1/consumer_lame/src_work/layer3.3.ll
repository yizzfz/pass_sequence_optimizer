; ModuleID = 'layer3.2.ll'
source_filename = "layer3.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.bandInfoStruct = type { [23 x i16], [22 x i16], [14 x i16], [13 x i16] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.newhuff = type { i32, i16* }
%struct.mpstr = type { %struct.buf*, %struct.buf*, i32, i32, i32, %struct.frame, [2 x [2304 x i8]], [2 x [2 x [576 x double]]], [2 x i32], i64, i32, [2 x [2 x [272 x double]]], i32 }
%struct.buf = type { i8*, i64, i64, %struct.buf*, %struct.buf* }
%struct.frame = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.III_sideinfo = type { i32, i32, [2 x %struct.anon] }
%struct.anon = type { [2 x %struct.gr_info_s] }
%struct.gr_info_s = type { i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], [3 x i32], i32, i32, i32, i32, i32, i32, i32, [3 x double*], double* }

$__llvm_profile_raw_version = comdat any

@bandInfo = global [9 x %struct.bandInfoStruct] [%struct.bandInfoStruct { [23 x i16] [i16 0, i16 4, i16 8, i16 12, i16 16, i16 20, i16 24, i16 30, i16 36, i16 44, i16 52, i16 62, i16 74, i16 90, i16 110, i16 134, i16 162, i16 196, i16 238, i16 288, i16 342, i16 418, i16 576], [22 x i16] [i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 6, i16 6, i16 8, i16 8, i16 10, i16 12, i16 16, i16 20, i16 24, i16 28, i16 34, i16 42, i16 50, i16 54, i16 76, i16 158], [14 x i16] [i16 0, i16 12, i16 24, i16 36, i16 48, i16 66, i16 90, i16 120, i16 156, i16 198, i16 252, i16 318, i16 408, i16 576], [13 x i16] [i16 4, i16 4, i16 4, i16 4, i16 6, i16 8, i16 10, i16 12, i16 14, i16 18, i16 22, i16 30, i16 56] }, %struct.bandInfoStruct { [23 x i16] [i16 0, i16 4, i16 8, i16 12, i16 16, i16 20, i16 24, i16 30, i16 36, i16 42, i16 50, i16 60, i16 72, i16 88, i16 106, i16 128, i16 156, i16 190, i16 230, i16 276, i16 330, i16 384, i16 576], [22 x i16] [i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 6, i16 6, i16 6, i16 8, i16 10, i16 12, i16 16, i16 18, i16 22, i16 28, i16 34, i16 40, i16 46, i16 54, i16 54, i16 192], [14 x i16] [i16 0, i16 12, i16 24, i16 36, i16 48, i16 66, i16 84, i16 114, i16 150, i16 192, i16 240, i16 300, i16 378, i16 576], [13 x i16] [i16 4, i16 4, i16 4, i16 4, i16 6, i16 6, i16 10, i16 12, i16 14, i16 16, i16 20, i16 26, i16 66] }, %struct.bandInfoStruct { [23 x i16] [i16 0, i16 4, i16 8, i16 12, i16 16, i16 20, i16 24, i16 30, i16 36, i16 44, i16 54, i16 66, i16 82, i16 102, i16 126, i16 156, i16 194, i16 240, i16 296, i16 364, i16 448, i16 550, i16 576], [22 x i16] [i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 6, i16 6, i16 8, i16 10, i16 12, i16 16, i16 20, i16 24, i16 30, i16 38, i16 46, i16 56, i16 68, i16 84, i16 102, i16 26], [14 x i16] [i16 0, i16 12, i16 24, i16 36, i16 48, i16 66, i16 90, i16 126, i16 174, i16 234, i16 312, i16 414, i16 540, i16 576], [13 x i16] [i16 4, i16 4, i16 4, i16 4, i16 6, i16 8, i16 12, i16 16, i16 20, i16 26, i16 34, i16 42, i16 12] }, %struct.bandInfoStruct { [23 x i16] [i16 0, i16 6, i16 12, i16 18, i16 24, i16 30, i16 36, i16 44, i16 54, i16 66, i16 80, i16 96, i16 116, i16 140, i16 168, i16 200, i16 238, i16 284, i16 336, i16 396, i16 464, i16 522, i16 576], [22 x i16] [i16 6, i16 6, i16 6, i16 6, i16 6, i16 6, i16 8, i16 10, i16 12, i16 14, i16 16, i16 20, i16 24, i16 28, i16 32, i16 38, i16 46, i16 52, i16 60, i16 68, i16 58, i16 54], [14 x i16] [i16 0, i16 12, i16 24, i16 36, i16 54, i16 72, i16 96, i16 126, i16 168, i16 222, i16 300, i16 396, i16 522, i16 576], [13 x i16] [i16 4, i16 4, i16 4, i16 6, i16 6, i16 8, i16 10, i16 14, i16 18, i16 26, i16 32, i16 42, i16 18] }, %struct.bandInfoStruct { [23 x i16] [i16 0, i16 6, i16 12, i16 18, i16 24, i16 30, i16 36, i16 44, i16 54, i16 66, i16 80, i16 96, i16 114, i16 136, i16 162, i16 194, i16 232, i16 278, i16 332, i16 394, i16 464, i16 540, i16 576], [22 x i16] [i16 6, i16 6, i16 6, i16 6, i16 6, i16 6, i16 8, i16 10, i16 12, i16 14, i16 16, i16 18, i16 22, i16 26, i16 32, i16 38, i16 46, i16 52, i16 64, i16 70, i16 76, i16 36], [14 x i16] [i16 0, i16 12, i16 24, i16 36, i16 54, i16 78, i16 108, i16 144, i16 186, i16 240, i16 312, i16 408, i16 540, i16 576], [13 x i16] [i16 4, i16 4, i16 4, i16 6, i16 8, i16 10, i16 12, i16 14, i16 18, i16 24, i16 32, i16 44, i16 12] }, %struct.bandInfoStruct { [23 x i16] [i16 0, i16 6, i16 12, i16 18, i16 24, i16 30, i16 36, i16 44, i16 54, i16 66, i16 80, i16 96, i16 116, i16 140, i16 168, i16 200, i16 238, i16 284, i16 336, i16 396, i16 464, i16 522, i16 576], [22 x i16] [i16 6, i16 6, i16 6, i16 6, i16 6, i16 6, i16 8, i16 10, i16 12, i16 14, i16 16, i16 20, i16 24, i16 28, i16 32, i16 38, i16 46, i16 52, i16 60, i16 68, i16 58, i16 54], [14 x i16] [i16 0, i16 12, i16 24, i16 36, i16 54, i16 78, i16 108, i16 144, i16 186, i16 240, i16 312, i16 402, i16 522, i16 576], [13 x i16] [i16 4, i16 4, i16 4, i16 6, i16 8, i16 10, i16 12, i16 14, i16 18, i16 24, i16 30, i16 40, i16 18] }, %struct.bandInfoStruct { [23 x i16] [i16 0, i16 6, i16 12, i16 18, i16 24, i16 30, i16 36, i16 44, i16 54, i16 66, i16 80, i16 96, i16 116, i16 140, i16 168, i16 200, i16 238, i16 284, i16 336, i16 396, i16 464, i16 522, i16 576], [22 x i16] [i16 6, i16 6, i16 6, i16 6, i16 6, i16 6, i16 8, i16 10, i16 12, i16 14, i16 16, i16 20, i16 24, i16 28, i16 32, i16 38, i16 46, i16 52, i16 60, i16 68, i16 58, i16 54], [14 x i16] [i16 0, i16 12, i16 24, i16 36, i16 54, i16 78, i16 108, i16 144, i16 186, i16 240, i16 312, i16 402, i16 522, i16 576], [13 x i16] [i16 4, i16 4, i16 4, i16 6, i16 8, i16 10, i16 12, i16 14, i16 18, i16 24, i16 30, i16 40, i16 18] }, %struct.bandInfoStruct { [23 x i16] [i16 0, i16 6, i16 12, i16 18, i16 24, i16 30, i16 36, i16 44, i16 54, i16 66, i16 80, i16 96, i16 116, i16 140, i16 168, i16 200, i16 238, i16 284, i16 336, i16 396, i16 464, i16 522, i16 576], [22 x i16] [i16 6, i16 6, i16 6, i16 6, i16 6, i16 6, i16 8, i16 10, i16 12, i16 14, i16 16, i16 20, i16 24, i16 28, i16 32, i16 38, i16 46, i16 52, i16 60, i16 68, i16 58, i16 54], [14 x i16] [i16 0, i16 12, i16 24, i16 36, i16 54, i16 78, i16 108, i16 144, i16 186, i16 240, i16 312, i16 402, i16 522, i16 576], [13 x i16] [i16 4, i16 4, i16 4, i16 6, i16 8, i16 10, i16 12, i16 14, i16 18, i16 24, i16 30, i16 40, i16 18] }, %struct.bandInfoStruct { [23 x i16] [i16 0, i16 12, i16 24, i16 36, i16 48, i16 60, i16 72, i16 88, i16 108, i16 132, i16 160, i16 192, i16 232, i16 280, i16 336, i16 400, i16 476, i16 566, i16 568, i16 570, i16 572, i16 574, i16 576], [22 x i16] [i16 12, i16 12, i16 12, i16 12, i16 12, i16 12, i16 16, i16 20, i16 24, i16 28, i16 32, i16 40, i16 48, i16 56, i16 64, i16 76, i16 90, i16 2, i16 2, i16 2, i16 2, i16 2], [14 x i16] [i16 0, i16 24, i16 48, i16 72, i16 108, i16 156, i16 216, i16 288, i16 372, i16 480, i16 486, i16 492, i16 498, i16 576], [13 x i16] [i16 8, i16 8, i16 8, i16 12, i16 16, i16 20, i16 24, i16 28, i16 36, i16 2, i16 2, i16 2, i16 26] }], align 16
@gainpow2 = internal global [378 x double] zeroinitializer, align 16
@ispow = internal global [8207 x double] zeroinitializer, align 16
@init_layer3.Ci = internal global [8 x double] [double -6.000000e-01, double -5.350000e-01, double -3.300000e-01, double -1.850000e-01, double -9.500000e-02, double -4.100000e-02, double -1.420000e-02, double -3.700000e-03], align 16
@aa_cs = internal global [8 x double] zeroinitializer, align 16
@aa_ca = internal global [8 x double] zeroinitializer, align 16
@win = internal global [4 x [36 x double]] zeroinitializer, align 16
@COS9 = internal global [9 x double] zeroinitializer, align 16
@tfcos36 = internal global [9 x double] zeroinitializer, align 16
@tfcos12 = internal global [3 x double] zeroinitializer, align 16
@COS6_1 = internal global double 0.000000e+00, align 8
@COS6_2 = internal global double 0.000000e+00, align 8
@COS1 = internal global [12 x [6 x double]] zeroinitializer, align 16
@init_layer3.len = internal global [4 x i32] [i32 36, i32 36, i32 12, i32 36], align 16
@win1 = internal global [4 x [36 x double]] zeroinitializer, align 16
@tan1_1 = internal global [16 x double] zeroinitializer, align 16
@tan2_1 = internal global [16 x double] zeroinitializer, align 16
@tan1_2 = internal global [16 x double] zeroinitializer, align 16
@tan2_2 = internal global [16 x double] zeroinitializer, align 16
@pow1_1 = internal global [2 x [16 x double]] zeroinitializer, align 16
@pow2_1 = internal global [2 x [16 x double]] zeroinitializer, align 16
@pow1_2 = internal global [2 x [16 x double]] zeroinitializer, align 16
@pow2_2 = internal global [2 x [16 x double]] zeroinitializer, align 16
@mapbuf0 = internal global [9 x [152 x i32]] zeroinitializer, align 16
@map = internal global [9 x [3 x i32*]] zeroinitializer, align 16
@mapend = internal global [9 x [3 x i32*]] zeroinitializer, align 16
@mapbuf1 = internal global [9 x [156 x i32]] zeroinitializer, align 16
@mapbuf2 = internal global [9 x [44 x i32]] zeroinitializer, align 16
@longLimit = common global [9 x [23 x i32]] zeroinitializer, align 16
@shortLimit = common global [9 x [14 x i32]] zeroinitializer, align 16
@i_slen2 = internal global [256 x i32] zeroinitializer, align 16
@n_slen2 = internal global [512 x i32] zeroinitializer, align 16
@do_layer3.hybridIn = internal global [2 x [32 x [18 x double]]] zeroinitializer, align 16
@do_layer3.hybridOut = internal global [2 x [18 x [32 x double]]] zeroinitializer, align 16
@stderr = external global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [23 x i8] c"big_values too large!\0A\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"Blocktype == 0 and window-switching == 1 not allowed.\0A\00", align 1
@wordpointer = external global i8*, align 8
@bitindex = external global i32, align 4
@III_get_scale_factors_2.stab = internal global [3 x [6 x [4 x i8]]] [[6 x [4 x i8]] [[4 x i8] c"\06\05\05\05", [4 x i8] c"\06\05\07\03", [4 x i8] c"\0B\0A\00\00", [4 x i8] c"\07\07\07\00", [4 x i8] c"\06\06\06\03", [4 x i8] c"\08\08\05\00"], [6 x [4 x i8]] [[4 x i8] c"\09\09\09\09", [4 x i8] c"\09\09\0C\06", [4 x i8] c"\12\12\00\00", [4 x i8] c"\0C\0C\0C\00", [4 x i8] c"\0C\09\09\06", [4 x i8] c"\0F\0C\09\00"], [6 x [4 x i8]] [[4 x i8] c"\06\09\09\09", [4 x i8] c"\06\09\0C\06", [4 x i8] c"\0F\12\00\00", [4 x i8] c"\06\0F\0C\00", [4 x i8] c"\06\0C\09\06", [4 x i8] c"\06\12\09\00"]], align 16
@III_get_scale_factors_1.slen = internal global [2 x [16 x i8]] [[16 x i8] c"\00\00\00\00\03\01\01\01\02\02\02\03\03\03\04\04", [16 x i8] c"\00\01\02\03\00\01\02\03\01\02\03\01\02\03\02\03"], align 16
@ht = internal global [32 x %struct.newhuff] [%struct.newhuff { i32 0, i16* getelementptr inbounds ([1 x i16], [1 x i16]* @tab0, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([7 x i16], [7 x i16]* @tab1, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([17 x i16], [17 x i16]* @tab2, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([17 x i16], [17 x i16]* @tab3, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([1 x i16], [1 x i16]* @tab0, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([31 x i16], [31 x i16]* @tab5, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([31 x i16], [31 x i16]* @tab6, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([71 x i16], [71 x i16]* @tab7, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([71 x i16], [71 x i16]* @tab8, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([71 x i16], [71 x i16]* @tab9, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([127 x i16], [127 x i16]* @tab10, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([127 x i16], [127 x i16]* @tab11, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([127 x i16], [127 x i16]* @tab12, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab13, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([1 x i16], [1 x i16]* @tab0, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab15, i32 0, i32 0) }, %struct.newhuff { i32 1, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab16, i32 0, i32 0) }, %struct.newhuff { i32 2, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab16, i32 0, i32 0) }, %struct.newhuff { i32 3, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab16, i32 0, i32 0) }, %struct.newhuff { i32 4, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab16, i32 0, i32 0) }, %struct.newhuff { i32 6, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab16, i32 0, i32 0) }, %struct.newhuff { i32 8, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab16, i32 0, i32 0) }, %struct.newhuff { i32 10, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab16, i32 0, i32 0) }, %struct.newhuff { i32 13, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab16, i32 0, i32 0) }, %struct.newhuff { i32 4, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab24, i32 0, i32 0) }, %struct.newhuff { i32 5, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab24, i32 0, i32 0) }, %struct.newhuff { i32 6, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab24, i32 0, i32 0) }, %struct.newhuff { i32 7, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab24, i32 0, i32 0) }, %struct.newhuff { i32 8, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab24, i32 0, i32 0) }, %struct.newhuff { i32 9, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab24, i32 0, i32 0) }, %struct.newhuff { i32 11, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab24, i32 0, i32 0) }, %struct.newhuff { i32 13, i16* getelementptr inbounds ([511 x i16], [511 x i16]* @tab24, i32 0, i32 0) }], align 16
@htc = internal global [2 x %struct.newhuff] [%struct.newhuff { i32 0, i16* getelementptr inbounds ([31 x i16], [31 x i16]* @tab_c0, i32 0, i32 0) }, %struct.newhuff { i32 0, i16* getelementptr inbounds ([31 x i16], [31 x i16]* @tab_c1, i32 0, i32 0) }], align 16
@pretab1 = internal global [22 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 3, i32 2, i32 0], align 16
@pretab2 = internal global [22 x i32] zeroinitializer, align 16
@.str.2 = private unnamed_addr constant [41 x i8] c"mpg123: Can't rewind stream by %d bits!\0A\00", align 1
@tab0 = internal global [1 x i16] zeroinitializer, align 2
@tab1 = internal global [7 x i16] [i16 -5, i16 -3, i16 -1, i16 17, i16 1, i16 16, i16 0], align 2
@tab2 = internal global [17 x i16] [i16 -15, i16 -11, i16 -9, i16 -5, i16 -3, i16 -1, i16 34, i16 2, i16 18, i16 -1, i16 33, i16 32, i16 17, i16 -1, i16 1, i16 16, i16 0], align 16
@tab3 = internal global [17 x i16] [i16 -13, i16 -11, i16 -9, i16 -5, i16 -3, i16 -1, i16 34, i16 2, i16 18, i16 -1, i16 33, i16 32, i16 16, i16 17, i16 -1, i16 1, i16 0], align 16
@tab5 = internal global [31 x i16] [i16 -29, i16 -25, i16 -23, i16 -15, i16 -7, i16 -5, i16 -3, i16 -1, i16 51, i16 35, i16 50, i16 49, i16 -3, i16 -1, i16 19, i16 3, i16 -1, i16 48, i16 34, i16 -3, i16 -1, i16 18, i16 33, i16 -1, i16 2, i16 32, i16 17, i16 -1, i16 1, i16 16, i16 0], align 16
@tab6 = internal global [31 x i16] [i16 -25, i16 -19, i16 -13, i16 -9, i16 -5, i16 -3, i16 -1, i16 51, i16 3, i16 35, i16 -1, i16 50, i16 48, i16 -1, i16 19, i16 49, i16 -3, i16 -1, i16 34, i16 2, i16 18, i16 -3, i16 -1, i16 33, i16 32, i16 1, i16 -1, i16 17, i16 -1, i16 16, i16 0], align 16
@tab7 = internal global [71 x i16] [i16 -69, i16 -65, i16 -57, i16 -39, i16 -29, i16 -17, i16 -11, i16 -7, i16 -3, i16 -1, i16 85, i16 69, i16 -1, i16 84, i16 83, i16 -1, i16 53, i16 68, i16 -3, i16 -1, i16 37, i16 82, i16 21, i16 -5, i16 -1, i16 81, i16 -1, i16 5, i16 52, i16 -1, i16 80, i16 -1, i16 67, i16 51, i16 -5, i16 -3, i16 -1, i16 36, i16 66, i16 20, i16 -1, i16 65, i16 64, i16 -11, i16 -7, i16 -3, i16 -1, i16 4, i16 35, i16 -1, i16 50, i16 3, i16 -1, i16 19, i16 49, i16 -3, i16 -1, i16 48, i16 34, i16 18, i16 -5, i16 -1, i16 33, i16 -1, i16 2, i16 32, i16 17, i16 -1, i16 1, i16 16, i16 0], align 16
@tab8 = internal global [71 x i16] [i16 -65, i16 -63, i16 -59, i16 -45, i16 -31, i16 -19, i16 -13, i16 -7, i16 -5, i16 -3, i16 -1, i16 85, i16 84, i16 69, i16 83, i16 -3, i16 -1, i16 53, i16 68, i16 37, i16 -3, i16 -1, i16 82, i16 5, i16 21, i16 -5, i16 -1, i16 81, i16 -1, i16 52, i16 67, i16 -3, i16 -1, i16 80, i16 51, i16 36, i16 -5, i16 -3, i16 -1, i16 66, i16 20, i16 65, i16 -3, i16 -1, i16 4, i16 64, i16 -1, i16 35, i16 50, i16 -9, i16 -7, i16 -3, i16 -1, i16 19, i16 49, i16 -1, i16 3, i16 48, i16 34, i16 -1, i16 2, i16 32, i16 -1, i16 18, i16 33, i16 17, i16 -3, i16 -1, i16 1, i16 16, i16 0], align 16
@tab9 = internal global [71 x i16] [i16 -63, i16 -53, i16 -41, i16 -29, i16 -19, i16 -11, i16 -5, i16 -3, i16 -1, i16 85, i16 69, i16 53, i16 -1, i16 83, i16 -1, i16 84, i16 5, i16 -3, i16 -1, i16 68, i16 37, i16 -1, i16 82, i16 21, i16 -3, i16 -1, i16 81, i16 52, i16 -1, i16 67, i16 -1, i16 80, i16 4, i16 -7, i16 -3, i16 -1, i16 36, i16 66, i16 -1, i16 51, i16 64, i16 -1, i16 20, i16 65, i16 -5, i16 -3, i16 -1, i16 35, i16 50, i16 19, i16 -1, i16 49, i16 -1, i16 3, i16 48, i16 -5, i16 -3, i16 -1, i16 34, i16 2, i16 18, i16 -1, i16 33, i16 32, i16 -3, i16 -1, i16 17, i16 1, i16 -1, i16 16, i16 0], align 16
@tab10 = internal global [127 x i16] [i16 -125, i16 -121, i16 -111, i16 -83, i16 -55, i16 -35, i16 -21, i16 -13, i16 -7, i16 -3, i16 -1, i16 119, i16 103, i16 -1, i16 118, i16 87, i16 -3, i16 -1, i16 117, i16 102, i16 71, i16 -3, i16 -1, i16 116, i16 86, i16 -1, i16 101, i16 55, i16 -9, i16 -3, i16 -1, i16 115, i16 70, i16 -3, i16 -1, i16 85, i16 84, i16 99, i16 -1, i16 39, i16 114, i16 -11, i16 -5, i16 -3, i16 -1, i16 100, i16 7, i16 112, i16 -1, i16 98, i16 -1, i16 69, i16 53, i16 -5, i16 -1, i16 6, i16 -1, i16 83, i16 68, i16 23, i16 -17, i16 -5, i16 -1, i16 113, i16 -1, i16 54, i16 38, i16 -5, i16 -3, i16 -1, i16 37, i16 82, i16 21, i16 -1, i16 81, i16 -1, i16 52, i16 67, i16 -3, i16 -1, i16 22, i16 97, i16 -1, i16 96, i16 -1, i16 5, i16 80, i16 -19, i16 -11, i16 -7, i16 -3, i16 -1, i16 36, i16 66, i16 -1, i16 51, i16 4, i16 -1, i16 20, i16 65, i16 -3, i16 -1, i16 64, i16 35, i16 -1, i16 50, i16 3, i16 -3, i16 -1, i16 19, i16 49, i16 -1, i16 48, i16 34, i16 -7, i16 -3, i16 -1, i16 18, i16 33, i16 -1, i16 2, i16 32, i16 17, i16 -1, i16 1, i16 16, i16 0], align 16
@tab11 = internal global [127 x i16] [i16 -121, i16 -113, i16 -89, i16 -59, i16 -43, i16 -27, i16 -17, i16 -7, i16 -3, i16 -1, i16 119, i16 103, i16 -1, i16 118, i16 117, i16 -3, i16 -1, i16 102, i16 71, i16 -1, i16 116, i16 -1, i16 87, i16 85, i16 -5, i16 -3, i16 -1, i16 86, i16 101, i16 55, i16 -1, i16 115, i16 70, i16 -9, i16 -7, i16 -3, i16 -1, i16 69, i16 84, i16 -1, i16 53, i16 83, i16 39, i16 -1, i16 114, i16 -1, i16 100, i16 7, i16 -5, i16 -1, i16 113, i16 -1, i16 23, i16 112, i16 -3, i16 -1, i16 54, i16 99, i16 -1, i16 96, i16 -1, i16 68, i16 37, i16 -13, i16 -7, i16 -5, i16 -3, i16 -1, i16 82, i16 5, i16 21, i16 98, i16 -3, i16 -1, i16 38, i16 6, i16 22, i16 -5, i16 -1, i16 97, i16 -1, i16 81, i16 52, i16 -5, i16 -1, i16 80, i16 -1, i16 67, i16 51, i16 -1, i16 36, i16 66, i16 -15, i16 -11, i16 -7, i16 -3, i16 -1, i16 20, i16 65, i16 -1, i16 4, i16 64, i16 -1, i16 35, i16 50, i16 -1, i16 19, i16 49, i16 -5, i16 -3, i16 -1, i16 3, i16 48, i16 34, i16 33, i16 -5, i16 -1, i16 18, i16 -1, i16 2, i16 32, i16 17, i16 -3, i16 -1, i16 1, i16 16, i16 0], align 16
@tab12 = internal global [127 x i16] [i16 -115, i16 -99, i16 -73, i16 -45, i16 -27, i16 -17, i16 -9, i16 -5, i16 -3, i16 -1, i16 119, i16 103, i16 118, i16 -1, i16 87, i16 117, i16 -3, i16 -1, i16 102, i16 71, i16 -1, i16 116, i16 101, i16 -3, i16 -1, i16 86, i16 55, i16 -3, i16 -1, i16 115, i16 85, i16 39, i16 -7, i16 -3, i16 -1, i16 114, i16 70, i16 -1, i16 100, i16 23, i16 -5, i16 -1, i16 113, i16 -1, i16 7, i16 112, i16 -1, i16 54, i16 99, i16 -13, i16 -9, i16 -3, i16 -1, i16 69, i16 84, i16 -1, i16 68, i16 -1, i16 6, i16 5, i16 -1, i16 38, i16 98, i16 -5, i16 -1, i16 97, i16 -1, i16 22, i16 96, i16 -3, i16 -1, i16 53, i16 83, i16 -1, i16 37, i16 82, i16 -17, i16 -7, i16 -3, i16 -1, i16 21, i16 81, i16 -1, i16 52, i16 67, i16 -5, i16 -3, i16 -1, i16 80, i16 4, i16 36, i16 -1, i16 66, i16 20, i16 -3, i16 -1, i16 51, i16 65, i16 -1, i16 35, i16 50, i16 -11, i16 -7, i16 -5, i16 -3, i16 -1, i16 64, i16 3, i16 48, i16 19, i16 -1, i16 49, i16 34, i16 -1, i16 18, i16 33, i16 -7, i16 -5, i16 -3, i16 -1, i16 2, i16 32, i16 0, i16 17, i16 -1, i16 1, i16 16], align 16
@tab13 = internal global [511 x i16] [i16 -509, i16 -503, i16 -475, i16 -405, i16 -333, i16 -265, i16 -205, i16 -153, i16 -115, i16 -83, i16 -53, i16 -35, i16 -21, i16 -13, i16 -9, i16 -7, i16 -5, i16 -3, i16 -1, i16 254, i16 252, i16 253, i16 237, i16 255, i16 -1, i16 239, i16 223, i16 -3, i16 -1, i16 238, i16 207, i16 -1, i16 222, i16 191, i16 -9, i16 -3, i16 -1, i16 251, i16 206, i16 -1, i16 220, i16 -1, i16 175, i16 233, i16 -1, i16 236, i16 221, i16 -9, i16 -5, i16 -3, i16 -1, i16 250, i16 205, i16 190, i16 -1, i16 235, i16 159, i16 -3, i16 -1, i16 249, i16 234, i16 -1, i16 189, i16 219, i16 -17, i16 -9, i16 -3, i16 -1, i16 143, i16 248, i16 -1, i16 204, i16 -1, i16 174, i16 158, i16 -5, i16 -1, i16 142, i16 -1, i16 127, i16 126, i16 247, i16 -5, i16 -1, i16 218, i16 -1, i16 173, i16 188, i16 -3, i16 -1, i16 203, i16 246, i16 111, i16 -15, i16 -7, i16 -3, i16 -1, i16 232, i16 95, i16 -1, i16 157, i16 217, i16 -3, i16 -1, i16 245, i16 231, i16 -1, i16 172, i16 187, i16 -9, i16 -3, i16 -1, i16 79, i16 244, i16 -3, i16 -1, i16 202, i16 230, i16 243, i16 -1, i16 63, i16 -1, i16 141, i16 216, i16 -21, i16 -9, i16 -3, i16 -1, i16 47, i16 242, i16 -3, i16 -1, i16 110, i16 156, i16 15, i16 -5, i16 -3, i16 -1, i16 201, i16 94, i16 171, i16 -3, i16 -1, i16 125, i16 215, i16 78, i16 -11, i16 -5, i16 -3, i16 -1, i16 200, i16 214, i16 62, i16 -1, i16 185, i16 -1, i16 155, i16 170, i16 -1, i16 31, i16 241, i16 -23, i16 -13, i16 -5, i16 -1, i16 240, i16 -1, i16 186, i16 229, i16 -3, i16 -1, i16 228, i16 140, i16 -1, i16 109, i16 227, i16 -5, i16 -1, i16 226, i16 -1, i16 46, i16 14, i16 -1, i16 30, i16 225, i16 -15, i16 -7, i16 -3, i16 -1, i16 224, i16 93, i16 -1, i16 213, i16 124, i16 -3, i16 -1, i16 199, i16 77, i16 -1, i16 139, i16 184, i16 -7, i16 -3, i16 -1, i16 212, i16 154, i16 -1, i16 169, i16 108, i16 -1, i16 198, i16 61, i16 -37, i16 -21, i16 -9, i16 -5, i16 -3, i16 -1, i16 211, i16 123, i16 45, i16 -1, i16 210, i16 29, i16 -5, i16 -1, i16 183, i16 -1, i16 92, i16 197, i16 -3, i16 -1, i16 153, i16 122, i16 195, i16 -7, i16 -5, i16 -3, i16 -1, i16 167, i16 151, i16 75, i16 209, i16 -3, i16 -1, i16 13, i16 208, i16 -1, i16 138, i16 168, i16 -11, i16 -7, i16 -3, i16 -1, i16 76, i16 196, i16 -1, i16 107, i16 182, i16 -1, i16 60, i16 44, i16 -3, i16 -1, i16 194, i16 91, i16 -3, i16 -1, i16 181, i16 137, i16 28, i16 -43, i16 -23, i16 -11, i16 -5, i16 -1, i16 193, i16 -1, i16 152, i16 12, i16 -1, i16 192, i16 -1, i16 180, i16 106, i16 -5, i16 -3, i16 -1, i16 166, i16 121, i16 59, i16 -1, i16 179, i16 -1, i16 136, i16 90, i16 -11, i16 -5, i16 -1, i16 43, i16 -1, i16 165, i16 105, i16 -1, i16 164, i16 -1, i16 120, i16 135, i16 -5, i16 -1, i16 148, i16 -1, i16 119, i16 118, i16 178, i16 -11, i16 -3, i16 -1, i16 27, i16 177, i16 -3, i16 -1, i16 11, i16 176, i16 -1, i16 150, i16 74, i16 -7, i16 -3, i16 -1, i16 58, i16 163, i16 -1, i16 89, i16 149, i16 -1, i16 42, i16 162, i16 -47, i16 -23, i16 -9, i16 -3, i16 -1, i16 26, i16 161, i16 -3, i16 -1, i16 10, i16 104, i16 160, i16 -5, i16 -3, i16 -1, i16 134, i16 73, i16 147, i16 -3, i16 -1, i16 57, i16 88, i16 -1, i16 133, i16 103, i16 -9, i16 -3, i16 -1, i16 41, i16 146, i16 -3, i16 -1, i16 87, i16 117, i16 56, i16 -5, i16 -1, i16 131, i16 -1, i16 102, i16 71, i16 -3, i16 -1, i16 116, i16 86, i16 -1, i16 101, i16 115, i16 -11, i16 -3, i16 -1, i16 25, i16 145, i16 -3, i16 -1, i16 9, i16 144, i16 -1, i16 72, i16 132, i16 -7, i16 -5, i16 -1, i16 114, i16 -1, i16 70, i16 100, i16 40, i16 -1, i16 130, i16 24, i16 -41, i16 -27, i16 -11, i16 -5, i16 -3, i16 -1, i16 55, i16 39, i16 23, i16 -1, i16 113, i16 -1, i16 85, i16 7, i16 -7, i16 -3, i16 -1, i16 112, i16 54, i16 -1, i16 99, i16 69, i16 -3, i16 -1, i16 84, i16 38, i16 -1, i16 98, i16 53, i16 -5, i16 -1, i16 129, i16 -1, i16 8, i16 128, i16 -3, i16 -1, i16 22, i16 97, i16 -1, i16 6, i16 96, i16 -13, i16 -9, i16 -5, i16 -3, i16 -1, i16 83, i16 68, i16 37, i16 -1, i16 82, i16 5, i16 -1, i16 21, i16 81, i16 -7, i16 -3, i16 -1, i16 52, i16 67, i16 -1, i16 80, i16 36, i16 -3, i16 -1, i16 66, i16 51, i16 20, i16 -19, i16 -11, i16 -5, i16 -1, i16 65, i16 -1, i16 4, i16 64, i16 -3, i16 -1, i16 35, i16 50, i16 19, i16 -3, i16 -1, i16 49, i16 3, i16 -1, i16 48, i16 34, i16 -3, i16 -1, i16 18, i16 33, i16 -1, i16 2, i16 32, i16 -3, i16 -1, i16 17, i16 1, i16 16, i16 0], align 16
@tab15 = internal global [511 x i16] [i16 -495, i16 -445, i16 -355, i16 -263, i16 -183, i16 -115, i16 -77, i16 -43, i16 -27, i16 -13, i16 -7, i16 -3, i16 -1, i16 255, i16 239, i16 -1, i16 254, i16 223, i16 -1, i16 238, i16 -1, i16 253, i16 207, i16 -7, i16 -3, i16 -1, i16 252, i16 222, i16 -1, i16 237, i16 191, i16 -1, i16 251, i16 -1, i16 206, i16 236, i16 -7, i16 -3, i16 -1, i16 221, i16 175, i16 -1, i16 250, i16 190, i16 -3, i16 -1, i16 235, i16 205, i16 -1, i16 220, i16 159, i16 -15, i16 -7, i16 -3, i16 -1, i16 249, i16 234, i16 -1, i16 189, i16 219, i16 -3, i16 -1, i16 143, i16 248, i16 -1, i16 204, i16 158, i16 -7, i16 -3, i16 -1, i16 233, i16 127, i16 -1, i16 247, i16 173, i16 -3, i16 -1, i16 218, i16 188, i16 -1, i16 111, i16 -1, i16 174, i16 15, i16 -19, i16 -11, i16 -3, i16 -1, i16 203, i16 246, i16 -3, i16 -1, i16 142, i16 232, i16 -1, i16 95, i16 157, i16 -3, i16 -1, i16 245, i16 126, i16 -1, i16 231, i16 172, i16 -9, i16 -3, i16 -1, i16 202, i16 187, i16 -3, i16 -1, i16 217, i16 141, i16 79, i16 -3, i16 -1, i16 244, i16 63, i16 -1, i16 243, i16 216, i16 -33, i16 -17, i16 -9, i16 -3, i16 -1, i16 230, i16 47, i16 -1, i16 242, i16 -1, i16 110, i16 240, i16 -3, i16 -1, i16 31, i16 241, i16 -1, i16 156, i16 201, i16 -7, i16 -3, i16 -1, i16 94, i16 171, i16 -1, i16 186, i16 229, i16 -3, i16 -1, i16 125, i16 215, i16 -1, i16 78, i16 228, i16 -15, i16 -7, i16 -3, i16 -1, i16 140, i16 200, i16 -1, i16 62, i16 109, i16 -3, i16 -1, i16 214, i16 227, i16 -1, i16 155, i16 185, i16 -7, i16 -3, i16 -1, i16 46, i16 170, i16 -1, i16 226, i16 30, i16 -5, i16 -1, i16 225, i16 -1, i16 14, i16 224, i16 -1, i16 93, i16 213, i16 -45, i16 -25, i16 -13, i16 -7, i16 -3, i16 -1, i16 124, i16 199, i16 -1, i16 77, i16 139, i16 -1, i16 212, i16 -1, i16 184, i16 154, i16 -7, i16 -3, i16 -1, i16 169, i16 108, i16 -1, i16 198, i16 61, i16 -1, i16 211, i16 210, i16 -9, i16 -5, i16 -3, i16 -1, i16 45, i16 13, i16 29, i16 -1, i16 123, i16 183, i16 -5, i16 -1, i16 209, i16 -1, i16 92, i16 208, i16 -1, i16 197, i16 138, i16 -17, i16 -7, i16 -3, i16 -1, i16 168, i16 76, i16 -1, i16 196, i16 107, i16 -5, i16 -1, i16 182, i16 -1, i16 153, i16 12, i16 -1, i16 60, i16 195, i16 -9, i16 -3, i16 -1, i16 122, i16 167, i16 -1, i16 166, i16 -1, i16 192, i16 11, i16 -1, i16 194, i16 -1, i16 44, i16 91, i16 -55, i16 -29, i16 -15, i16 -7, i16 -3, i16 -1, i16 181, i16 28, i16 -1, i16 137, i16 152, i16 -3, i16 -1, i16 193, i16 75, i16 -1, i16 180, i16 106, i16 -5, i16 -3, i16 -1, i16 59, i16 121, i16 179, i16 -3, i16 -1, i16 151, i16 136, i16 -1, i16 43, i16 90, i16 -11, i16 -5, i16 -1, i16 178, i16 -1, i16 165, i16 27, i16 -1, i16 177, i16 -1, i16 176, i16 105, i16 -7, i16 -3, i16 -1, i16 150, i16 74, i16 -1, i16 164, i16 120, i16 -3, i16 -1, i16 135, i16 58, i16 163, i16 -17, i16 -7, i16 -3, i16 -1, i16 89, i16 149, i16 -1, i16 42, i16 162, i16 -3, i16 -1, i16 26, i16 161, i16 -3, i16 -1, i16 10, i16 160, i16 104, i16 -7, i16 -3, i16 -1, i16 134, i16 73, i16 -1, i16 148, i16 57, i16 -5, i16 -1, i16 147, i16 -1, i16 119, i16 9, i16 -1, i16 88, i16 133, i16 -53, i16 -29, i16 -13, i16 -7, i16 -3, i16 -1, i16 41, i16 103, i16 -1, i16 118, i16 146, i16 -1, i16 145, i16 -1, i16 25, i16 144, i16 -7, i16 -3, i16 -1, i16 72, i16 132, i16 -1, i16 87, i16 117, i16 -3, i16 -1, i16 56, i16 131, i16 -1, i16 102, i16 71, i16 -7, i16 -3, i16 -1, i16 40, i16 130, i16 -1, i16 24, i16 129, i16 -7, i16 -3, i16 -1, i16 116, i16 8, i16 -1, i16 128, i16 86, i16 -3, i16 -1, i16 101, i16 55, i16 -1, i16 115, i16 70, i16 -17, i16 -7, i16 -3, i16 -1, i16 39, i16 114, i16 -1, i16 100, i16 23, i16 -3, i16 -1, i16 85, i16 113, i16 -3, i16 -1, i16 7, i16 112, i16 54, i16 -7, i16 -3, i16 -1, i16 99, i16 69, i16 -1, i16 84, i16 38, i16 -3, i16 -1, i16 98, i16 22, i16 -3, i16 -1, i16 6, i16 96, i16 53, i16 -33, i16 -19, i16 -9, i16 -5, i16 -1, i16 97, i16 -1, i16 83, i16 68, i16 -1, i16 37, i16 82, i16 -3, i16 -1, i16 21, i16 81, i16 -3, i16 -1, i16 5, i16 80, i16 52, i16 -7, i16 -3, i16 -1, i16 67, i16 36, i16 -1, i16 66, i16 51, i16 -1, i16 65, i16 -1, i16 20, i16 4, i16 -9, i16 -3, i16 -1, i16 35, i16 50, i16 -3, i16 -1, i16 64, i16 3, i16 19, i16 -3, i16 -1, i16 49, i16 48, i16 34, i16 -9, i16 -7, i16 -3, i16 -1, i16 18, i16 33, i16 -1, i16 2, i16 32, i16 17, i16 -3, i16 -1, i16 1, i16 16, i16 0], align 16
@tab16 = internal global [511 x i16] [i16 -509, i16 -503, i16 -461, i16 -323, i16 -103, i16 -37, i16 -27, i16 -15, i16 -7, i16 -3, i16 -1, i16 239, i16 254, i16 -1, i16 223, i16 253, i16 -3, i16 -1, i16 207, i16 252, i16 -1, i16 191, i16 251, i16 -5, i16 -1, i16 175, i16 -1, i16 250, i16 159, i16 -3, i16 -1, i16 249, i16 248, i16 143, i16 -7, i16 -3, i16 -1, i16 127, i16 247, i16 -1, i16 111, i16 246, i16 255, i16 -9, i16 -5, i16 -3, i16 -1, i16 95, i16 245, i16 79, i16 -1, i16 244, i16 243, i16 -53, i16 -1, i16 240, i16 -1, i16 63, i16 -29, i16 -19, i16 -13, i16 -7, i16 -5, i16 -1, i16 206, i16 -1, i16 236, i16 221, i16 222, i16 -1, i16 233, i16 -1, i16 234, i16 217, i16 -1, i16 238, i16 -1, i16 237, i16 235, i16 -3, i16 -1, i16 190, i16 205, i16 -3, i16 -1, i16 220, i16 219, i16 174, i16 -11, i16 -5, i16 -1, i16 204, i16 -1, i16 173, i16 218, i16 -3, i16 -1, i16 126, i16 172, i16 202, i16 -5, i16 -3, i16 -1, i16 201, i16 125, i16 94, i16 189, i16 242, i16 -93, i16 -5, i16 -3, i16 -1, i16 47, i16 15, i16 31, i16 -1, i16 241, i16 -49, i16 -25, i16 -13, i16 -5, i16 -1, i16 158, i16 -1, i16 188, i16 203, i16 -3, i16 -1, i16 142, i16 232, i16 -1, i16 157, i16 231, i16 -7, i16 -3, i16 -1, i16 187, i16 141, i16 -1, i16 216, i16 110, i16 -1, i16 230, i16 156, i16 -13, i16 -7, i16 -3, i16 -1, i16 171, i16 186, i16 -1, i16 229, i16 215, i16 -1, i16 78, i16 -1, i16 228, i16 140, i16 -3, i16 -1, i16 200, i16 62, i16 -1, i16 109, i16 -1, i16 214, i16 155, i16 -19, i16 -11, i16 -5, i16 -3, i16 -1, i16 185, i16 170, i16 225, i16 -1, i16 212, i16 -1, i16 184, i16 169, i16 -5, i16 -1, i16 123, i16 -1, i16 183, i16 208, i16 227, i16 -7, i16 -3, i16 -1, i16 14, i16 224, i16 -1, i16 93, i16 213, i16 -3, i16 -1, i16 124, i16 199, i16 -1, i16 77, i16 139, i16 -75, i16 -45, i16 -27, i16 -13, i16 -7, i16 -3, i16 -1, i16 154, i16 108, i16 -1, i16 198, i16 61, i16 -3, i16 -1, i16 92, i16 197, i16 13, i16 -7, i16 -3, i16 -1, i16 138, i16 168, i16 -1, i16 153, i16 76, i16 -3, i16 -1, i16 182, i16 122, i16 60, i16 -11, i16 -5, i16 -3, i16 -1, i16 91, i16 137, i16 28, i16 -1, i16 192, i16 -1, i16 152, i16 121, i16 -1, i16 226, i16 -1, i16 46, i16 30, i16 -15, i16 -7, i16 -3, i16 -1, i16 211, i16 45, i16 -1, i16 210, i16 209, i16 -5, i16 -1, i16 59, i16 -1, i16 151, i16 136, i16 29, i16 -7, i16 -3, i16 -1, i16 196, i16 107, i16 -1, i16 195, i16 167, i16 -1, i16 44, i16 -1, i16 194, i16 181, i16 -23, i16 -13, i16 -7, i16 -3, i16 -1, i16 193, i16 12, i16 -1, i16 75, i16 180, i16 -3, i16 -1, i16 106, i16 166, i16 179, i16 -5, i16 -3, i16 -1, i16 90, i16 165, i16 43, i16 -1, i16 178, i16 27, i16 -13, i16 -5, i16 -1, i16 177, i16 -1, i16 11, i16 176, i16 -3, i16 -1, i16 105, i16 150, i16 -1, i16 74, i16 164, i16 -5, i16 -3, i16 -1, i16 120, i16 135, i16 163, i16 -3, i16 -1, i16 58, i16 89, i16 42, i16 -97, i16 -57, i16 -33, i16 -19, i16 -11, i16 -5, i16 -3, i16 -1, i16 149, i16 104, i16 161, i16 -3, i16 -1, i16 134, i16 119, i16 148, i16 -5, i16 -3, i16 -1, i16 73, i16 87, i16 103, i16 162, i16 -5, i16 -1, i16 26, i16 -1, i16 10, i16 160, i16 -3, i16 -1, i16 57, i16 147, i16 -1, i16 88, i16 133, i16 -9, i16 -3, i16 -1, i16 41, i16 146, i16 -3, i16 -1, i16 118, i16 9, i16 25, i16 -5, i16 -1, i16 145, i16 -1, i16 144, i16 72, i16 -3, i16 -1, i16 132, i16 117, i16 -1, i16 56, i16 131, i16 -21, i16 -11, i16 -5, i16 -3, i16 -1, i16 102, i16 40, i16 130, i16 -3, i16 -1, i16 71, i16 116, i16 24, i16 -3, i16 -1, i16 129, i16 128, i16 -3, i16 -1, i16 8, i16 86, i16 55, i16 -9, i16 -5, i16 -1, i16 115, i16 -1, i16 101, i16 70, i16 -1, i16 39, i16 114, i16 -5, i16 -3, i16 -1, i16 100, i16 85, i16 7, i16 23, i16 -23, i16 -13, i16 -5, i16 -1, i16 113, i16 -1, i16 112, i16 54, i16 -3, i16 -1, i16 99, i16 69, i16 -1, i16 84, i16 38, i16 -3, i16 -1, i16 98, i16 22, i16 -1, i16 97, i16 -1, i16 6, i16 96, i16 -9, i16 -5, i16 -1, i16 83, i16 -1, i16 53, i16 68, i16 -1, i16 37, i16 82, i16 -1, i16 81, i16 -1, i16 21, i16 5, i16 -33, i16 -23, i16 -13, i16 -7, i16 -3, i16 -1, i16 52, i16 67, i16 -1, i16 80, i16 36, i16 -3, i16 -1, i16 66, i16 51, i16 20, i16 -5, i16 -1, i16 65, i16 -1, i16 4, i16 64, i16 -1, i16 35, i16 50, i16 -3, i16 -1, i16 19, i16 49, i16 -3, i16 -1, i16 3, i16 48, i16 34, i16 -3, i16 -1, i16 18, i16 33, i16 -1, i16 2, i16 32, i16 -3, i16 -1, i16 17, i16 1, i16 16, i16 0], align 16
@tab24 = internal global [511 x i16] [i16 -451, i16 -117, i16 -43, i16 -25, i16 -15, i16 -7, i16 -3, i16 -1, i16 239, i16 254, i16 -1, i16 223, i16 253, i16 -3, i16 -1, i16 207, i16 252, i16 -1, i16 191, i16 251, i16 -5, i16 -1, i16 250, i16 -1, i16 175, i16 159, i16 -1, i16 249, i16 248, i16 -9, i16 -5, i16 -3, i16 -1, i16 143, i16 127, i16 247, i16 -1, i16 111, i16 246, i16 -3, i16 -1, i16 95, i16 245, i16 -1, i16 79, i16 244, i16 -71, i16 -7, i16 -3, i16 -1, i16 63, i16 243, i16 -1, i16 47, i16 242, i16 -5, i16 -1, i16 241, i16 -1, i16 31, i16 240, i16 -25, i16 -9, i16 -1, i16 15, i16 -3, i16 -1, i16 238, i16 222, i16 -1, i16 237, i16 206, i16 -7, i16 -3, i16 -1, i16 236, i16 221, i16 -1, i16 190, i16 235, i16 -3, i16 -1, i16 205, i16 220, i16 -1, i16 174, i16 234, i16 -15, i16 -7, i16 -3, i16 -1, i16 189, i16 219, i16 -1, i16 204, i16 158, i16 -3, i16 -1, i16 233, i16 173, i16 -1, i16 218, i16 188, i16 -7, i16 -3, i16 -1, i16 203, i16 142, i16 -1, i16 232, i16 157, i16 -3, i16 -1, i16 217, i16 126, i16 -1, i16 231, i16 172, i16 255, i16 -235, i16 -143, i16 -77, i16 -45, i16 -25, i16 -15, i16 -7, i16 -3, i16 -1, i16 202, i16 187, i16 -1, i16 141, i16 216, i16 -5, i16 -3, i16 -1, i16 14, i16 224, i16 13, i16 230, i16 -5, i16 -3, i16 -1, i16 110, i16 156, i16 201, i16 -1, i16 94, i16 186, i16 -9, i16 -5, i16 -1, i16 229, i16 -1, i16 171, i16 125, i16 -1, i16 215, i16 228, i16 -3, i16 -1, i16 140, i16 200, i16 -3, i16 -1, i16 78, i16 46, i16 62, i16 -15, i16 -7, i16 -3, i16 -1, i16 109, i16 214, i16 -1, i16 227, i16 155, i16 -3, i16 -1, i16 185, i16 170, i16 -1, i16 226, i16 30, i16 -7, i16 -3, i16 -1, i16 225, i16 93, i16 -1, i16 213, i16 124, i16 -3, i16 -1, i16 199, i16 77, i16 -1, i16 139, i16 184, i16 -31, i16 -15, i16 -7, i16 -3, i16 -1, i16 212, i16 154, i16 -1, i16 169, i16 108, i16 -3, i16 -1, i16 198, i16 61, i16 -1, i16 211, i16 45, i16 -7, i16 -3, i16 -1, i16 210, i16 29, i16 -1, i16 123, i16 183, i16 -3, i16 -1, i16 209, i16 92, i16 -1, i16 197, i16 138, i16 -17, i16 -7, i16 -3, i16 -1, i16 168, i16 153, i16 -1, i16 76, i16 196, i16 -3, i16 -1, i16 107, i16 182, i16 -3, i16 -1, i16 208, i16 12, i16 60, i16 -7, i16 -3, i16 -1, i16 195, i16 122, i16 -1, i16 167, i16 44, i16 -3, i16 -1, i16 194, i16 91, i16 -1, i16 181, i16 28, i16 -57, i16 -35, i16 -19, i16 -7, i16 -3, i16 -1, i16 137, i16 152, i16 -1, i16 193, i16 75, i16 -5, i16 -3, i16 -1, i16 192, i16 11, i16 59, i16 -3, i16 -1, i16 176, i16 10, i16 26, i16 -5, i16 -1, i16 180, i16 -1, i16 106, i16 166, i16 -3, i16 -1, i16 121, i16 151, i16 -3, i16 -1, i16 160, i16 9, i16 144, i16 -9, i16 -3, i16 -1, i16 179, i16 136, i16 -3, i16 -1, i16 43, i16 90, i16 178, i16 -7, i16 -3, i16 -1, i16 165, i16 27, i16 -1, i16 177, i16 105, i16 -1, i16 150, i16 164, i16 -17, i16 -9, i16 -5, i16 -3, i16 -1, i16 74, i16 120, i16 135, i16 -1, i16 58, i16 163, i16 -3, i16 -1, i16 89, i16 149, i16 -1, i16 42, i16 162, i16 -7, i16 -3, i16 -1, i16 161, i16 104, i16 -1, i16 134, i16 119, i16 -3, i16 -1, i16 73, i16 148, i16 -1, i16 57, i16 147, i16 -63, i16 -31, i16 -15, i16 -7, i16 -3, i16 -1, i16 88, i16 133, i16 -1, i16 41, i16 103, i16 -3, i16 -1, i16 118, i16 146, i16 -1, i16 25, i16 145, i16 -7, i16 -3, i16 -1, i16 72, i16 132, i16 -1, i16 87, i16 117, i16 -3, i16 -1, i16 56, i16 131, i16 -1, i16 102, i16 40, i16 -17, i16 -7, i16 -3, i16 -1, i16 130, i16 24, i16 -1, i16 71, i16 116, i16 -5, i16 -1, i16 129, i16 -1, i16 8, i16 128, i16 -1, i16 86, i16 101, i16 -7, i16 -5, i16 -1, i16 23, i16 -1, i16 7, i16 112, i16 115, i16 -3, i16 -1, i16 55, i16 39, i16 114, i16 -15, i16 -7, i16 -3, i16 -1, i16 70, i16 100, i16 -1, i16 85, i16 113, i16 -3, i16 -1, i16 54, i16 99, i16 -1, i16 69, i16 84, i16 -7, i16 -3, i16 -1, i16 38, i16 98, i16 -1, i16 22, i16 97, i16 -5, i16 -3, i16 -1, i16 6, i16 96, i16 53, i16 -1, i16 83, i16 68, i16 -51, i16 -37, i16 -23, i16 -15, i16 -9, i16 -3, i16 -1, i16 37, i16 82, i16 -1, i16 21, i16 -1, i16 5, i16 80, i16 -1, i16 81, i16 -1, i16 52, i16 67, i16 -3, i16 -1, i16 36, i16 66, i16 -1, i16 51, i16 20, i16 -9, i16 -5, i16 -1, i16 65, i16 -1, i16 4, i16 64, i16 -1, i16 35, i16 50, i16 -1, i16 19, i16 49, i16 -7, i16 -5, i16 -3, i16 -1, i16 3, i16 48, i16 34, i16 18, i16 -1, i16 33, i16 -1, i16 2, i16 32, i16 -3, i16 -1, i16 17, i16 1, i16 -1, i16 16, i16 0], align 16
@tab_c0 = internal global [31 x i16] [i16 -29, i16 -21, i16 -13, i16 -7, i16 -3, i16 -1, i16 11, i16 15, i16 -1, i16 13, i16 14, i16 -3, i16 -1, i16 7, i16 5, i16 9, i16 -3, i16 -1, i16 6, i16 3, i16 -1, i16 10, i16 12, i16 -3, i16 -1, i16 2, i16 1, i16 -1, i16 4, i16 8, i16 0], align 16
@tab_c1 = internal global [31 x i16] [i16 -15, i16 -7, i16 -3, i16 -1, i16 15, i16 14, i16 -1, i16 13, i16 12, i16 -3, i16 -1, i16 11, i16 10, i16 -1, i16 9, i16 8, i16 -7, i16 -3, i16 -1, i16 7, i16 6, i16 -1, i16 5, i16 4, i16 -3, i16 -1, i16 3, i16 2, i16 -1, i16 1, i16 0], align 16
@gmp = external global %struct.mpstr*, align 8
@__llvm_profile_raw_version = constant i64 72057594037927940, comdat
@__profn_init_layer3 = private constant [11 x i8] c"init_layer3"
@__profn_do_layer3 = private constant [9 x i8] c"do_layer3"
@__profn_tmp1.ll_III_get_side_info_2 = private constant [27 x i8] c"tmp1.ll:III_get_side_info_2"
@__profn_tmp1.ll_III_get_side_info_1 = private constant [27 x i8] c"tmp1.ll:III_get_side_info_1"
@__profn_tmp1.ll_III_get_scale_factors_2 = private constant [31 x i8] c"tmp1.ll:III_get_scale_factors_2"
@__profn_tmp1.ll_III_get_scale_factors_1 = private constant [31 x i8] c"tmp1.ll:III_get_scale_factors_1"
@__profn_tmp1.ll_III_dequantize_sample = private constant [29 x i8] c"tmp1.ll:III_dequantize_sample"
@__profn_tmp1.ll_III_i_stereo = private constant [20 x i8] c"tmp1.ll:III_i_stereo"
@__profn_tmp1.ll_III_antialias = private constant [21 x i8] c"tmp1.ll:III_antialias"
@__profn_tmp1.ll_III_hybrid = private constant [18 x i8] c"tmp1.ll:III_hybrid"
@__profn_tmp1.ll_get1bit = private constant [15 x i8] c"tmp1.ll:get1bit"
@__profn_tmp1.ll_dct36 = private constant [13 x i8] c"tmp1.ll:dct36"
@__profn_tmp1.ll_dct12 = private constant [13 x i8] c"tmp1.ll:dct12"
@__profc_init_layer3 = private global [45 x i64] zeroinitializer, section "__llvm_prf_cnts", align 8
@__profd_init_layer3 = private global { i64, i64, i64*, i8*, i8*, i32, [1 x i16] } { i64 -1827482697601242779, i64 926544273374, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i32 0, i32 0), i8* bitcast (void (i32)* @init_layer3 to i8*), i8* null, i32 45, [1 x i16] zeroinitializer }, section "__llvm_prf_data", align 8
@__profc_do_layer3 = private global [26 x i64] zeroinitializer, section "__llvm_prf_cnts", align 8
@__profd_do_layer3 = private global { i64, i64, i64*, i8*, i8*, i32, [1 x i16] } { i64 -3448264704854870602, i64 411161144109, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i32 0, i32 0), i8* bitcast (i32 (%struct.frame*, i8*, i32*)* @do_layer3 to i8*), i8* null, i32 26, [1 x i16] zeroinitializer }, section "__llvm_prf_data", align 8
@__profc_tmp1.ll_III_get_side_info_2 = private global [12 x i64] zeroinitializer, section "__llvm_prf_cnts", align 8
@__profd_tmp1.ll_III_get_side_info_2 = private global { i64, i64, i64*, i8*, i8*, i32, [1 x i16] } { i64 4420965145019845931, i64 72057777752425775, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i32 0, i32 0), i8* null, i8* null, i32 12, [1 x i16] zeroinitializer }, section "__llvm_prf_data", align 8
@__profc_tmp1.ll_III_get_side_info_1 = private global [12 x i64] zeroinitializer, section "__llvm_prf_cnts", align 8
@__profd_tmp1.ll_III_get_side_info_1 = private global { i64, i64, i64*, i8*, i8*, i32, [1 x i16] } { i64 -5881875163307275333, i64 72057786493345762, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i32 0, i32 0), i8* null, i8* null, i32 12, [1 x i16] zeroinitializer }, section "__llvm_prf_data", align 8
@__profc_tmp1.ll_III_get_scale_factors_2 = private global [9 x i64] zeroinitializer, section "__llvm_prf_cnts", align 8
@__profd_tmp1.ll_III_get_scale_factors_2 = private global { i64, i64, i64*, i8*, i8*, i32, [1 x i16] } { i64 -6951660328268786863, i64 156028251100, i64* getelementptr inbounds ([9 x i64], [9 x i64]* @__profc_tmp1.ll_III_get_scale_factors_2, i32 0, i32 0), i8* null, i8* null, i32 9, [1 x i16] zeroinitializer }, section "__llvm_prf_data", align 8
@__profc_tmp1.ll_III_get_scale_factors_1 = private global [17 x i64] zeroinitializer, section "__llvm_prf_cnts", align 8
@__profd_tmp1.ll_III_get_scale_factors_1 = private global { i64, i64, i64*, i8*, i8*, i32, [1 x i16] } { i64 -7464547893712236699, i64 320010851122, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i32 0, i32 0), i8* null, i8* null, i32 17, [1 x i16] zeroinitializer }, section "__llvm_prf_data", align 8
@__profc_tmp1.ll_III_dequantize_sample = private global [66 x i64] zeroinitializer, section "__llvm_prf_cnts", align 8
@__profd_tmp1.ll_III_dequantize_sample = private global { i64, i64, i64*, i8*, i8*, i32, [1 x i16] } { i64 -9052181047824342149, i64 72058667930580347, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i32 0, i32 0), i8* null, i8* null, i32 66, [1 x i16] zeroinitializer }, section "__llvm_prf_data", align 8
@__profc_tmp1.ll_III_i_stereo = private global [22 x i64] zeroinitializer, section "__llvm_prf_cnts", align 8
@__profd_tmp1.ll_III_i_stereo = private global { i64, i64, i64*, i8*, i8*, i32, [1 x i16] } { i64 -8875732122183746631, i64 384734203498, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i32 0, i32 0), i8* null, i8* null, i32 22, [1 x i16] zeroinitializer }, section "__llvm_prf_data", align 8
@__profc_tmp1.ll_III_antialias = private global [5 x i64] zeroinitializer, section "__llvm_prf_cnts", align 8
@__profd_tmp1.ll_III_antialias = private global { i64, i64, i64*, i8*, i8*, i32, [1 x i16] } { i64 -6771121219056586842, i64 85400765369, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_tmp1.ll_III_antialias, i32 0, i32 0), i8* null, i8* null, i32 5, [1 x i16] zeroinitializer }, section "__llvm_prf_data", align 8
@__profc_tmp1.ll_III_hybrid = private global [7 x i64] zeroinitializer, section "__llvm_prf_cnts", align 8
@__profd_tmp1.ll_III_hybrid = private global { i64, i64, i64*, i8*, i8*, i32, [1 x i16] } { i64 -7122707863311529525, i64 126310012597, i64* getelementptr inbounds ([7 x i64], [7 x i64]* @__profc_tmp1.ll_III_hybrid, i32 0, i32 0), i8* null, i8* null, i32 7, [1 x i16] zeroinitializer }, section "__llvm_prf_data", align 8
@__profc_tmp1.ll_get1bit = private global [1 x i64] zeroinitializer, section "__llvm_prf_cnts", align 8
@__profd_tmp1.ll_get1bit = private global { i64, i64, i64*, i8*, i8*, i32, [1 x i16] } { i64 5275057696192115046, i64 12884901887, i64* getelementptr inbounds ([1 x i64], [1 x i64]* @__profc_tmp1.ll_get1bit, i32 0, i32 0), i8* null, i8* null, i32 1, [1 x i16] zeroinitializer }, section "__llvm_prf_data", align 8
@__profc_tmp1.ll_dct36 = private global [1 x i64] zeroinitializer, section "__llvm_prf_cnts", align 8
@__profd_tmp1.ll_dct36 = private global { i64, i64, i64*, i8*, i8*, i32, [1 x i16] } { i64 8151889491414312092, i64 12884901887, i64* getelementptr inbounds ([1 x i64], [1 x i64]* @__profc_tmp1.ll_dct36, i32 0, i32 0), i8* null, i8* null, i32 1, [1 x i16] zeroinitializer }, section "__llvm_prf_data", align 8
@__profc_tmp1.ll_dct12 = private global [1 x i64] zeroinitializer, section "__llvm_prf_cnts", align 8
@__profd_tmp1.ll_dct12 = private global { i64, i64, i64*, i8*, i8*, i32, [1 x i16] } { i64 -8133112763824792678, i64 12884901887, i64* getelementptr inbounds ([1 x i64], [1 x i64]* @__profc_tmp1.ll_dct12, i32 0, i32 0), i8* null, i8* null, i32 1, [1 x i16] zeroinitializer }, section "__llvm_prf_data", align 8
@__llvm_prf_nm = private constant [130 x i8] c"\95\02\7Fx\DA}\8DA\0E\C20\0C\04\C5\87\90\D2J\1C\F8A^a\B9\89\0B\96\DC\A4\C4\E6P^O9PaQ\F5\E6\9D\D9\95\B9\B0\81\E0B\AD?\E5\FA\BDl\9A\C3Y\E4\1Ac\84\1B\19(g\02.c\85\EE\C0\85\7F\97P\08FLV\9B\EEm\9D\F7\FBL\8F'\16\E3\17\81\E24\0B9\CB\A0F\8D\AA\83\9F:\0A\A3:z_\86\C6yC\EB\DF0\B0m9'\EB/\BF)to\AAWa\87", section "__llvm_prf_names"
@llvm.used = appending global [14 x i8*] [i8* bitcast ({ i64, i64, i64*, i8*, i8*, i32, [1 x i16] }* @__profd_init_layer3 to i8*), i8* bitcast ({ i64, i64, i64*, i8*, i8*, i32, [1 x i16] }* @__profd_do_layer3 to i8*), i8* bitcast ({ i64, i64, i64*, i8*, i8*, i32, [1 x i16] }* @__profd_tmp1.ll_III_get_side_info_2 to i8*), i8* bitcast ({ i64, i64, i64*, i8*, i8*, i32, [1 x i16] }* @__profd_tmp1.ll_III_get_side_info_1 to i8*), i8* bitcast ({ i64, i64, i64*, i8*, i8*, i32, [1 x i16] }* @__profd_tmp1.ll_III_get_scale_factors_2 to i8*), i8* bitcast ({ i64, i64, i64*, i8*, i8*, i32, [1 x i16] }* @__profd_tmp1.ll_III_get_scale_factors_1 to i8*), i8* bitcast ({ i64, i64, i64*, i8*, i8*, i32, [1 x i16] }* @__profd_tmp1.ll_III_dequantize_sample to i8*), i8* bitcast ({ i64, i64, i64*, i8*, i8*, i32, [1 x i16] }* @__profd_tmp1.ll_III_i_stereo to i8*), i8* bitcast ({ i64, i64, i64*, i8*, i8*, i32, [1 x i16] }* @__profd_tmp1.ll_III_antialias to i8*), i8* bitcast ({ i64, i64, i64*, i8*, i8*, i32, [1 x i16] }* @__profd_tmp1.ll_III_hybrid to i8*), i8* bitcast ({ i64, i64, i64*, i8*, i8*, i32, [1 x i16] }* @__profd_tmp1.ll_get1bit to i8*), i8* bitcast ({ i64, i64, i64*, i8*, i8*, i32, [1 x i16] }* @__profd_tmp1.ll_dct36 to i8*), i8* bitcast ({ i64, i64, i64*, i8*, i8*, i32, [1 x i16] }* @__profd_tmp1.ll_dct12 to i8*), i8* getelementptr inbounds ([130 x i8], [130 x i8]* @__llvm_prf_nm, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: nounwind uwtable
define void @init_layer3(i32) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  %12 = alloca %struct.bandInfoStruct*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i16*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  store i32 -256, i32* %3, align 4
  br label %24

; <label>:24:                                     ; preds = %37, %1
  %25 = load i32, i32* %3, align 4
  %26 = icmp slt i32 %25, 122
  br i1 %26, label %27, label %41

; <label>:27:                                     ; preds = %24
  %28 = load i32, i32* %3, align 4
  %29 = add nsw i32 %28, 210
  %30 = sitofp i32 %29 to double
  %31 = fmul double -2.500000e-01, %30
  %32 = call double @pow(double 2.000000e+00, double %31) #4
  %33 = load i32, i32* %3, align 4
  %34 = add nsw i32 %33, 256
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [378 x double], [378 x double]* @gainpow2, i64 0, i64 %35
  store double %32, double* %36, align 8
  br label %37

; <label>:37:                                     ; preds = %27
  %pgocount = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 26)
  %38 = add i64 %pgocount, 1
  store i64 %38, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 26)
  %39 = load i32, i32* %3, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %3, align 4
  br label %24

; <label>:41:                                     ; preds = %24
  store i32 0, i32* %3, align 4
  br label %42

; <label>:42:                                     ; preds = %52, %41
  %43 = load i32, i32* %3, align 4
  %44 = icmp slt i32 %43, 8207
  br i1 %44, label %45, label %56

; <label>:45:                                     ; preds = %42
  %46 = load i32, i32* %3, align 4
  %47 = sitofp i32 %46 to double
  %48 = call double @pow(double %47, double 0x3FF5555555555555) #4
  %49 = load i32, i32* %3, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i64 0, i64 %50
  store double %48, double* %51, align 8
  br label %52

; <label>:52:                                     ; preds = %45
  %pgocount1 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 27)
  %53 = add i64 %pgocount1, 1
  store i64 %53, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 27)
  %54 = load i32, i32* %3, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %3, align 4
  br label %42

; <label>:56:                                     ; preds = %42
  store i32 0, i32* %3, align 4
  br label %57

; <label>:57:                                     ; preds = %86, %56
  %58 = load i32, i32* %3, align 4
  %59 = icmp slt i32 %58, 8
  br i1 %59, label %60, label %90

; <label>:60:                                     ; preds = %57
  %61 = load i32, i32* %3, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds [8 x double], [8 x double]* @init_layer3.Ci, i64 0, i64 %62
  %64 = load double, double* %63, align 8
  %65 = load i32, i32* %3, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds [8 x double], [8 x double]* @init_layer3.Ci, i64 0, i64 %66
  %68 = load double, double* %67, align 8
  %69 = fmul double %64, %68
  %70 = fadd double 1.000000e+00, %69
  %71 = call double @sqrt(double %70) #4
  store double %71, double* %7, align 8
  %72 = load double, double* %7, align 8
  %73 = fdiv double 1.000000e+00, %72
  %74 = load i32, i32* %3, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [8 x double], [8 x double]* @aa_cs, i64 0, i64 %75
  store double %73, double* %76, align 8
  %77 = load i32, i32* %3, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds [8 x double], [8 x double]* @init_layer3.Ci, i64 0, i64 %78
  %80 = load double, double* %79, align 8
  %81 = load double, double* %7, align 8
  %82 = fdiv double %80, %81
  %83 = load i32, i32* %3, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [8 x double], [8 x double]* @aa_ca, i64 0, i64 %84
  store double %82, double* %85, align 8
  br label %86

; <label>:86:                                     ; preds = %60
  %pgocount2 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 28)
  %87 = add i64 %pgocount2, 1
  store i64 %87, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 28)
  %88 = load i32, i32* %3, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %3, align 4
  br label %57

; <label>:90:                                     ; preds = %57
  store i32 0, i32* %3, align 4
  br label %91

; <label>:91:                                     ; preds = %143, %90
  %92 = load i32, i32* %3, align 4
  %93 = icmp slt i32 %92, 18
  br i1 %93, label %94, label %147

; <label>:94:                                     ; preds = %91
  %95 = load i32, i32* %3, align 4
  %96 = add nsw i32 %95, 0
  %97 = mul nsw i32 2, %96
  %98 = add nsw i32 %97, 1
  %99 = sitofp i32 %98 to double
  %100 = fmul double 0x3FA657184AE74487, %99
  %101 = call double @sin(double %100) #4
  %102 = fmul double 5.000000e-01, %101
  %103 = load i32, i32* %3, align 4
  %104 = add nsw i32 %103, 0
  %105 = mul nsw i32 2, %104
  %106 = add nsw i32 %105, 19
  %107 = sitofp i32 %106 to double
  %108 = fmul double 0x400921FB54442D18, %107
  %109 = fdiv double %108, 7.200000e+01
  %110 = call double @cos(double %109) #4
  %111 = fdiv double %102, %110
  %112 = load i32, i32* %3, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds [36 x double], [36 x double]* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i64 0, i64 1), i64 0, i64 %113
  store double %111, double* %114, align 8
  %115 = load i32, i32* %3, align 4
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [36 x double], [36 x double]* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i64 0, i64 0), i64 0, i64 %116
  store double %111, double* %117, align 8
  %118 = load i32, i32* %3, align 4
  %119 = add nsw i32 %118, 18
  %120 = mul nsw i32 2, %119
  %121 = add nsw i32 %120, 1
  %122 = sitofp i32 %121 to double
  %123 = fmul double 0x3FA657184AE74487, %122
  %124 = call double @sin(double %123) #4
  %125 = fmul double 5.000000e-01, %124
  %126 = load i32, i32* %3, align 4
  %127 = add nsw i32 %126, 18
  %128 = mul nsw i32 2, %127
  %129 = add nsw i32 %128, 19
  %130 = sitofp i32 %129 to double
  %131 = fmul double 0x400921FB54442D18, %130
  %132 = fdiv double %131, 7.200000e+01
  %133 = call double @cos(double %132) #4
  %134 = fdiv double %125, %133
  %135 = load i32, i32* %3, align 4
  %136 = add nsw i32 %135, 18
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [36 x double], [36 x double]* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i64 0, i64 3), i64 0, i64 %137
  store double %134, double* %138, align 8
  %139 = load i32, i32* %3, align 4
  %140 = add nsw i32 %139, 18
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds [36 x double], [36 x double]* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i64 0, i64 0), i64 0, i64 %141
  store double %134, double* %142, align 8
  br label %143

; <label>:143:                                    ; preds = %94
  %pgocount3 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 29)
  %144 = add i64 %pgocount3, 1
  store i64 %144, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 29)
  %145 = load i32, i32* %3, align 4
  %146 = add nsw i32 %145, 1
  store i32 %146, i32* %3, align 4
  br label %91

; <label>:147:                                    ; preds = %91
  store i32 0, i32* %3, align 4
  br label %148

; <label>:148:                                    ; preds = %225, %147
  %149 = load i32, i32* %3, align 4
  %150 = icmp slt i32 %149, 6
  br i1 %150, label %151, label %229

; <label>:151:                                    ; preds = %148
  %152 = load i32, i32* %3, align 4
  %153 = add nsw i32 %152, 18
  %154 = mul nsw i32 2, %153
  %155 = add nsw i32 %154, 19
  %156 = sitofp i32 %155 to double
  %157 = fmul double 0x400921FB54442D18, %156
  %158 = fdiv double %157, 7.200000e+01
  %159 = call double @cos(double %158) #4
  %160 = fdiv double 5.000000e-01, %159
  %161 = load i32, i32* %3, align 4
  %162 = add nsw i32 %161, 18
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds [36 x double], [36 x double]* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i64 0, i64 1), i64 0, i64 %163
  store double %160, double* %164, align 8
  %165 = load i32, i32* %3, align 4
  %166 = add nsw i32 %165, 12
  %167 = mul nsw i32 2, %166
  %168 = add nsw i32 %167, 19
  %169 = sitofp i32 %168 to double
  %170 = fmul double 0x400921FB54442D18, %169
  %171 = fdiv double %170, 7.200000e+01
  %172 = call double @cos(double %171) #4
  %173 = fdiv double 5.000000e-01, %172
  %174 = load i32, i32* %3, align 4
  %175 = add nsw i32 %174, 12
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds [36 x double], [36 x double]* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i64 0, i64 3), i64 0, i64 %176
  store double %173, double* %177, align 8
  %178 = load i32, i32* %3, align 4
  %179 = mul nsw i32 2, %178
  %180 = add nsw i32 %179, 13
  %181 = sitofp i32 %180 to double
  %182 = fmul double 0x3FC0C152382D7365, %181
  %183 = call double @sin(double %182) #4
  %184 = fmul double 5.000000e-01, %183
  %185 = load i32, i32* %3, align 4
  %186 = add nsw i32 %185, 24
  %187 = mul nsw i32 2, %186
  %188 = add nsw i32 %187, 19
  %189 = sitofp i32 %188 to double
  %190 = fmul double 0x400921FB54442D18, %189
  %191 = fdiv double %190, 7.200000e+01
  %192 = call double @cos(double %191) #4
  %193 = fdiv double %184, %192
  %194 = load i32, i32* %3, align 4
  %195 = add nsw i32 %194, 24
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds [36 x double], [36 x double]* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i64 0, i64 1), i64 0, i64 %196
  store double %193, double* %197, align 8
  %198 = load i32, i32* %3, align 4
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds [36 x double], [36 x double]* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i64 0, i64 3), i64 0, i64 %199
  store double 0.000000e+00, double* %200, align 8
  %201 = load i32, i32* %3, align 4
  %202 = add nsw i32 %201, 30
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds [36 x double], [36 x double]* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i64 0, i64 1), i64 0, i64 %203
  store double 0.000000e+00, double* %204, align 8
  %205 = load i32, i32* %3, align 4
  %206 = mul nsw i32 2, %205
  %207 = add nsw i32 %206, 1
  %208 = sitofp i32 %207 to double
  %209 = fmul double 0x3FC0C152382D7365, %208
  %210 = call double @sin(double %209) #4
  %211 = fmul double 5.000000e-01, %210
  %212 = load i32, i32* %3, align 4
  %213 = add nsw i32 %212, 6
  %214 = mul nsw i32 2, %213
  %215 = add nsw i32 %214, 19
  %216 = sitofp i32 %215 to double
  %217 = fmul double 0x400921FB54442D18, %216
  %218 = fdiv double %217, 7.200000e+01
  %219 = call double @cos(double %218) #4
  %220 = fdiv double %211, %219
  %221 = load i32, i32* %3, align 4
  %222 = add nsw i32 %221, 6
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds [36 x double], [36 x double]* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i64 0, i64 3), i64 0, i64 %223
  store double %220, double* %224, align 8
  br label %225

; <label>:225:                                    ; preds = %151
  %pgocount4 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 30)
  %226 = add i64 %pgocount4, 1
  store i64 %226, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 30)
  %227 = load i32, i32* %3, align 4
  %228 = add nsw i32 %227, 1
  store i32 %228, i32* %3, align 4
  br label %148

; <label>:229:                                    ; preds = %148
  store i32 0, i32* %3, align 4
  br label %230

; <label>:230:                                    ; preds = %241, %229
  %231 = load i32, i32* %3, align 4
  %232 = icmp slt i32 %231, 9
  br i1 %232, label %233, label %245

; <label>:233:                                    ; preds = %230
  %234 = load i32, i32* %3, align 4
  %235 = sitofp i32 %234 to double
  %236 = fmul double 0x3FC657184AE74487, %235
  %237 = call double @cos(double %236) #4
  %238 = load i32, i32* %3, align 4
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds [9 x double], [9 x double]* @COS9, i64 0, i64 %239
  store double %237, double* %240, align 8
  br label %241

; <label>:241:                                    ; preds = %233
  %pgocount5 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 31)
  %242 = add i64 %pgocount5, 1
  store i64 %242, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 31)
  %243 = load i32, i32* %3, align 4
  %244 = add nsw i32 %243, 1
  store i32 %244, i32* %3, align 4
  br label %230

; <label>:245:                                    ; preds = %230
  store i32 0, i32* %3, align 4
  br label %246

; <label>:246:                                    ; preds = %261, %245
  %247 = load i32, i32* %3, align 4
  %248 = icmp slt i32 %247, 9
  br i1 %248, label %249, label %265

; <label>:249:                                    ; preds = %246
  %250 = load i32, i32* %3, align 4
  %251 = mul nsw i32 %250, 2
  %252 = add nsw i32 %251, 1
  %253 = sitofp i32 %252 to double
  %254 = fmul double 0x400921FB54442D18, %253
  %255 = fdiv double %254, 3.600000e+01
  %256 = call double @cos(double %255) #4
  %257 = fdiv double 5.000000e-01, %256
  %258 = load i32, i32* %3, align 4
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds [9 x double], [9 x double]* @tfcos36, i64 0, i64 %259
  store double %257, double* %260, align 8
  br label %261

; <label>:261:                                    ; preds = %249
  %pgocount6 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 32)
  %262 = add i64 %pgocount6, 1
  store i64 %262, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 32)
  %263 = load i32, i32* %3, align 4
  %264 = add nsw i32 %263, 1
  store i32 %264, i32* %3, align 4
  br label %246

; <label>:265:                                    ; preds = %246
  store i32 0, i32* %3, align 4
  br label %266

; <label>:266:                                    ; preds = %281, %265
  %267 = load i32, i32* %3, align 4
  %268 = icmp slt i32 %267, 3
  br i1 %268, label %269, label %285

; <label>:269:                                    ; preds = %266
  %270 = load i32, i32* %3, align 4
  %271 = mul nsw i32 %270, 2
  %272 = add nsw i32 %271, 1
  %273 = sitofp i32 %272 to double
  %274 = fmul double 0x400921FB54442D18, %273
  %275 = fdiv double %274, 1.200000e+01
  %276 = call double @cos(double %275) #4
  %277 = fdiv double 5.000000e-01, %276
  %278 = load i32, i32* %3, align 4
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds [3 x double], [3 x double]* @tfcos12, i64 0, i64 %279
  store double %277, double* %280, align 8
  br label %281

; <label>:281:                                    ; preds = %269
  %pgocount7 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 33)
  %282 = add i64 %pgocount7, 1
  store i64 %282, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 33)
  %283 = load i32, i32* %3, align 4
  %284 = add nsw i32 %283, 1
  store i32 %284, i32* %3, align 4
  br label %266

; <label>:285:                                    ; preds = %266
  %286 = call double @cos(double 0x3FE0C152382D7365) #4
  store double %286, double* @COS6_1, align 8
  %287 = call double @cos(double 0x3FF0C152382D7365) #4
  store double %287, double* @COS6_2, align 8
  store i32 0, i32* %3, align 4
  br label %288

; <label>:288:                                    ; preds = %335, %285
  %289 = load i32, i32* %3, align 4
  %290 = icmp slt i32 %289, 12
  br i1 %290, label %291, label %339

; <label>:291:                                    ; preds = %288
  %292 = load i32, i32* %3, align 4
  %293 = mul nsw i32 2, %292
  %294 = add nsw i32 %293, 1
  %295 = sitofp i32 %294 to double
  %296 = fmul double 0x3FC0C152382D7365, %295
  %297 = call double @sin(double %296) #4
  %298 = fmul double 5.000000e-01, %297
  %299 = load i32, i32* %3, align 4
  %300 = mul nsw i32 2, %299
  %301 = add nsw i32 %300, 7
  %302 = sitofp i32 %301 to double
  %303 = fmul double 0x400921FB54442D18, %302
  %304 = fdiv double %303, 2.400000e+01
  %305 = call double @cos(double %304) #4
  %306 = fdiv double %298, %305
  %307 = load i32, i32* %3, align 4
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds [36 x double], [36 x double]* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i64 0, i64 2), i64 0, i64 %308
  store double %306, double* %309, align 8
  store i32 0, i32* %4, align 4
  br label %310

; <label>:310:                                    ; preds = %330, %291
  %311 = load i32, i32* %4, align 4
  %312 = icmp slt i32 %311, 6
  br i1 %312, label %313, label %334

; <label>:313:                                    ; preds = %310
  %314 = load i32, i32* %3, align 4
  %315 = mul nsw i32 2, %314
  %316 = add nsw i32 %315, 7
  %317 = load i32, i32* %4, align 4
  %318 = mul nsw i32 2, %317
  %319 = add nsw i32 %318, 1
  %320 = mul nsw i32 %316, %319
  %321 = sitofp i32 %320 to double
  %322 = fmul double 0x3FC0C152382D7365, %321
  %323 = call double @cos(double %322) #4
  %324 = load i32, i32* %3, align 4
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds [12 x [6 x double]], [12 x [6 x double]]* @COS1, i64 0, i64 %325
  %327 = load i32, i32* %4, align 4
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds [6 x double], [6 x double]* %326, i64 0, i64 %328
  store double %323, double* %329, align 8
  br label %330

; <label>:330:                                    ; preds = %313
  %pgocount8 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 7)
  %331 = add i64 %pgocount8, 1
  store i64 %331, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 7)
  %332 = load i32, i32* %4, align 4
  %333 = add nsw i32 %332, 1
  store i32 %333, i32* %4, align 4
  br label %310

; <label>:334:                                    ; preds = %310
  br label %335

; <label>:335:                                    ; preds = %334
  %pgocount9 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 34)
  %336 = add i64 %pgocount9, 1
  store i64 %336, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 34)
  %337 = load i32, i32* %3, align 4
  %338 = add nsw i32 %337, 1
  store i32 %338, i32* %3, align 4
  br label %288

; <label>:339:                                    ; preds = %288
  store i32 0, i32* %4, align 4
  br label %340

; <label>:340:                                    ; preds = %397, %339
  %341 = load i32, i32* %4, align 4
  %342 = icmp slt i32 %341, 4
  br i1 %342, label %343, label %401

; <label>:343:                                    ; preds = %340
  store i32 0, i32* %3, align 4
  br label %344

; <label>:344:                                    ; preds = %365, %343
  %345 = load i32, i32* %3, align 4
  %346 = load i32, i32* %4, align 4
  %347 = sext i32 %346 to i64
  %348 = getelementptr inbounds [4 x i32], [4 x i32]* @init_layer3.len, i64 0, i64 %347
  %349 = load i32, i32* %348, align 4
  %350 = icmp slt i32 %345, %349
  br i1 %350, label %351, label %369

; <label>:351:                                    ; preds = %344
  %352 = load i32, i32* %4, align 4
  %353 = sext i32 %352 to i64
  %354 = getelementptr inbounds [4 x [36 x double]], [4 x [36 x double]]* @win, i64 0, i64 %353
  %355 = load i32, i32* %3, align 4
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds [36 x double], [36 x double]* %354, i64 0, i64 %356
  %358 = load double, double* %357, align 8
  %359 = load i32, i32* %4, align 4
  %360 = sext i32 %359 to i64
  %361 = getelementptr inbounds [4 x [36 x double]], [4 x [36 x double]]* @win1, i64 0, i64 %360
  %362 = load i32, i32* %3, align 4
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds [36 x double], [36 x double]* %361, i64 0, i64 %363
  store double %358, double* %364, align 8
  br label %365

; <label>:365:                                    ; preds = %351
  %pgocount10 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 8)
  %366 = add i64 %pgocount10, 1
  store i64 %366, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 8)
  %367 = load i32, i32* %3, align 4
  %368 = add nsw i32 %367, 2
  store i32 %368, i32* %3, align 4
  br label %344

; <label>:369:                                    ; preds = %344
  store i32 1, i32* %3, align 4
  br label %370

; <label>:370:                                    ; preds = %392, %369
  %371 = load i32, i32* %3, align 4
  %372 = load i32, i32* %4, align 4
  %373 = sext i32 %372 to i64
  %374 = getelementptr inbounds [4 x i32], [4 x i32]* @init_layer3.len, i64 0, i64 %373
  %375 = load i32, i32* %374, align 4
  %376 = icmp slt i32 %371, %375
  br i1 %376, label %377, label %396

; <label>:377:                                    ; preds = %370
  %378 = load i32, i32* %4, align 4
  %379 = sext i32 %378 to i64
  %380 = getelementptr inbounds [4 x [36 x double]], [4 x [36 x double]]* @win, i64 0, i64 %379
  %381 = load i32, i32* %3, align 4
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds [36 x double], [36 x double]* %380, i64 0, i64 %382
  %384 = load double, double* %383, align 8
  %385 = fsub double -0.000000e+00, %384
  %386 = load i32, i32* %4, align 4
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds [4 x [36 x double]], [4 x [36 x double]]* @win1, i64 0, i64 %387
  %389 = load i32, i32* %3, align 4
  %390 = sext i32 %389 to i64
  %391 = getelementptr inbounds [36 x double], [36 x double]* %388, i64 0, i64 %390
  store double %385, double* %391, align 8
  br label %392

; <label>:392:                                    ; preds = %377
  %pgocount11 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 9)
  %393 = add i64 %pgocount11, 1
  store i64 %393, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 9)
  %394 = load i32, i32* %3, align 4
  %395 = add nsw i32 %394, 2
  store i32 %395, i32* %3, align 4
  br label %370

; <label>:396:                                    ; preds = %370
  br label %397

; <label>:397:                                    ; preds = %396
  %pgocount12 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 35)
  %398 = add i64 %pgocount12, 1
  store i64 %398, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 35)
  %399 = load i32, i32* %4, align 4
  %400 = add nsw i32 %399, 1
  store i32 %400, i32* %4, align 4
  br label %340

; <label>:401:                                    ; preds = %340
  store i32 0, i32* %3, align 4
  br label %402

; <label>:402:                                    ; preds = %505, %401
  %403 = load i32, i32* %3, align 4
  %404 = icmp slt i32 %403, 16
  br i1 %404, label %405, label %509

; <label>:405:                                    ; preds = %402
  %406 = load i32, i32* %3, align 4
  %407 = sitofp i32 %406 to double
  %408 = fmul double %407, 0x400921FB54442D18
  %409 = fdiv double %408, 1.200000e+01
  %410 = call double @tan(double %409) #4
  store double %410, double* %8, align 8
  %411 = load double, double* %8, align 8
  %412 = load double, double* %8, align 8
  %413 = fadd double 1.000000e+00, %412
  %414 = fdiv double %411, %413
  %415 = load i32, i32* %3, align 4
  %416 = sext i32 %415 to i64
  %417 = getelementptr inbounds [16 x double], [16 x double]* @tan1_1, i64 0, i64 %416
  store double %414, double* %417, align 8
  %418 = load double, double* %8, align 8
  %419 = fadd double 1.000000e+00, %418
  %420 = fdiv double 1.000000e+00, %419
  %421 = load i32, i32* %3, align 4
  %422 = sext i32 %421 to i64
  %423 = getelementptr inbounds [16 x double], [16 x double]* @tan2_1, i64 0, i64 %422
  store double %420, double* %423, align 8
  %424 = load double, double* %8, align 8
  %425 = fmul double 0x3FF6A09E667F3BCD, %424
  %426 = load double, double* %8, align 8
  %427 = fadd double 1.000000e+00, %426
  %428 = fdiv double %425, %427
  %429 = load i32, i32* %3, align 4
  %430 = sext i32 %429 to i64
  %431 = getelementptr inbounds [16 x double], [16 x double]* @tan1_2, i64 0, i64 %430
  store double %428, double* %431, align 8
  %432 = load double, double* %8, align 8
  %433 = fadd double 1.000000e+00, %432
  %434 = fdiv double 0x3FF6A09E667F3BCD, %433
  %435 = load i32, i32* %3, align 4
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds [16 x double], [16 x double]* @tan2_2, i64 0, i64 %436
  store double %434, double* %437, align 8
  store i32 0, i32* %4, align 4
  br label %438

; <label>:438:                                    ; preds = %500, %405
  %439 = load i32, i32* %4, align 4
  %440 = icmp slt i32 %439, 2
  br i1 %440, label %441, label %504

; <label>:441:                                    ; preds = %438
  %442 = load i32, i32* %4, align 4
  %443 = sitofp i32 %442 to double
  %444 = fadd double %443, 1.000000e+00
  %445 = fmul double -2.500000e-01, %444
  %446 = call double @pow(double 2.000000e+00, double %445) #4
  store double %446, double* %9, align 8
  store double 1.000000e+00, double* %10, align 8
  store double 1.000000e+00, double* %11, align 8
  %447 = load i32, i32* %3, align 4
  %448 = icmp sgt i32 %447, 0
  br i1 %448, label %449, label %469

; <label>:449:                                    ; preds = %441
  %450 = load i32, i32* %3, align 4
  %451 = and i32 %450, 1
  %452 = icmp ne i32 %451, 0
  br i1 %452, label %453, label %461

; <label>:453:                                    ; preds = %449
  %pgocount13 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 24)
  %454 = add i64 %pgocount13, 1
  store i64 %454, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 24)
  %455 = load double, double* %9, align 8
  %456 = load i32, i32* %3, align 4
  %457 = sitofp i32 %456 to double
  %458 = fadd double %457, 1.000000e+00
  %459 = fmul double %458, 5.000000e-01
  %460 = call double @pow(double %455, double %459) #4
  store double %460, double* %10, align 8
  br label %468

; <label>:461:                                    ; preds = %449
  %pgocount14 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 25)
  %462 = add i64 %pgocount14, 1
  store i64 %462, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 25)
  %463 = load double, double* %9, align 8
  %464 = load i32, i32* %3, align 4
  %465 = sitofp i32 %464 to double
  %466 = fmul double %465, 5.000000e-01
  %467 = call double @pow(double %463, double %466) #4
  store double %467, double* %11, align 8
  br label %468

; <label>:468:                                    ; preds = %461, %453
  br label %469

; <label>:469:                                    ; preds = %468, %441
  %470 = load double, double* %10, align 8
  %471 = load i32, i32* %4, align 4
  %472 = sext i32 %471 to i64
  %473 = getelementptr inbounds [2 x [16 x double]], [2 x [16 x double]]* @pow1_1, i64 0, i64 %472
  %474 = load i32, i32* %3, align 4
  %475 = sext i32 %474 to i64
  %476 = getelementptr inbounds [16 x double], [16 x double]* %473, i64 0, i64 %475
  store double %470, double* %476, align 8
  %477 = load double, double* %11, align 8
  %478 = load i32, i32* %4, align 4
  %479 = sext i32 %478 to i64
  %480 = getelementptr inbounds [2 x [16 x double]], [2 x [16 x double]]* @pow2_1, i64 0, i64 %479
  %481 = load i32, i32* %3, align 4
  %482 = sext i32 %481 to i64
  %483 = getelementptr inbounds [16 x double], [16 x double]* %480, i64 0, i64 %482
  store double %477, double* %483, align 8
  %484 = load double, double* %10, align 8
  %485 = fmul double 0x3FF6A09E667F3BCD, %484
  %486 = load i32, i32* %4, align 4
  %487 = sext i32 %486 to i64
  %488 = getelementptr inbounds [2 x [16 x double]], [2 x [16 x double]]* @pow1_2, i64 0, i64 %487
  %489 = load i32, i32* %3, align 4
  %490 = sext i32 %489 to i64
  %491 = getelementptr inbounds [16 x double], [16 x double]* %488, i64 0, i64 %490
  store double %485, double* %491, align 8
  %492 = load double, double* %11, align 8
  %493 = fmul double 0x3FF6A09E667F3BCD, %492
  %494 = load i32, i32* %4, align 4
  %495 = sext i32 %494 to i64
  %496 = getelementptr inbounds [2 x [16 x double]], [2 x [16 x double]]* @pow2_2, i64 0, i64 %495
  %497 = load i32, i32* %3, align 4
  %498 = sext i32 %497 to i64
  %499 = getelementptr inbounds [16 x double], [16 x double]* %496, i64 0, i64 %498
  store double %493, double* %499, align 8
  br label %500

; <label>:500:                                    ; preds = %469
  %pgocount15 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 10)
  %501 = add i64 %pgocount15, 1
  store i64 %501, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 10)
  %502 = load i32, i32* %4, align 4
  %503 = add nsw i32 %502, 1
  store i32 %503, i32* %4, align 4
  br label %438

; <label>:504:                                    ; preds = %438
  br label %505

; <label>:505:                                    ; preds = %504
  %pgocount16 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 36)
  %506 = add i64 %pgocount16, 1
  store i64 %506, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 36)
  %507 = load i32, i32* %3, align 4
  %508 = add nsw i32 %507, 1
  store i32 %508, i32* %3, align 4
  br label %402

; <label>:509:                                    ; preds = %402
  store i32 0, i32* %4, align 4
  br label %510

; <label>:510:                                    ; preds = %700, %509
  %511 = load i32, i32* %4, align 4
  %512 = icmp slt i32 %511, 9
  br i1 %512, label %513, label %704

; <label>:513:                                    ; preds = %510
  %514 = load i32, i32* %4, align 4
  %515 = sext i32 %514 to i64
  %516 = getelementptr inbounds [9 x %struct.bandInfoStruct], [9 x %struct.bandInfoStruct]* @bandInfo, i64 0, i64 %515
  store %struct.bandInfoStruct* %516, %struct.bandInfoStruct** %12, align 8
  %517 = load i32, i32* %4, align 4
  %518 = sext i32 %517 to i64
  %519 = getelementptr inbounds [9 x [152 x i32]], [9 x [152 x i32]]* @mapbuf0, i64 0, i64 %518
  %520 = getelementptr inbounds [152 x i32], [152 x i32]* %519, i32 0, i32 0
  %521 = load i32, i32* %4, align 4
  %522 = sext i32 %521 to i64
  %523 = getelementptr inbounds [9 x [3 x i32*]], [9 x [3 x i32*]]* @map, i64 0, i64 %522
  %524 = getelementptr inbounds [3 x i32*], [3 x i32*]* %523, i64 0, i64 0
  store i32* %520, i32** %524, align 8
  store i32* %520, i32** %13, align 8
  %525 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %12, align 8
  %526 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %525, i32 0, i32 1
  %527 = getelementptr inbounds [22 x i16], [22 x i16]* %526, i32 0, i32 0
  store i16* %527, i16** %16, align 8
  store i32 0, i32* %3, align 4
  store i32 0, i32* %14, align 4
  br label %528

; <label>:528:                                    ; preds = %546, %513
  %529 = load i32, i32* %14, align 4
  %530 = icmp slt i32 %529, 8
  br i1 %530, label %531, label %556

; <label>:531:                                    ; preds = %528
  %532 = load i16*, i16** %16, align 8
  %533 = load i16, i16* %532, align 2
  %534 = sext i16 %533 to i32
  %535 = ashr i32 %534, 1
  %536 = load i32*, i32** %13, align 8
  %537 = getelementptr inbounds i32, i32* %536, i32 1
  store i32* %537, i32** %13, align 8
  store i32 %535, i32* %536, align 4
  %538 = load i32, i32* %3, align 4
  %539 = load i32*, i32** %13, align 8
  %540 = getelementptr inbounds i32, i32* %539, i32 1
  store i32* %540, i32** %13, align 8
  store i32 %538, i32* %539, align 4
  %541 = load i32*, i32** %13, align 8
  %542 = getelementptr inbounds i32, i32* %541, i32 1
  store i32* %542, i32** %13, align 8
  store i32 3, i32* %541, align 4
  %543 = load i32, i32* %14, align 4
  %544 = load i32*, i32** %13, align 8
  %545 = getelementptr inbounds i32, i32* %544, i32 1
  store i32* %545, i32** %13, align 8
  store i32 %543, i32* %544, align 4
  br label %546

; <label>:546:                                    ; preds = %531
  %pgocount17 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 11)
  %547 = add i64 %pgocount17, 1
  store i64 %547, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 11)
  %548 = load i32, i32* %14, align 4
  %549 = add nsw i32 %548, 1
  store i32 %549, i32* %14, align 4
  %550 = load i16*, i16** %16, align 8
  %551 = getelementptr inbounds i16, i16* %550, i32 1
  store i16* %551, i16** %16, align 8
  %552 = load i16, i16* %550, align 2
  %553 = sext i16 %552 to i32
  %554 = load i32, i32* %3, align 4
  %555 = add nsw i32 %554, %553
  store i32 %555, i32* %3, align 4
  br label %528

; <label>:556:                                    ; preds = %528
  %557 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %12, align 8
  %558 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %557, i32 0, i32 3
  %559 = getelementptr inbounds [13 x i16], [13 x i16]* %558, i32 0, i32 0
  %560 = getelementptr inbounds i16, i16* %559, i64 3
  store i16* %560, i16** %16, align 8
  store i32 3, i32* %14, align 4
  br label %561

; <label>:561:                                    ; preds = %597, %556
  %562 = load i32, i32* %14, align 4
  %563 = icmp slt i32 %562, 13
  br i1 %563, label %564, label %601

; <label>:564:                                    ; preds = %561
  %565 = load i16*, i16** %16, align 8
  %566 = getelementptr inbounds i16, i16* %565, i32 1
  store i16* %566, i16** %16, align 8
  %567 = load i16, i16* %565, align 2
  %568 = sext i16 %567 to i32
  %569 = ashr i32 %568, 1
  store i32 %569, i32* %17, align 4
  store i32 0, i32* %15, align 4
  br label %570

; <label>:570:                                    ; preds = %588, %564
  %571 = load i32, i32* %15, align 4
  %572 = icmp slt i32 %571, 3
  br i1 %572, label %573, label %592

; <label>:573:                                    ; preds = %570
  %574 = load i32, i32* %17, align 4
  %575 = load i32*, i32** %13, align 8
  %576 = getelementptr inbounds i32, i32* %575, i32 1
  store i32* %576, i32** %13, align 8
  store i32 %574, i32* %575, align 4
  %577 = load i32, i32* %3, align 4
  %578 = load i32, i32* %15, align 4
  %579 = add nsw i32 %577, %578
  %580 = load i32*, i32** %13, align 8
  %581 = getelementptr inbounds i32, i32* %580, i32 1
  store i32* %581, i32** %13, align 8
  store i32 %579, i32* %580, align 4
  %582 = load i32, i32* %15, align 4
  %583 = load i32*, i32** %13, align 8
  %584 = getelementptr inbounds i32, i32* %583, i32 1
  store i32* %584, i32** %13, align 8
  store i32 %582, i32* %583, align 4
  %585 = load i32, i32* %14, align 4
  %586 = load i32*, i32** %13, align 8
  %587 = getelementptr inbounds i32, i32* %586, i32 1
  store i32* %587, i32** %13, align 8
  store i32 %585, i32* %586, align 4
  br label %588

; <label>:588:                                    ; preds = %573
  %pgocount18 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 1)
  %589 = add i64 %pgocount18, 1
  store i64 %589, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 1)
  %590 = load i32, i32* %15, align 4
  %591 = add nsw i32 %590, 1
  store i32 %591, i32* %15, align 4
  br label %570

; <label>:592:                                    ; preds = %570
  %593 = load i32, i32* %17, align 4
  %594 = mul nsw i32 6, %593
  %595 = load i32, i32* %3, align 4
  %596 = add nsw i32 %595, %594
  store i32 %596, i32* %3, align 4
  br label %597

; <label>:597:                                    ; preds = %592
  %pgocount19 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 12)
  %598 = add i64 %pgocount19, 1
  store i64 %598, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 12)
  %599 = load i32, i32* %14, align 4
  %600 = add nsw i32 %599, 1
  store i32 %600, i32* %14, align 4
  br label %561

; <label>:601:                                    ; preds = %561
  %602 = load i32*, i32** %13, align 8
  %603 = load i32, i32* %4, align 4
  %604 = sext i32 %603 to i64
  %605 = getelementptr inbounds [9 x [3 x i32*]], [9 x [3 x i32*]]* @mapend, i64 0, i64 %604
  %606 = getelementptr inbounds [3 x i32*], [3 x i32*]* %605, i64 0, i64 0
  store i32* %602, i32** %606, align 8
  %607 = load i32, i32* %4, align 4
  %608 = sext i32 %607 to i64
  %609 = getelementptr inbounds [9 x [156 x i32]], [9 x [156 x i32]]* @mapbuf1, i64 0, i64 %608
  %610 = getelementptr inbounds [156 x i32], [156 x i32]* %609, i32 0, i32 0
  %611 = load i32, i32* %4, align 4
  %612 = sext i32 %611 to i64
  %613 = getelementptr inbounds [9 x [3 x i32*]], [9 x [3 x i32*]]* @map, i64 0, i64 %612
  %614 = getelementptr inbounds [3 x i32*], [3 x i32*]* %613, i64 0, i64 1
  store i32* %610, i32** %614, align 8
  store i32* %610, i32** %13, align 8
  %615 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %12, align 8
  %616 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %615, i32 0, i32 3
  %617 = getelementptr inbounds [13 x i16], [13 x i16]* %616, i32 0, i32 0
  %618 = getelementptr inbounds i16, i16* %617, i64 0
  store i16* %618, i16** %16, align 8
  store i32 0, i32* %3, align 4
  store i32 0, i32* %14, align 4
  br label %619

; <label>:619:                                    ; preds = %655, %601
  %620 = load i32, i32* %14, align 4
  %621 = icmp slt i32 %620, 13
  br i1 %621, label %622, label %659

; <label>:622:                                    ; preds = %619
  %623 = load i16*, i16** %16, align 8
  %624 = getelementptr inbounds i16, i16* %623, i32 1
  store i16* %624, i16** %16, align 8
  %625 = load i16, i16* %623, align 2
  %626 = sext i16 %625 to i32
  %627 = ashr i32 %626, 1
  store i32 %627, i32* %18, align 4
  store i32 0, i32* %15, align 4
  br label %628

; <label>:628:                                    ; preds = %646, %622
  %629 = load i32, i32* %15, align 4
  %630 = icmp slt i32 %629, 3
  br i1 %630, label %631, label %650

; <label>:631:                                    ; preds = %628
  %632 = load i32, i32* %18, align 4
  %633 = load i32*, i32** %13, align 8
  %634 = getelementptr inbounds i32, i32* %633, i32 1
  store i32* %634, i32** %13, align 8
  store i32 %632, i32* %633, align 4
  %635 = load i32, i32* %3, align 4
  %636 = load i32, i32* %15, align 4
  %637 = add nsw i32 %635, %636
  %638 = load i32*, i32** %13, align 8
  %639 = getelementptr inbounds i32, i32* %638, i32 1
  store i32* %639, i32** %13, align 8
  store i32 %637, i32* %638, align 4
  %640 = load i32, i32* %15, align 4
  %641 = load i32*, i32** %13, align 8
  %642 = getelementptr inbounds i32, i32* %641, i32 1
  store i32* %642, i32** %13, align 8
  store i32 %640, i32* %641, align 4
  %643 = load i32, i32* %14, align 4
  %644 = load i32*, i32** %13, align 8
  %645 = getelementptr inbounds i32, i32* %644, i32 1
  store i32* %645, i32** %13, align 8
  store i32 %643, i32* %644, align 4
  br label %646

; <label>:646:                                    ; preds = %631
  %pgocount20 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 2)
  %647 = add i64 %pgocount20, 1
  store i64 %647, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 2)
  %648 = load i32, i32* %15, align 4
  %649 = add nsw i32 %648, 1
  store i32 %649, i32* %15, align 4
  br label %628

; <label>:650:                                    ; preds = %628
  %651 = load i32, i32* %18, align 4
  %652 = mul nsw i32 6, %651
  %653 = load i32, i32* %3, align 4
  %654 = add nsw i32 %653, %652
  store i32 %654, i32* %3, align 4
  br label %655

; <label>:655:                                    ; preds = %650
  %pgocount21 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 13)
  %656 = add i64 %pgocount21, 1
  store i64 %656, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 13)
  %657 = load i32, i32* %14, align 4
  %658 = add nsw i32 %657, 1
  store i32 %658, i32* %14, align 4
  br label %619

; <label>:659:                                    ; preds = %619
  %660 = load i32*, i32** %13, align 8
  %661 = load i32, i32* %4, align 4
  %662 = sext i32 %661 to i64
  %663 = getelementptr inbounds [9 x [3 x i32*]], [9 x [3 x i32*]]* @mapend, i64 0, i64 %662
  %664 = getelementptr inbounds [3 x i32*], [3 x i32*]* %663, i64 0, i64 1
  store i32* %660, i32** %664, align 8
  %665 = load i32, i32* %4, align 4
  %666 = sext i32 %665 to i64
  %667 = getelementptr inbounds [9 x [44 x i32]], [9 x [44 x i32]]* @mapbuf2, i64 0, i64 %666
  %668 = getelementptr inbounds [44 x i32], [44 x i32]* %667, i32 0, i32 0
  %669 = load i32, i32* %4, align 4
  %670 = sext i32 %669 to i64
  %671 = getelementptr inbounds [9 x [3 x i32*]], [9 x [3 x i32*]]* @map, i64 0, i64 %670
  %672 = getelementptr inbounds [3 x i32*], [3 x i32*]* %671, i64 0, i64 2
  store i32* %668, i32** %672, align 8
  store i32* %668, i32** %13, align 8
  %673 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %12, align 8
  %674 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %673, i32 0, i32 1
  %675 = getelementptr inbounds [22 x i16], [22 x i16]* %674, i32 0, i32 0
  store i16* %675, i16** %16, align 8
  store i32 0, i32* %14, align 4
  br label %676

; <label>:676:                                    ; preds = %690, %659
  %677 = load i32, i32* %14, align 4
  %678 = icmp slt i32 %677, 22
  br i1 %678, label %679, label %694

; <label>:679:                                    ; preds = %676
  %680 = load i16*, i16** %16, align 8
  %681 = getelementptr inbounds i16, i16* %680, i32 1
  store i16* %681, i16** %16, align 8
  %682 = load i16, i16* %680, align 2
  %683 = sext i16 %682 to i32
  %684 = ashr i32 %683, 1
  %685 = load i32*, i32** %13, align 8
  %686 = getelementptr inbounds i32, i32* %685, i32 1
  store i32* %686, i32** %13, align 8
  store i32 %684, i32* %685, align 4
  %687 = load i32, i32* %14, align 4
  %688 = load i32*, i32** %13, align 8
  %689 = getelementptr inbounds i32, i32* %688, i32 1
  store i32* %689, i32** %13, align 8
  store i32 %687, i32* %688, align 4
  br label %690

; <label>:690:                                    ; preds = %679
  %pgocount22 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 14)
  %691 = add i64 %pgocount22, 1
  store i64 %691, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 14)
  %692 = load i32, i32* %14, align 4
  %693 = add nsw i32 %692, 1
  store i32 %693, i32* %14, align 4
  br label %676

; <label>:694:                                    ; preds = %676
  %695 = load i32*, i32** %13, align 8
  %696 = load i32, i32* %4, align 4
  %697 = sext i32 %696 to i64
  %698 = getelementptr inbounds [9 x [3 x i32*]], [9 x [3 x i32*]]* @mapend, i64 0, i64 %697
  %699 = getelementptr inbounds [3 x i32*], [3 x i32*]* %698, i64 0, i64 2
  store i32* %695, i32** %699, align 8
  br label %700

; <label>:700:                                    ; preds = %694
  %pgocount23 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 37)
  %701 = add i64 %pgocount23, 1
  store i64 %701, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 37)
  %702 = load i32, i32* %4, align 4
  %703 = add nsw i32 %702, 1
  store i32 %703, i32* %4, align 4
  br label %510

; <label>:704:                                    ; preds = %510
  store i32 0, i32* %4, align 4
  br label %705

; <label>:705:                                    ; preds = %802, %704
  %706 = load i32, i32* %4, align 4
  %707 = icmp slt i32 %706, 9
  br i1 %707, label %708, label %806

; <label>:708:                                    ; preds = %705
  store i32 0, i32* %3, align 4
  br label %709

; <label>:709:                                    ; preds = %751, %708
  %710 = load i32, i32* %3, align 4
  %711 = icmp slt i32 %710, 23
  br i1 %711, label %712, label %755

; <label>:712:                                    ; preds = %709
  %713 = load i32, i32* %4, align 4
  %714 = sext i32 %713 to i64
  %715 = getelementptr inbounds [9 x %struct.bandInfoStruct], [9 x %struct.bandInfoStruct]* @bandInfo, i64 0, i64 %714
  %716 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %715, i32 0, i32 0
  %717 = load i32, i32* %3, align 4
  %718 = sext i32 %717 to i64
  %719 = getelementptr inbounds [23 x i16], [23 x i16]* %716, i64 0, i64 %718
  %720 = load i16, i16* %719, align 2
  %721 = sext i16 %720 to i32
  %722 = sub nsw i32 %721, 1
  %723 = add nsw i32 %722, 8
  %724 = sdiv i32 %723, 18
  %725 = add nsw i32 %724, 1
  %726 = load i32, i32* %4, align 4
  %727 = sext i32 %726 to i64
  %728 = getelementptr inbounds [9 x [23 x i32]], [9 x [23 x i32]]* @longLimit, i64 0, i64 %727
  %729 = load i32, i32* %3, align 4
  %730 = sext i32 %729 to i64
  %731 = getelementptr inbounds [23 x i32], [23 x i32]* %728, i64 0, i64 %730
  store i32 %725, i32* %731, align 4
  %732 = load i32, i32* %4, align 4
  %733 = sext i32 %732 to i64
  %734 = getelementptr inbounds [9 x [23 x i32]], [9 x [23 x i32]]* @longLimit, i64 0, i64 %733
  %735 = load i32, i32* %3, align 4
  %736 = sext i32 %735 to i64
  %737 = getelementptr inbounds [23 x i32], [23 x i32]* %734, i64 0, i64 %736
  %738 = load i32, i32* %737, align 4
  %739 = load i32, i32* %2, align 4
  %740 = icmp sgt i32 %738, %739
  br i1 %740, label %741, label %750

; <label>:741:                                    ; preds = %712
  %pgocount24 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 22)
  %742 = add i64 %pgocount24, 1
  store i64 %742, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 22)
  %743 = load i32, i32* %2, align 4
  %744 = load i32, i32* %4, align 4
  %745 = sext i32 %744 to i64
  %746 = getelementptr inbounds [9 x [23 x i32]], [9 x [23 x i32]]* @longLimit, i64 0, i64 %745
  %747 = load i32, i32* %3, align 4
  %748 = sext i32 %747 to i64
  %749 = getelementptr inbounds [23 x i32], [23 x i32]* %746, i64 0, i64 %748
  store i32 %743, i32* %749, align 4
  br label %750

; <label>:750:                                    ; preds = %741, %712
  br label %751

; <label>:751:                                    ; preds = %750
  %pgocount25 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 15)
  %752 = add i64 %pgocount25, 1
  store i64 %752, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 15)
  %753 = load i32, i32* %3, align 4
  %754 = add nsw i32 %753, 1
  store i32 %754, i32* %3, align 4
  br label %709

; <label>:755:                                    ; preds = %709
  store i32 0, i32* %3, align 4
  br label %756

; <label>:756:                                    ; preds = %797, %755
  %757 = load i32, i32* %3, align 4
  %758 = icmp slt i32 %757, 14
  br i1 %758, label %759, label %801

; <label>:759:                                    ; preds = %756
  %760 = load i32, i32* %4, align 4
  %761 = sext i32 %760 to i64
  %762 = getelementptr inbounds [9 x %struct.bandInfoStruct], [9 x %struct.bandInfoStruct]* @bandInfo, i64 0, i64 %761
  %763 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %762, i32 0, i32 2
  %764 = load i32, i32* %3, align 4
  %765 = sext i32 %764 to i64
  %766 = getelementptr inbounds [14 x i16], [14 x i16]* %763, i64 0, i64 %765
  %767 = load i16, i16* %766, align 2
  %768 = sext i16 %767 to i32
  %769 = sub nsw i32 %768, 1
  %770 = sdiv i32 %769, 18
  %771 = add nsw i32 %770, 1
  %772 = load i32, i32* %4, align 4
  %773 = sext i32 %772 to i64
  %774 = getelementptr inbounds [9 x [14 x i32]], [9 x [14 x i32]]* @shortLimit, i64 0, i64 %773
  %775 = load i32, i32* %3, align 4
  %776 = sext i32 %775 to i64
  %777 = getelementptr inbounds [14 x i32], [14 x i32]* %774, i64 0, i64 %776
  store i32 %771, i32* %777, align 4
  %778 = load i32, i32* %4, align 4
  %779 = sext i32 %778 to i64
  %780 = getelementptr inbounds [9 x [14 x i32]], [9 x [14 x i32]]* @shortLimit, i64 0, i64 %779
  %781 = load i32, i32* %3, align 4
  %782 = sext i32 %781 to i64
  %783 = getelementptr inbounds [14 x i32], [14 x i32]* %780, i64 0, i64 %782
  %784 = load i32, i32* %783, align 4
  %785 = load i32, i32* %2, align 4
  %786 = icmp sgt i32 %784, %785
  br i1 %786, label %787, label %796

; <label>:787:                                    ; preds = %759
  %pgocount26 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 23)
  %788 = add i64 %pgocount26, 1
  store i64 %788, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 23)
  %789 = load i32, i32* %2, align 4
  %790 = load i32, i32* %4, align 4
  %791 = sext i32 %790 to i64
  %792 = getelementptr inbounds [9 x [14 x i32]], [9 x [14 x i32]]* @shortLimit, i64 0, i64 %791
  %793 = load i32, i32* %3, align 4
  %794 = sext i32 %793 to i64
  %795 = getelementptr inbounds [14 x i32], [14 x i32]* %792, i64 0, i64 %794
  store i32 %789, i32* %795, align 4
  br label %796

; <label>:796:                                    ; preds = %787, %759
  br label %797

; <label>:797:                                    ; preds = %796
  %pgocount27 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 16)
  %798 = add i64 %pgocount27, 1
  store i64 %798, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 16)
  %799 = load i32, i32* %3, align 4
  %800 = add nsw i32 %799, 1
  store i32 %800, i32* %3, align 4
  br label %756

; <label>:801:                                    ; preds = %756
  br label %802

; <label>:802:                                    ; preds = %801
  %pgocount28 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 38)
  %803 = add i64 %pgocount28, 1
  store i64 %803, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 38)
  %804 = load i32, i32* %4, align 4
  %805 = add nsw i32 %804, 1
  store i32 %805, i32* %4, align 4
  br label %705

; <label>:806:                                    ; preds = %705
  store i32 0, i32* %3, align 4
  br label %807

; <label>:807:                                    ; preds = %847, %806
  %808 = load i32, i32* %3, align 4
  %809 = icmp slt i32 %808, 5
  br i1 %809, label %810, label %851

; <label>:810:                                    ; preds = %807
  store i32 0, i32* %4, align 4
  br label %811

; <label>:811:                                    ; preds = %842, %810
  %812 = load i32, i32* %4, align 4
  %813 = icmp slt i32 %812, 6
  br i1 %813, label %814, label %846

; <label>:814:                                    ; preds = %811
  store i32 0, i32* %5, align 4
  br label %815

; <label>:815:                                    ; preds = %837, %814
  %816 = load i32, i32* %5, align 4
  %817 = icmp slt i32 %816, 6
  br i1 %817, label %818, label %841

; <label>:818:                                    ; preds = %815
  %819 = load i32, i32* %5, align 4
  %820 = load i32, i32* %4, align 4
  %821 = mul nsw i32 %820, 6
  %822 = add nsw i32 %819, %821
  %823 = load i32, i32* %3, align 4
  %824 = mul nsw i32 %823, 36
  %825 = add nsw i32 %822, %824
  store i32 %825, i32* %19, align 4
  %826 = load i32, i32* %3, align 4
  %827 = load i32, i32* %4, align 4
  %828 = shl i32 %827, 3
  %829 = or i32 %826, %828
  %830 = load i32, i32* %5, align 4
  %831 = shl i32 %830, 6
  %832 = or i32 %829, %831
  %833 = or i32 %832, 12288
  %834 = load i32, i32* %19, align 4
  %835 = sext i32 %834 to i64
  %836 = getelementptr inbounds [256 x i32], [256 x i32]* @i_slen2, i64 0, i64 %835
  store i32 %833, i32* %836, align 4
  br label %837

; <label>:837:                                    ; preds = %818
  %pgocount29 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 3)
  %838 = add i64 %pgocount29, 1
  store i64 %838, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 3)
  %839 = load i32, i32* %5, align 4
  %840 = add nsw i32 %839, 1
  store i32 %840, i32* %5, align 4
  br label %815

; <label>:841:                                    ; preds = %815
  br label %842

; <label>:842:                                    ; preds = %841
  %pgocount30 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 17)
  %843 = add i64 %pgocount30, 1
  store i64 %843, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 17)
  %844 = load i32, i32* %4, align 4
  %845 = add nsw i32 %844, 1
  store i32 %845, i32* %4, align 4
  br label %811

; <label>:846:                                    ; preds = %811
  br label %847

; <label>:847:                                    ; preds = %846
  %pgocount31 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 39)
  %848 = add i64 %pgocount31, 1
  store i64 %848, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 39)
  %849 = load i32, i32* %3, align 4
  %850 = add nsw i32 %849, 1
  store i32 %850, i32* %3, align 4
  br label %807

; <label>:851:                                    ; preds = %807
  store i32 0, i32* %3, align 4
  br label %852

; <label>:852:                                    ; preds = %893, %851
  %853 = load i32, i32* %3, align 4
  %854 = icmp slt i32 %853, 4
  br i1 %854, label %855, label %897

; <label>:855:                                    ; preds = %852
  store i32 0, i32* %4, align 4
  br label %856

; <label>:856:                                    ; preds = %888, %855
  %857 = load i32, i32* %4, align 4
  %858 = icmp slt i32 %857, 4
  br i1 %858, label %859, label %892

; <label>:859:                                    ; preds = %856
  store i32 0, i32* %5, align 4
  br label %860

; <label>:860:                                    ; preds = %883, %859
  %861 = load i32, i32* %5, align 4
  %862 = icmp slt i32 %861, 4
  br i1 %862, label %863, label %887

; <label>:863:                                    ; preds = %860
  %864 = load i32, i32* %5, align 4
  %865 = load i32, i32* %4, align 4
  %866 = mul nsw i32 %865, 4
  %867 = add nsw i32 %864, %866
  %868 = load i32, i32* %3, align 4
  %869 = mul nsw i32 %868, 16
  %870 = add nsw i32 %867, %869
  store i32 %870, i32* %20, align 4
  %871 = load i32, i32* %3, align 4
  %872 = load i32, i32* %4, align 4
  %873 = shl i32 %872, 3
  %874 = or i32 %871, %873
  %875 = load i32, i32* %5, align 4
  %876 = shl i32 %875, 6
  %877 = or i32 %874, %876
  %878 = or i32 %877, 16384
  %879 = load i32, i32* %20, align 4
  %880 = add nsw i32 %879, 180
  %881 = sext i32 %880 to i64
  %882 = getelementptr inbounds [256 x i32], [256 x i32]* @i_slen2, i64 0, i64 %881
  store i32 %878, i32* %882, align 4
  br label %883

; <label>:883:                                    ; preds = %863
  %pgocount32 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 4)
  %884 = add i64 %pgocount32, 1
  store i64 %884, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 4)
  %885 = load i32, i32* %5, align 4
  %886 = add nsw i32 %885, 1
  store i32 %886, i32* %5, align 4
  br label %860

; <label>:887:                                    ; preds = %860
  br label %888

; <label>:888:                                    ; preds = %887
  %pgocount33 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 18)
  %889 = add i64 %pgocount33, 1
  store i64 %889, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 18)
  %890 = load i32, i32* %4, align 4
  %891 = add nsw i32 %890, 1
  store i32 %891, i32* %4, align 4
  br label %856

; <label>:892:                                    ; preds = %856
  br label %893

; <label>:893:                                    ; preds = %892
  %pgocount34 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 40)
  %894 = add i64 %pgocount34, 1
  store i64 %894, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 40)
  %895 = load i32, i32* %3, align 4
  %896 = add nsw i32 %895, 1
  store i32 %896, i32* %3, align 4
  br label %852

; <label>:897:                                    ; preds = %852
  store i32 0, i32* %3, align 4
  br label %898

; <label>:898:                                    ; preds = %934, %897
  %899 = load i32, i32* %3, align 4
  %900 = icmp slt i32 %899, 4
  br i1 %900, label %901, label %938

; <label>:901:                                    ; preds = %898
  store i32 0, i32* %4, align 4
  br label %902

; <label>:902:                                    ; preds = %929, %901
  %903 = load i32, i32* %4, align 4
  %904 = icmp slt i32 %903, 3
  br i1 %904, label %905, label %933

; <label>:905:                                    ; preds = %902
  %906 = load i32, i32* %4, align 4
  %907 = load i32, i32* %3, align 4
  %908 = mul nsw i32 %907, 3
  %909 = add nsw i32 %906, %908
  store i32 %909, i32* %21, align 4
  %910 = load i32, i32* %3, align 4
  %911 = load i32, i32* %4, align 4
  %912 = shl i32 %911, 3
  %913 = or i32 %910, %912
  %914 = or i32 %913, 20480
  %915 = load i32, i32* %21, align 4
  %916 = add nsw i32 %915, 244
  %917 = sext i32 %916 to i64
  %918 = getelementptr inbounds [256 x i32], [256 x i32]* @i_slen2, i64 0, i64 %917
  store i32 %914, i32* %918, align 4
  %919 = load i32, i32* %3, align 4
  %920 = load i32, i32* %4, align 4
  %921 = shl i32 %920, 3
  %922 = or i32 %919, %921
  %923 = or i32 %922, 8192
  %924 = or i32 %923, 32768
  %925 = load i32, i32* %21, align 4
  %926 = add nsw i32 %925, 500
  %927 = sext i32 %926 to i64
  %928 = getelementptr inbounds [512 x i32], [512 x i32]* @n_slen2, i64 0, i64 %927
  store i32 %924, i32* %928, align 4
  br label %929

; <label>:929:                                    ; preds = %905
  %pgocount35 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 19)
  %930 = add i64 %pgocount35, 1
  store i64 %930, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 19)
  %931 = load i32, i32* %4, align 4
  %932 = add nsw i32 %931, 1
  store i32 %932, i32* %4, align 4
  br label %902

; <label>:933:                                    ; preds = %902
  br label %934

; <label>:934:                                    ; preds = %933
  %pgocount36 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 41)
  %935 = add i64 %pgocount36, 1
  store i64 %935, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 41)
  %936 = load i32, i32* %3, align 4
  %937 = add nsw i32 %936, 1
  store i32 %937, i32* %3, align 4
  br label %898

; <label>:938:                                    ; preds = %898
  store i32 0, i32* %3, align 4
  br label %939

; <label>:939:                                    ; preds = %993, %938
  %940 = load i32, i32* %3, align 4
  %941 = icmp slt i32 %940, 5
  br i1 %941, label %942, label %997

; <label>:942:                                    ; preds = %939
  store i32 0, i32* %4, align 4
  br label %943

; <label>:943:                                    ; preds = %988, %942
  %944 = load i32, i32* %4, align 4
  %945 = icmp slt i32 %944, 5
  br i1 %945, label %946, label %992

; <label>:946:                                    ; preds = %943
  store i32 0, i32* %5, align 4
  br label %947

; <label>:947:                                    ; preds = %983, %946
  %948 = load i32, i32* %5, align 4
  %949 = icmp slt i32 %948, 4
  br i1 %949, label %950, label %987

; <label>:950:                                    ; preds = %947
  store i32 0, i32* %6, align 4
  br label %951

; <label>:951:                                    ; preds = %978, %950
  %952 = load i32, i32* %6, align 4
  %953 = icmp slt i32 %952, 4
  br i1 %953, label %954, label %982

; <label>:954:                                    ; preds = %951
  %955 = load i32, i32* %6, align 4
  %956 = load i32, i32* %5, align 4
  %957 = mul nsw i32 %956, 4
  %958 = add nsw i32 %955, %957
  %959 = load i32, i32* %4, align 4
  %960 = mul nsw i32 %959, 16
  %961 = add nsw i32 %958, %960
  %962 = load i32, i32* %3, align 4
  %963 = mul nsw i32 %962, 80
  %964 = add nsw i32 %961, %963
  store i32 %964, i32* %22, align 4
  %965 = load i32, i32* %3, align 4
  %966 = load i32, i32* %4, align 4
  %967 = shl i32 %966, 3
  %968 = or i32 %965, %967
  %969 = load i32, i32* %5, align 4
  %970 = shl i32 %969, 6
  %971 = or i32 %968, %970
  %972 = load i32, i32* %6, align 4
  %973 = shl i32 %972, 9
  %974 = or i32 %971, %973
  %975 = load i32, i32* %22, align 4
  %976 = sext i32 %975 to i64
  %977 = getelementptr inbounds [512 x i32], [512 x i32]* @n_slen2, i64 0, i64 %976
  store i32 %974, i32* %977, align 4
  br label %978

; <label>:978:                                    ; preds = %954
  %pgocount37 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 0)
  %979 = add i64 %pgocount37, 1
  store i64 %979, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 0)
  %980 = load i32, i32* %6, align 4
  %981 = add nsw i32 %980, 1
  store i32 %981, i32* %6, align 4
  br label %951

; <label>:982:                                    ; preds = %951
  br label %983

; <label>:983:                                    ; preds = %982
  %pgocount38 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 5)
  %984 = add i64 %pgocount38, 1
  store i64 %984, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 5)
  %985 = load i32, i32* %5, align 4
  %986 = add nsw i32 %985, 1
  store i32 %986, i32* %5, align 4
  br label %947

; <label>:987:                                    ; preds = %947
  br label %988

; <label>:988:                                    ; preds = %987
  %pgocount39 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 20)
  %989 = add i64 %pgocount39, 1
  store i64 %989, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 20)
  %990 = load i32, i32* %4, align 4
  %991 = add nsw i32 %990, 1
  store i32 %991, i32* %4, align 4
  br label %943

; <label>:992:                                    ; preds = %943
  br label %993

; <label>:993:                                    ; preds = %992
  %pgocount40 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 42)
  %994 = add i64 %pgocount40, 1
  store i64 %994, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 42)
  %995 = load i32, i32* %3, align 4
  %996 = add nsw i32 %995, 1
  store i32 %996, i32* %3, align 4
  br label %939

; <label>:997:                                    ; preds = %939
  store i32 0, i32* %3, align 4
  br label %998

; <label>:998:                                    ; preds = %1039, %997
  %999 = load i32, i32* %3, align 4
  %1000 = icmp slt i32 %999, 5
  br i1 %1000, label %1001, label %1043

; <label>:1001:                                   ; preds = %998
  store i32 0, i32* %4, align 4
  br label %1002

; <label>:1002:                                   ; preds = %1034, %1001
  %1003 = load i32, i32* %4, align 4
  %1004 = icmp slt i32 %1003, 5
  br i1 %1004, label %1005, label %1038

; <label>:1005:                                   ; preds = %1002
  store i32 0, i32* %5, align 4
  br label %1006

; <label>:1006:                                   ; preds = %1029, %1005
  %1007 = load i32, i32* %5, align 4
  %1008 = icmp slt i32 %1007, 4
  br i1 %1008, label %1009, label %1033

; <label>:1009:                                   ; preds = %1006
  %1010 = load i32, i32* %5, align 4
  %1011 = load i32, i32* %4, align 4
  %1012 = mul nsw i32 %1011, 4
  %1013 = add nsw i32 %1010, %1012
  %1014 = load i32, i32* %3, align 4
  %1015 = mul nsw i32 %1014, 20
  %1016 = add nsw i32 %1013, %1015
  store i32 %1016, i32* %23, align 4
  %1017 = load i32, i32* %3, align 4
  %1018 = load i32, i32* %4, align 4
  %1019 = shl i32 %1018, 3
  %1020 = or i32 %1017, %1019
  %1021 = load i32, i32* %5, align 4
  %1022 = shl i32 %1021, 6
  %1023 = or i32 %1020, %1022
  %1024 = or i32 %1023, 4096
  %1025 = load i32, i32* %23, align 4
  %1026 = add nsw i32 %1025, 400
  %1027 = sext i32 %1026 to i64
  %1028 = getelementptr inbounds [512 x i32], [512 x i32]* @n_slen2, i64 0, i64 %1027
  store i32 %1024, i32* %1028, align 4
  br label %1029

; <label>:1029:                                   ; preds = %1009
  %pgocount41 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 6)
  %1030 = add i64 %pgocount41, 1
  store i64 %1030, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 6)
  %1031 = load i32, i32* %5, align 4
  %1032 = add nsw i32 %1031, 1
  store i32 %1032, i32* %5, align 4
  br label %1006

; <label>:1033:                                   ; preds = %1006
  br label %1034

; <label>:1034:                                   ; preds = %1033
  %pgocount42 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 21)
  %1035 = add i64 %pgocount42, 1
  store i64 %1035, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 21)
  %1036 = load i32, i32* %4, align 4
  %1037 = add nsw i32 %1036, 1
  store i32 %1037, i32* %4, align 4
  br label %1002

; <label>:1038:                                   ; preds = %1002
  br label %1039

; <label>:1039:                                   ; preds = %1038
  %pgocount43 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 43)
  %1040 = add i64 %pgocount43, 1
  store i64 %1040, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 43)
  %1041 = load i32, i32* %3, align 4
  %1042 = add nsw i32 %1041, 1
  store i32 %1042, i32* %3, align 4
  br label %998

; <label>:1043:                                   ; preds = %998
  %pgocount44 = load i64, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 44)
  %1044 = add i64 %pgocount44, 1
  store i64 %1044, i64* getelementptr inbounds ([45 x i64], [45 x i64]* @__profc_init_layer3, i64 0, i64 44)
  ret void
}

; Function Attrs: nounwind
declare double @pow(double, double) #1

; Function Attrs: nounwind
declare double @sqrt(double) #1

; Function Attrs: nounwind
declare double @sin(double) #1

; Function Attrs: nounwind
declare double @cos(double) #1

; Function Attrs: nounwind
declare double @tan(double) #1

; Function Attrs: nounwind uwtable
define i32 @do_layer3(%struct.frame*, i8*, i32*) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.frame*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [2 x [39 x i32]], align 16
  %13 = alloca %struct.III_sideinfo, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %struct.gr_info_s*, align 8
  %22 = alloca i64, align 8
  %23 = alloca %struct.gr_info_s*, align 8
  %24 = alloca i64, align 8
  %25 = alloca i32, align 4
  %26 = alloca double, align 8
  %27 = alloca double, align 8
  %28 = alloca i32, align 4
  %29 = alloca double*, align 8
  %30 = alloca double*, align 8
  %31 = alloca i32, align 4
  %32 = alloca double*, align 8
  %33 = alloca double*, align 8
  %34 = alloca %struct.gr_info_s*, align 8
  %35 = alloca i32, align 4
  store %struct.frame* %0, %struct.frame** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32 0, i32* %11, align 4
  %36 = load %struct.frame*, %struct.frame** %5, align 8
  %37 = getelementptr inbounds %struct.frame, %struct.frame* %36, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %14, align 4
  %39 = load %struct.frame*, %struct.frame** %5, align 8
  %40 = getelementptr inbounds %struct.frame, %struct.frame* %39, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  store i32 %41, i32* %15, align 4
  %42 = load %struct.frame*, %struct.frame** %5, align 8
  %43 = getelementptr inbounds %struct.frame, %struct.frame* %42, i32 0, i32 9
  %44 = load i32, i32* %43, align 4
  store i32 %44, i32* %18, align 4
  %45 = load i32, i32* %14, align 4
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %48

; <label>:47:                                     ; preds = %3
  store i32 1, i32* %19, align 4
  store i32 0, i32* %15, align 4
  br label %56

; <label>:48:                                     ; preds = %3
  %49 = load i32, i32* %15, align 4
  %50 = icmp sge i32 %49, 0
  br i1 %50, label %51, label %53

; <label>:51:                                     ; preds = %48
  %pgocount = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 22)
  %52 = add i64 %pgocount, 1
  store i64 %52, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 22)
  store i32 1, i32* %19, align 4
  br label %55

; <label>:53:                                     ; preds = %48
  %pgocount1 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 23)
  %54 = add i64 %pgocount1, 1
  store i64 %54, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 23)
  store i32 2, i32* %19, align 4
  br label %55

; <label>:55:                                     ; preds = %53, %51
  br label %56

; <label>:56:                                     ; preds = %55, %47
  %57 = load %struct.frame*, %struct.frame** %5, align 8
  %58 = getelementptr inbounds %struct.frame, %struct.frame* %57, i32 0, i32 12
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %61, label %70

; <label>:61:                                     ; preds = %56
  %62 = load %struct.frame*, %struct.frame** %5, align 8
  %63 = getelementptr inbounds %struct.frame, %struct.frame* %62, i32 0, i32 13
  %64 = load i32, i32* %63, align 4
  %65 = and i32 %64, 2
  store i32 %65, i32* %16, align 4
  %66 = load %struct.frame*, %struct.frame** %5, align 8
  %67 = getelementptr inbounds %struct.frame, %struct.frame* %66, i32 0, i32 13
  %68 = load i32, i32* %67, align 4
  %69 = and i32 %68, 1
  store i32 %69, i32* %17, align 4
  br label %72

; <label>:70:                                     ; preds = %56
  %pgocount2 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 18)
  %71 = add i64 %pgocount2, 1
  store i64 %71, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 18)
  store i32 0, i32* %17, align 4
  store i32 0, i32* %16, align 4
  br label %72

; <label>:72:                                     ; preds = %70, %61
  %73 = load %struct.frame*, %struct.frame** %5, align 8
  %74 = getelementptr inbounds %struct.frame, %struct.frame* %73, i32 0, i32 3
  %75 = load i32, i32* %74, align 4
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %77, label %83

; <label>:77:                                     ; preds = %72
  store i32 1, i32* %20, align 4
  %78 = load i32, i32* %14, align 4
  %79 = load i32, i32* %16, align 4
  %80 = load i32, i32* %18, align 4
  %81 = sext i32 %80 to i64
  %82 = load i32, i32* %15, align 4
  call void @III_get_side_info_2(%struct.III_sideinfo* %13, i32 %78, i32 %79, i64 %81, i32 %82)
  br label %90

; <label>:83:                                     ; preds = %72
  %pgocount3 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 19)
  %84 = add i64 %pgocount3, 1
  store i64 %84, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 19)
  store i32 2, i32* %20, align 4
  %85 = load i32, i32* %14, align 4
  %86 = load i32, i32* %16, align 4
  %87 = load i32, i32* %18, align 4
  %88 = sext i32 %87 to i64
  %89 = load i32, i32* %15, align 4
  call void @III_get_side_info_1(%struct.III_sideinfo* %13, i32 %85, i32 %86, i64 %88, i32 %89)
  br label %90

; <label>:90:                                     ; preds = %83, %77
  %91 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %13, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = zext i32 %92 to i64
  %94 = call i32 @set_pointer(i64 %93)
  %95 = icmp eq i32 %94, -1
  br i1 %95, label %96, label %98

; <label>:96:                                     ; preds = %90
  %pgocount4 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 20)
  %97 = add i64 %pgocount4, 1
  store i64 %97, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 20)
  store i32 0, i32* %4, align 4
  br label %407

; <label>:98:                                     ; preds = %90
  store i32 0, i32* %8, align 4
  br label %99

; <label>:99:                                     ; preds = %401, %98
  %100 = load i32, i32* %8, align 4
  %101 = load i32, i32* %20, align 4
  %102 = icmp slt i32 %100, %101
  br i1 %102, label %103, label %404

; <label>:103:                                    ; preds = %99
  %104 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %13, i32 0, i32 2
  %105 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %104, i64 0, i64 0
  %106 = getelementptr inbounds %struct.anon, %struct.anon* %105, i32 0, i32 0
  %107 = load i32, i32* %8, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [2 x %struct.gr_info_s], [2 x %struct.gr_info_s]* %106, i64 0, i64 %108
  store %struct.gr_info_s* %109, %struct.gr_info_s** %21, align 8
  %110 = load %struct.frame*, %struct.frame** %5, align 8
  %111 = getelementptr inbounds %struct.frame, %struct.frame* %110, i32 0, i32 3
  %112 = load i32, i32* %111, align 4
  %113 = icmp ne i32 %112, 0
  br i1 %113, label %114, label %121

; <label>:114:                                    ; preds = %103
  %pgocount5 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 6)
  %115 = add i64 %pgocount5, 1
  store i64 %115, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 6)
  %116 = getelementptr inbounds [2 x [39 x i32]], [2 x [39 x i32]]* %12, i64 0, i64 0
  %117 = getelementptr inbounds [39 x i32], [39 x i32]* %116, i32 0, i32 0
  %118 = load %struct.gr_info_s*, %struct.gr_info_s** %21, align 8
  %119 = call i32 @III_get_scale_factors_2(i32* %117, %struct.gr_info_s* %118, i32 0)
  %120 = sext i32 %119 to i64
  store i64 %120, i64* %22, align 8
  br label %128

; <label>:121:                                    ; preds = %103
  %pgocount6 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 7)
  %122 = add i64 %pgocount6, 1
  store i64 %122, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 7)
  %123 = getelementptr inbounds [2 x [39 x i32]], [2 x [39 x i32]]* %12, i64 0, i64 0
  %124 = getelementptr inbounds [39 x i32], [39 x i32]* %123, i32 0, i32 0
  %125 = load %struct.gr_info_s*, %struct.gr_info_s** %21, align 8
  %126 = call i32 @III_get_scale_factors_1(i32* %124, %struct.gr_info_s* %125)
  %127 = sext i32 %126 to i64
  store i64 %127, i64* %22, align 8
  br label %128

; <label>:128:                                    ; preds = %121, %114
  %129 = getelementptr inbounds [2 x [39 x i32]], [2 x [39 x i32]]* %12, i64 0, i64 0
  %130 = getelementptr inbounds [39 x i32], [39 x i32]* %129, i32 0, i32 0
  %131 = load %struct.gr_info_s*, %struct.gr_info_s** %21, align 8
  %132 = load i32, i32* %18, align 4
  %133 = load i64, i64* %22, align 8
  %134 = trunc i64 %133 to i32
  %135 = call i32 @III_dequantize_sample([18 x double]* getelementptr inbounds ([2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i64 0, i64 0, i32 0), i32* %130, %struct.gr_info_s* %131, i32 %132, i32 %134)
  %136 = icmp ne i32 %135, 0
  br i1 %136, label %137, label %140

; <label>:137:                                    ; preds = %128
  %pgocount7 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 24)
  %138 = add i64 %pgocount7, 1
  store i64 %138, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 24)
  %139 = load i32, i32* %11, align 4
  store i32 %139, i32* %4, align 4
  br label %407

; <label>:140:                                    ; preds = %128
  %141 = load i32, i32* %14, align 4
  %142 = icmp eq i32 %141, 2
  br i1 %142, label %143, label %324

; <label>:143:                                    ; preds = %140
  %144 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %13, i32 0, i32 2
  %145 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %144, i64 0, i64 1
  %146 = getelementptr inbounds %struct.anon, %struct.anon* %145, i32 0, i32 0
  %147 = load i32, i32* %8, align 4
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds [2 x %struct.gr_info_s], [2 x %struct.gr_info_s]* %146, i64 0, i64 %148
  store %struct.gr_info_s* %149, %struct.gr_info_s** %23, align 8
  %150 = load %struct.frame*, %struct.frame** %5, align 8
  %151 = getelementptr inbounds %struct.frame, %struct.frame* %150, i32 0, i32 3
  %152 = load i32, i32* %151, align 4
  %153 = icmp ne i32 %152, 0
  br i1 %153, label %154, label %162

; <label>:154:                                    ; preds = %143
  %pgocount8 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 8)
  %155 = add i64 %pgocount8, 1
  store i64 %155, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 8)
  %156 = getelementptr inbounds [2 x [39 x i32]], [2 x [39 x i32]]* %12, i64 0, i64 1
  %157 = getelementptr inbounds [39 x i32], [39 x i32]* %156, i32 0, i32 0
  %158 = load %struct.gr_info_s*, %struct.gr_info_s** %23, align 8
  %159 = load i32, i32* %17, align 4
  %160 = call i32 @III_get_scale_factors_2(i32* %157, %struct.gr_info_s* %158, i32 %159)
  %161 = sext i32 %160 to i64
  store i64 %161, i64* %24, align 8
  br label %169

; <label>:162:                                    ; preds = %143
  %pgocount9 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 13)
  %163 = add i64 %pgocount9, 1
  store i64 %163, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 13)
  %164 = getelementptr inbounds [2 x [39 x i32]], [2 x [39 x i32]]* %12, i64 0, i64 1
  %165 = getelementptr inbounds [39 x i32], [39 x i32]* %164, i32 0, i32 0
  %166 = load %struct.gr_info_s*, %struct.gr_info_s** %23, align 8
  %167 = call i32 @III_get_scale_factors_1(i32* %165, %struct.gr_info_s* %166)
  %168 = sext i32 %167 to i64
  store i64 %168, i64* %24, align 8
  br label %169

; <label>:169:                                    ; preds = %162, %154
  %170 = getelementptr inbounds [2 x [39 x i32]], [2 x [39 x i32]]* %12, i64 0, i64 1
  %171 = getelementptr inbounds [39 x i32], [39 x i32]* %170, i32 0, i32 0
  %172 = load %struct.gr_info_s*, %struct.gr_info_s** %23, align 8
  %173 = load i32, i32* %18, align 4
  %174 = load i64, i64* %24, align 8
  %175 = trunc i64 %174 to i32
  %176 = call i32 @III_dequantize_sample([18 x double]* getelementptr inbounds ([2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i64 0, i64 1, i32 0), i32* %171, %struct.gr_info_s* %172, i32 %173, i32 %175)
  %177 = icmp ne i32 %176, 0
  br i1 %177, label %178, label %181

; <label>:178:                                    ; preds = %169
  %pgocount10 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 25)
  %179 = add i64 %pgocount10, 1
  store i64 %179, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 25)
  %180 = load i32, i32* %11, align 4
  store i32 %180, i32* %4, align 4
  br label %407

; <label>:181:                                    ; preds = %169
  %182 = load i32, i32* %16, align 4
  %183 = icmp ne i32 %182, 0
  br i1 %183, label %184, label %215

; <label>:184:                                    ; preds = %181
  store i32 0, i32* %25, align 4
  br label %185

; <label>:185:                                    ; preds = %209, %184
  %186 = load i32, i32* %25, align 4
  %187 = icmp slt i32 %186, 576
  br i1 %187, label %188, label %213

; <label>:188:                                    ; preds = %185
  %189 = load i32, i32* %25, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds double, double* getelementptr inbounds ([2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i32 0, i32 0, i32 0, i32 0), i64 %190
  %192 = load double, double* %191, align 8
  store double %192, double* %26, align 8
  %193 = load i32, i32* %25, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds double, double* getelementptr inbounds ([2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i64 0, i64 1, i32 0, i32 0), i64 %194
  %196 = load double, double* %195, align 8
  store double %196, double* %27, align 8
  %197 = load double, double* %26, align 8
  %198 = load double, double* %27, align 8
  %199 = fsub double %197, %198
  %200 = load i32, i32* %25, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds double, double* getelementptr inbounds ([2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i64 0, i64 1, i32 0, i32 0), i64 %201
  store double %199, double* %202, align 8
  %203 = load double, double* %26, align 8
  %204 = load double, double* %27, align 8
  %205 = fadd double %203, %204
  %206 = load i32, i32* %25, align 4
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds double, double* getelementptr inbounds ([2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i32 0, i32 0, i32 0, i32 0), i64 %207
  store double %205, double* %208, align 8
  br label %209

; <label>:209:                                    ; preds = %188
  %pgocount11 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 3)
  %210 = add i64 %pgocount11, 1
  store i64 %210, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 3)
  %211 = load i32, i32* %25, align 4
  %212 = add nsw i32 %211, 1
  store i32 %212, i32* %25, align 4
  br label %185

; <label>:213:                                    ; preds = %185
  %pgocount12 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 9)
  %214 = add i64 %pgocount12, 1
  store i64 %214, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 9)
  br label %215

; <label>:215:                                    ; preds = %213, %181
  %216 = load i32, i32* %17, align 4
  %217 = icmp ne i32 %216, 0
  br i1 %217, label %218, label %228

; <label>:218:                                    ; preds = %215
  %pgocount13 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 10)
  %219 = add i64 %pgocount13, 1
  store i64 %219, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 10)
  %220 = getelementptr inbounds [2 x [39 x i32]], [2 x [39 x i32]]* %12, i64 0, i64 1
  %221 = getelementptr inbounds [39 x i32], [39 x i32]* %220, i32 0, i32 0
  %222 = load %struct.gr_info_s*, %struct.gr_info_s** %23, align 8
  %223 = load i32, i32* %18, align 4
  %224 = load i32, i32* %16, align 4
  %225 = load %struct.frame*, %struct.frame** %5, align 8
  %226 = getelementptr inbounds %struct.frame, %struct.frame* %225, i32 0, i32 3
  %227 = load i32, i32* %226, align 4
  call void @III_i_stereo([32 x [18 x double]]* getelementptr inbounds ([2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i32 0, i32 0), i32* %221, %struct.gr_info_s* %222, i32 %223, i32 %224, i32 %227)
  br label %228

; <label>:228:                                    ; preds = %218, %215
  %229 = load i32, i32* %16, align 4
  %230 = icmp ne i32 %229, 0
  br i1 %230, label %239, label %231

; <label>:231:                                    ; preds = %228
  %pgocount14 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 14)
  %232 = add i64 %pgocount14, 1
  store i64 %232, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 14)
  %233 = load i32, i32* %17, align 4
  %234 = icmp ne i32 %233, 0
  br i1 %234, label %239, label %235

; <label>:235:                                    ; preds = %231
  %pgocount15 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 17)
  %236 = add i64 %pgocount15, 1
  store i64 %236, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 17)
  %237 = load i32, i32* %15, align 4
  %238 = icmp eq i32 %237, 3
  br i1 %238, label %239, label %277

; <label>:239:                                    ; preds = %235, %231, %228
  %240 = load %struct.gr_info_s*, %struct.gr_info_s** %23, align 8
  %241 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %240, i32 0, i32 10
  %242 = load i32, i32* %241, align 8
  %243 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %13, i32 0, i32 2
  %244 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %243, i64 0, i64 0
  %245 = getelementptr inbounds %struct.anon, %struct.anon* %244, i32 0, i32 0
  %246 = load i32, i32* %8, align 4
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds [2 x %struct.gr_info_s], [2 x %struct.gr_info_s]* %245, i64 0, i64 %247
  %249 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %248, i32 0, i32 10
  %250 = load i32, i32* %249, align 8
  %251 = icmp ugt i32 %242, %250
  br i1 %251, label %252, label %264

; <label>:252:                                    ; preds = %239
  %pgocount16 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 11)
  %253 = add i64 %pgocount16, 1
  store i64 %253, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 11)
  %254 = load %struct.gr_info_s*, %struct.gr_info_s** %23, align 8
  %255 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %254, i32 0, i32 10
  %256 = load i32, i32* %255, align 8
  %257 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %13, i32 0, i32 2
  %258 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %257, i64 0, i64 0
  %259 = getelementptr inbounds %struct.anon, %struct.anon* %258, i32 0, i32 0
  %260 = load i32, i32* %8, align 4
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds [2 x %struct.gr_info_s], [2 x %struct.gr_info_s]* %259, i64 0, i64 %261
  %263 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %262, i32 0, i32 10
  store i32 %256, i32* %263, align 8
  br label %276

; <label>:264:                                    ; preds = %239
  %pgocount17 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 12)
  %265 = add i64 %pgocount17, 1
  store i64 %265, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 12)
  %266 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %13, i32 0, i32 2
  %267 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %266, i64 0, i64 0
  %268 = getelementptr inbounds %struct.anon, %struct.anon* %267, i32 0, i32 0
  %269 = load i32, i32* %8, align 4
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds [2 x %struct.gr_info_s], [2 x %struct.gr_info_s]* %268, i64 0, i64 %270
  %272 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %271, i32 0, i32 10
  %273 = load i32, i32* %272, align 8
  %274 = load %struct.gr_info_s*, %struct.gr_info_s** %23, align 8
  %275 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %274, i32 0, i32 10
  store i32 %273, i32* %275, align 8
  br label %276

; <label>:276:                                    ; preds = %264, %252
  br label %277

; <label>:277:                                    ; preds = %276, %235
  %278 = load i32, i32* %15, align 4
  switch i32 %278, label %323 [
    i32 3, label %279
    i32 1, label %303
  ]

; <label>:279:                                    ; preds = %277
  store double* getelementptr inbounds ([2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i32 0, i32 0, i32 0, i32 0), double** %29, align 8
  store double* getelementptr inbounds ([2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i64 0, i64 1, i32 0, i32 0), double** %30, align 8
  store i32 0, i32* %28, align 4
  br label %280

; <label>:280:                                    ; preds = %295, %279
  %281 = load i32, i32* %28, align 4
  %282 = load %struct.gr_info_s*, %struct.gr_info_s** %23, align 8
  %283 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %282, i32 0, i32 10
  %284 = load i32, i32* %283, align 8
  %285 = mul i32 18, %284
  %286 = icmp ult i32 %281, %285
  br i1 %286, label %287, label %301

; <label>:287:                                    ; preds = %280
  %288 = load double*, double** %29, align 8
  %289 = load double, double* %288, align 8
  %290 = load double*, double** %30, align 8
  %291 = getelementptr inbounds double, double* %290, i32 1
  store double* %291, double** %30, align 8
  %292 = load double, double* %290, align 8
  %293 = fadd double %289, %292
  %294 = load double*, double** %29, align 8
  store double %293, double* %294, align 8
  br label %295

; <label>:295:                                    ; preds = %287
  %pgocount18 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 4)
  %296 = add i64 %pgocount18, 1
  store i64 %296, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 4)
  %297 = load i32, i32* %28, align 4
  %298 = add nsw i32 %297, 1
  store i32 %298, i32* %28, align 4
  %299 = load double*, double** %29, align 8
  %300 = getelementptr inbounds double, double* %299, i32 1
  store double* %300, double** %29, align 8
  br label %280

; <label>:301:                                    ; preds = %280
  %pgocount19 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 15)
  %302 = add i64 %pgocount19, 1
  store i64 %302, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 15)
  br label %323

; <label>:303:                                    ; preds = %277
  store double* getelementptr inbounds ([2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i32 0, i32 0, i32 0, i32 0), double** %32, align 8
  store double* getelementptr inbounds ([2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i64 0, i64 1, i32 0, i32 0), double** %33, align 8
  store i32 0, i32* %31, align 4
  br label %304

; <label>:304:                                    ; preds = %317, %303
  %305 = load i32, i32* %31, align 4
  %306 = load %struct.gr_info_s*, %struct.gr_info_s** %23, align 8
  %307 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %306, i32 0, i32 10
  %308 = load i32, i32* %307, align 8
  %309 = mul i32 18, %308
  %310 = icmp ult i32 %305, %309
  br i1 %310, label %311, label %321

; <label>:311:                                    ; preds = %304
  %312 = load double*, double** %33, align 8
  %313 = getelementptr inbounds double, double* %312, i32 1
  store double* %313, double** %33, align 8
  %314 = load double, double* %312, align 8
  %315 = load double*, double** %32, align 8
  %316 = getelementptr inbounds double, double* %315, i32 1
  store double* %316, double** %32, align 8
  store double %314, double* %315, align 8
  br label %317

; <label>:317:                                    ; preds = %311
  %pgocount20 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 5)
  %318 = add i64 %pgocount20, 1
  store i64 %318, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 5)
  %319 = load i32, i32* %31, align 4
  %320 = add nsw i32 %319, 1
  store i32 %320, i32* %31, align 4
  br label %304

; <label>:321:                                    ; preds = %304
  %pgocount21 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 16)
  %322 = add i64 %pgocount21, 1
  store i64 %322, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 16)
  br label %323

; <label>:323:                                    ; preds = %321, %301, %277
  br label %324

; <label>:324:                                    ; preds = %323, %140
  store i32 0, i32* %9, align 4
  br label %325

; <label>:325:                                    ; preds = %353, %324
  %326 = load i32, i32* %9, align 4
  %327 = load i32, i32* %19, align 4
  %328 = icmp slt i32 %326, %327
  br i1 %328, label %329, label %357

; <label>:329:                                    ; preds = %325
  %330 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %13, i32 0, i32 2
  %331 = load i32, i32* %9, align 4
  %332 = sext i32 %331 to i64
  %333 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %330, i64 0, i64 %332
  %334 = getelementptr inbounds %struct.anon, %struct.anon* %333, i32 0, i32 0
  %335 = load i32, i32* %8, align 4
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds [2 x %struct.gr_info_s], [2 x %struct.gr_info_s]* %334, i64 0, i64 %336
  store %struct.gr_info_s* %337, %struct.gr_info_s** %34, align 8
  %338 = load i32, i32* %9, align 4
  %339 = sext i32 %338 to i64
  %340 = getelementptr inbounds [2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i64 0, i64 %339
  %341 = getelementptr inbounds [32 x [18 x double]], [32 x [18 x double]]* %340, i32 0, i32 0
  %342 = load %struct.gr_info_s*, %struct.gr_info_s** %34, align 8
  call void @III_antialias([18 x double]* %341, %struct.gr_info_s* %342)
  %343 = load i32, i32* %9, align 4
  %344 = sext i32 %343 to i64
  %345 = getelementptr inbounds [2 x [32 x [18 x double]]], [2 x [32 x [18 x double]]]* @do_layer3.hybridIn, i64 0, i64 %344
  %346 = getelementptr inbounds [32 x [18 x double]], [32 x [18 x double]]* %345, i32 0, i32 0
  %347 = load i32, i32* %9, align 4
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds [2 x [18 x [32 x double]]], [2 x [18 x [32 x double]]]* @do_layer3.hybridOut, i64 0, i64 %348
  %350 = getelementptr inbounds [18 x [32 x double]], [18 x [32 x double]]* %349, i32 0, i32 0
  %351 = load i32, i32* %9, align 4
  %352 = load %struct.gr_info_s*, %struct.gr_info_s** %34, align 8
  call void @III_hybrid([18 x double]* %346, [32 x double]* %350, i32 %351, %struct.gr_info_s* %352)
  br label %353

; <label>:353:                                    ; preds = %329
  %pgocount22 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 0)
  %354 = add i64 %pgocount22, 1
  store i64 %354, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 0)
  %355 = load i32, i32* %9, align 4
  %356 = add nsw i32 %355, 1
  store i32 %356, i32* %9, align 4
  br label %325

; <label>:357:                                    ; preds = %325
  store i32 0, i32* %10, align 4
  br label %358

; <label>:358:                                    ; preds = %397, %357
  %359 = load i32, i32* %10, align 4
  %360 = icmp slt i32 %359, 18
  br i1 %360, label %361, label %400

; <label>:361:                                    ; preds = %358
  %362 = load i32, i32* %15, align 4
  %363 = icmp sge i32 %362, 0
  br i1 %363, label %364, label %375

; <label>:364:                                    ; preds = %361
  %pgocount23 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 1)
  %365 = add i64 %pgocount23, 1
  store i64 %365, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 1)
  %366 = load i32, i32* %10, align 4
  %367 = sext i32 %366 to i64
  %368 = getelementptr inbounds [18 x [32 x double]], [18 x [32 x double]]* getelementptr inbounds ([2 x [18 x [32 x double]]], [2 x [18 x [32 x double]]]* @do_layer3.hybridOut, i64 0, i64 0), i64 0, i64 %367
  %369 = getelementptr inbounds [32 x double], [32 x double]* %368, i32 0, i32 0
  %370 = load i8*, i8** %6, align 8
  %371 = load i32*, i32** %7, align 8
  %372 = call i32 @synth_1to1_mono(double* %369, i8* %370, i32* %371)
  %373 = load i32, i32* %11, align 4
  %374 = add nsw i32 %373, %372
  store i32 %374, i32* %11, align 4
  br label %396

; <label>:375:                                    ; preds = %361
  %pgocount24 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 2)
  %376 = add i64 %pgocount24, 1
  store i64 %376, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 2)
  %377 = load i32*, i32** %7, align 8
  %378 = load i32, i32* %377, align 4
  store i32 %378, i32* %35, align 4
  %379 = load i32, i32* %10, align 4
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds [18 x [32 x double]], [18 x [32 x double]]* getelementptr inbounds ([2 x [18 x [32 x double]]], [2 x [18 x [32 x double]]]* @do_layer3.hybridOut, i64 0, i64 0), i64 0, i64 %380
  %382 = getelementptr inbounds [32 x double], [32 x double]* %381, i32 0, i32 0
  %383 = load i8*, i8** %6, align 8
  %384 = call i32 @synth_1to1(double* %382, i32 0, i8* %383, i32* %35)
  %385 = load i32, i32* %11, align 4
  %386 = add nsw i32 %385, %384
  store i32 %386, i32* %11, align 4
  %387 = load i32, i32* %10, align 4
  %388 = sext i32 %387 to i64
  %389 = getelementptr inbounds [18 x [32 x double]], [18 x [32 x double]]* getelementptr inbounds ([2 x [18 x [32 x double]]], [2 x [18 x [32 x double]]]* @do_layer3.hybridOut, i64 0, i64 1), i64 0, i64 %388
  %390 = getelementptr inbounds [32 x double], [32 x double]* %389, i32 0, i32 0
  %391 = load i8*, i8** %6, align 8
  %392 = load i32*, i32** %7, align 8
  %393 = call i32 @synth_1to1(double* %390, i32 1, i8* %391, i32* %392)
  %394 = load i32, i32* %11, align 4
  %395 = add nsw i32 %394, %393
  store i32 %395, i32* %11, align 4
  br label %396

; <label>:396:                                    ; preds = %375, %364
  br label %397

; <label>:397:                                    ; preds = %396
  %398 = load i32, i32* %10, align 4
  %399 = add nsw i32 %398, 1
  store i32 %399, i32* %10, align 4
  br label %358

; <label>:400:                                    ; preds = %358
  br label %401

; <label>:401:                                    ; preds = %400
  %402 = load i32, i32* %8, align 4
  %403 = add nsw i32 %402, 1
  store i32 %403, i32* %8, align 4
  br label %99

; <label>:404:                                    ; preds = %99
  %pgocount25 = load i64, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 21)
  %405 = add i64 %pgocount25, 1
  store i64 %405, i64* getelementptr inbounds ([26 x i64], [26 x i64]* @__profc_do_layer3, i64 0, i64 21)
  %406 = load i32, i32* %11, align 4
  store i32 %406, i32* %4, align 4
  br label %407

; <label>:407:                                    ; preds = %404, %178, %137, %96
  %408 = load i32, i32* %4, align 4
  ret i32 %408
}

; Function Attrs: nounwind uwtable
define internal void @III_get_side_info_2(%struct.III_sideinfo*, i32, i32, i64, i32) #0 {
  %6 = alloca %struct.III_sideinfo*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.gr_info_s*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  store %struct.III_sideinfo* %0, %struct.III_sideinfo** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i64 %3, i64* %9, align 8
  store i32 %4, i32* %10, align 4
  %20 = load i32, i32* %10, align 4
  %21 = icmp eq i32 %20, 3
  %22 = zext i1 %21 to i64
  %pgocount = load i64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i64 0, i64 11)
  %23 = add i64 %pgocount, %22
  store i64 %23, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i64 0, i64 11)
  %24 = select i1 %21, i32 4, i32 0
  store i32 %24, i32* %12, align 4
  %25 = call i32 @getbits(i32 8)
  %26 = load %struct.III_sideinfo*, %struct.III_sideinfo** %6, align 8
  %27 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %26, i32 0, i32 0
  store i32 %25, i32* %27, align 8
  %28 = load i32, i32* %7, align 4
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %35

; <label>:30:                                     ; preds = %5
  %pgocount1 = load i64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i64 0, i64 8)
  %31 = add i64 %pgocount1, 1
  store i64 %31, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i64 0, i64 8)
  %32 = call i32 @get1bit()
  %33 = load %struct.III_sideinfo*, %struct.III_sideinfo** %6, align 8
  %34 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %33, i32 0, i32 1
  store i32 %32, i32* %34, align 4
  br label %40

; <label>:35:                                     ; preds = %5
  %pgocount2 = load i64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i64 0, i64 9)
  %36 = add i64 %pgocount2, 1
  store i64 %36, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i64 0, i64 9)
  %37 = call i32 @getbits_fast(i32 2)
  %38 = load %struct.III_sideinfo*, %struct.III_sideinfo** %6, align 8
  %39 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %38, i32 0, i32 1
  store i32 %37, i32* %39, align 4
  br label %40

; <label>:40:                                     ; preds = %35, %30
  store i32 0, i32* %11, align 4
  br label %41

; <label>:41:                                     ; preds = %223, %40
  %42 = load i32, i32* %11, align 4
  %43 = load i32, i32* %7, align 4
  %44 = icmp slt i32 %42, %43
  br i1 %44, label %45, label %226

; <label>:45:                                     ; preds = %41
  %46 = load %struct.III_sideinfo*, %struct.III_sideinfo** %6, align 8
  %47 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %46, i32 0, i32 2
  %48 = load i32, i32* %11, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %47, i64 0, i64 %49
  %51 = getelementptr inbounds %struct.anon, %struct.anon* %50, i32 0, i32 0
  %52 = getelementptr inbounds [2 x %struct.gr_info_s], [2 x %struct.gr_info_s]* %51, i64 0, i64 0
  store %struct.gr_info_s* %52, %struct.gr_info_s** %13, align 8
  %53 = call i32 @getbits(i32 12)
  %54 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %55 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %54, i32 0, i32 1
  store i32 %53, i32* %55, align 4
  %56 = call i32 @getbits_fast(i32 9)
  %57 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %58 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %57, i32 0, i32 2
  store i32 %56, i32* %58, align 8
  %59 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %60 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %59, i32 0, i32 2
  %61 = load i32, i32* %60, align 8
  %62 = icmp ugt i32 %61, 288
  br i1 %62, label %63, label %69

; <label>:63:                                     ; preds = %45
  %pgocount3 = load i64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i64 0, i64 3)
  %64 = add i64 %pgocount3, 1
  store i64 %64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i64 0, i64 3)
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %65, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0))
  %67 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %68 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %67, i32 0, i32 2
  store i32 288, i32* %68, align 8
  br label %69

; <label>:69:                                     ; preds = %63, %45
  %70 = call i32 @getbits_fast(i32 8)
  store i32 %70, i32* %14, align 4
  %71 = load i32, i32* %14, align 4
  %72 = zext i32 %71 to i64
  %73 = sub i64 0, %72
  %74 = getelementptr inbounds double, double* getelementptr inbounds ([378 x double], [378 x double]* @gainpow2, i32 0, i64 256), i64 %73
  %75 = load i32, i32* %12, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds double, double* %74, i64 %76
  %78 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %79 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %78, i32 0, i32 17
  store double* %77, double** %79, align 8
  %80 = load i32, i32* %8, align 4
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %88

; <label>:82:                                     ; preds = %69
  %pgocount4 = load i64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i64 0, i64 2)
  %83 = add i64 %pgocount4, 1
  store i64 %83, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i64 0, i64 2)
  %84 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %85 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %84, i32 0, i32 17
  %86 = load double*, double** %85, align 8
  %87 = getelementptr inbounds double, double* %86, i64 2
  store double* %87, double** %85, align 8
  br label %88

; <label>:88:                                     ; preds = %82, %69
  %89 = call i32 @getbits(i32 9)
  %90 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %91 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %90, i32 0, i32 3
  store i32 %89, i32* %91, align 4
  %92 = call i32 @get1bit()
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %94, label %166

; <label>:94:                                     ; preds = %88
  %95 = call i32 @getbits_fast(i32 2)
  %96 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %97 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %96, i32 0, i32 4
  store i32 %95, i32* %97, align 8
  %98 = call i32 @get1bit()
  %99 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %100 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %99, i32 0, i32 5
  store i32 %98, i32* %100, align 4
  %101 = call i32 @getbits_fast(i32 5)
  %102 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %103 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %102, i32 0, i32 6
  %104 = getelementptr inbounds [3 x i32], [3 x i32]* %103, i64 0, i64 0
  store i32 %101, i32* %104, align 8
  %105 = call i32 @getbits_fast(i32 5)
  %106 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %107 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %106, i32 0, i32 6
  %108 = getelementptr inbounds [3 x i32], [3 x i32]* %107, i64 0, i64 1
  store i32 %105, i32* %108, align 4
  %109 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %110 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %109, i32 0, i32 6
  %111 = getelementptr inbounds [3 x i32], [3 x i32]* %110, i64 0, i64 2
  store i32 0, i32* %111, align 8
  store i32 0, i32* %15, align 4
  br label %112

; <label>:112:                                    ; preds = %129, %94
  %113 = load i32, i32* %15, align 4
  %114 = icmp slt i32 %113, 3
  br i1 %114, label %115, label %133

; <label>:115:                                    ; preds = %112
  %116 = call i32 @getbits_fast(i32 3)
  %117 = shl i32 %116, 3
  store i32 %117, i32* %16, align 4
  %118 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %119 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %118, i32 0, i32 17
  %120 = load double*, double** %119, align 8
  %121 = load i32, i32* %16, align 4
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds double, double* %120, i64 %122
  %124 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %125 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %124, i32 0, i32 16
  %126 = load i32, i32* %15, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [3 x double*], [3 x double*]* %125, i64 0, i64 %127
  store double* %123, double** %128, align 8
  br label %129

; <label>:129:                                    ; preds = %115
  %pgocount5 = load i64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i64 0, i64 0)
  %130 = add i64 %pgocount5, 1
  store i64 %130, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i64 0, i64 0)
  %131 = load i32, i32* %15, align 4
  %132 = add nsw i32 %131, 1
  store i32 %132, i32* %15, align 4
  br label %112

; <label>:133:                                    ; preds = %112
  %134 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %135 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %134, i32 0, i32 4
  %136 = load i32, i32* %135, align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %142

; <label>:138:                                    ; preds = %133
  %pgocount6 = load i64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i64 0, i64 10)
  %139 = add i64 %pgocount6, 1
  store i64 %139, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i64 0, i64 10)
  %140 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %141 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %140, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i32 0, i32 0))
  call void @exit(i32 1) #5
  unreachable

; <label>:142:                                    ; preds = %133
  %143 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %144 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %143, i32 0, i32 4
  %145 = load i32, i32* %144, align 8
  %146 = icmp eq i32 %145, 2
  br i1 %146, label %147, label %151

; <label>:147:                                    ; preds = %142
  %pgocount7 = load i64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i64 0, i64 5)
  %148 = add i64 %pgocount7, 1
  store i64 %148, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i64 0, i64 5)
  %149 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %150 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %149, i32 0, i32 11
  store i32 18, i32* %150, align 4
  br label %163

; <label>:151:                                    ; preds = %142
  %152 = load i64, i64* %9, align 8
  %153 = icmp eq i64 %152, 8
  br i1 %153, label %154, label %158

; <label>:154:                                    ; preds = %151
  %pgocount8 = load i64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i64 0, i64 6)
  %155 = add i64 %pgocount8, 1
  store i64 %155, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i64 0, i64 6)
  %156 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %157 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %156, i32 0, i32 11
  store i32 54, i32* %157, align 4
  br label %162

; <label>:158:                                    ; preds = %151
  %pgocount9 = load i64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i64 0, i64 7)
  %159 = add i64 %pgocount9, 1
  store i64 %159, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i64 0, i64 7)
  %160 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %161 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %160, i32 0, i32 11
  store i32 27, i32* %161, align 4
  br label %162

; <label>:162:                                    ; preds = %158, %154
  br label %163

; <label>:163:                                    ; preds = %162, %147
  %164 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %165 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %164, i32 0, i32 12
  store i32 288, i32* %165, align 8
  br label %216

; <label>:166:                                    ; preds = %88
  store i32 0, i32* %17, align 4
  br label %167

; <label>:167:                                    ; preds = %178, %166
  %168 = load i32, i32* %17, align 4
  %169 = icmp slt i32 %168, 3
  br i1 %169, label %170, label %181

; <label>:170:                                    ; preds = %167
  %pgocount10 = load i64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i64 0, i64 1)
  %171 = add i64 %pgocount10, 1
  store i64 %171, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i64 0, i64 1)
  %172 = call i32 @getbits_fast(i32 5)
  %173 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %174 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %173, i32 0, i32 6
  %175 = load i32, i32* %17, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds [3 x i32], [3 x i32]* %174, i64 0, i64 %176
  store i32 %172, i32* %177, align 4
  br label %178

; <label>:178:                                    ; preds = %170
  %179 = load i32, i32* %17, align 4
  %180 = add nsw i32 %179, 1
  store i32 %180, i32* %17, align 4
  br label %167

; <label>:181:                                    ; preds = %167
  %pgocount11 = load i64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i64 0, i64 4)
  %182 = add i64 %pgocount11, 1
  store i64 %182, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_2, i64 0, i64 4)
  %183 = call i32 @getbits_fast(i32 4)
  store i32 %183, i32* %18, align 4
  %184 = call i32 @getbits_fast(i32 3)
  store i32 %184, i32* %19, align 4
  %185 = load i64, i64* %9, align 8
  %186 = getelementptr inbounds [9 x %struct.bandInfoStruct], [9 x %struct.bandInfoStruct]* @bandInfo, i64 0, i64 %185
  %187 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %186, i32 0, i32 0
  %188 = load i32, i32* %18, align 4
  %189 = add nsw i32 %188, 1
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds [23 x i16], [23 x i16]* %187, i64 0, i64 %190
  %192 = load i16, i16* %191, align 2
  %193 = sext i16 %192 to i32
  %194 = ashr i32 %193, 1
  %195 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %196 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %195, i32 0, i32 11
  store i32 %194, i32* %196, align 4
  %197 = load i64, i64* %9, align 8
  %198 = getelementptr inbounds [9 x %struct.bandInfoStruct], [9 x %struct.bandInfoStruct]* @bandInfo, i64 0, i64 %197
  %199 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %198, i32 0, i32 0
  %200 = load i32, i32* %18, align 4
  %201 = add nsw i32 %200, 1
  %202 = load i32, i32* %19, align 4
  %203 = add nsw i32 %201, %202
  %204 = add nsw i32 %203, 1
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds [23 x i16], [23 x i16]* %199, i64 0, i64 %205
  %207 = load i16, i16* %206, align 2
  %208 = sext i16 %207 to i32
  %209 = ashr i32 %208, 1
  %210 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %211 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %210, i32 0, i32 12
  store i32 %209, i32* %211, align 8
  %212 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %213 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %212, i32 0, i32 4
  store i32 0, i32* %213, align 8
  %214 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %215 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %214, i32 0, i32 5
  store i32 0, i32* %215, align 4
  br label %216

; <label>:216:                                    ; preds = %181, %163
  %217 = call i32 @get1bit()
  %218 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %219 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %218, i32 0, i32 14
  store i32 %217, i32* %219, align 8
  %220 = call i32 @get1bit()
  %221 = load %struct.gr_info_s*, %struct.gr_info_s** %13, align 8
  %222 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %221, i32 0, i32 15
  store i32 %220, i32* %222, align 4
  br label %223

; <label>:223:                                    ; preds = %216
  %224 = load i32, i32* %11, align 4
  %225 = add nsw i32 %224, 1
  store i32 %225, i32* %11, align 4
  br label %41

; <label>:226:                                    ; preds = %41
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @III_get_side_info_1(%struct.III_sideinfo*, i32, i32, i64, i32) #0 {
  %6 = alloca %struct.III_sideinfo*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.gr_info_s*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %struct.III_sideinfo* %0, %struct.III_sideinfo** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i64 %3, i64* %9, align 8
  store i32 %4, i32* %10, align 4
  %21 = load i32, i32* %10, align 4
  %22 = icmp eq i32 %21, 3
  %23 = zext i1 %22 to i64
  %pgocount = load i64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i64 0, i64 11)
  %24 = add i64 %pgocount, %23
  store i64 %24, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i64 0, i64 11)
  %25 = select i1 %22, i32 4, i32 0
  store i32 %25, i32* %13, align 4
  %26 = call i32 @getbits(i32 9)
  %27 = load %struct.III_sideinfo*, %struct.III_sideinfo** %6, align 8
  %28 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %27, i32 0, i32 0
  store i32 %26, i32* %28, align 8
  %29 = load i32, i32* %7, align 4
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %36

; <label>:31:                                     ; preds = %5
  %pgocount1 = load i64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i64 0, i64 8)
  %32 = add i64 %pgocount1, 1
  store i64 %32, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i64 0, i64 8)
  %33 = call i32 @getbits_fast(i32 5)
  %34 = load %struct.III_sideinfo*, %struct.III_sideinfo** %6, align 8
  %35 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %34, i32 0, i32 1
  store i32 %33, i32* %35, align 4
  br label %41

; <label>:36:                                     ; preds = %5
  %pgocount2 = load i64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i64 0, i64 9)
  %37 = add i64 %pgocount2, 1
  store i64 %37, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i64 0, i64 9)
  %38 = call i32 @getbits_fast(i32 3)
  %39 = load %struct.III_sideinfo*, %struct.III_sideinfo** %6, align 8
  %40 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %39, i32 0, i32 1
  store i32 %38, i32* %40, align 4
  br label %41

; <label>:41:                                     ; preds = %36, %31
  store i32 0, i32* %11, align 4
  br label %42

; <label>:42:                                     ; preds = %64, %41
  %43 = load i32, i32* %11, align 4
  %44 = load i32, i32* %7, align 4
  %45 = icmp slt i32 %43, %44
  br i1 %45, label %46, label %68

; <label>:46:                                     ; preds = %42
  %47 = load %struct.III_sideinfo*, %struct.III_sideinfo** %6, align 8
  %48 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %47, i32 0, i32 2
  %49 = load i32, i32* %11, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %48, i64 0, i64 %50
  %52 = getelementptr inbounds %struct.anon, %struct.anon* %51, i32 0, i32 0
  %53 = getelementptr inbounds [2 x %struct.gr_info_s], [2 x %struct.gr_info_s]* %52, i64 0, i64 0
  %54 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %53, i32 0, i32 0
  store i32 -1, i32* %54, align 8
  %55 = call i32 @getbits_fast(i32 4)
  %56 = load %struct.III_sideinfo*, %struct.III_sideinfo** %6, align 8
  %57 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %56, i32 0, i32 2
  %58 = load i32, i32* %11, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %57, i64 0, i64 %59
  %61 = getelementptr inbounds %struct.anon, %struct.anon* %60, i32 0, i32 0
  %62 = getelementptr inbounds [2 x %struct.gr_info_s], [2 x %struct.gr_info_s]* %61, i64 0, i64 1
  %63 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %62, i32 0, i32 0
  store i32 %55, i32* %63, align 8
  br label %64

; <label>:64:                                     ; preds = %46
  %pgocount3 = load i64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i64 0, i64 6)
  %65 = add i64 %pgocount3, 1
  store i64 %65, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i64 0, i64 6)
  %66 = load i32, i32* %11, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %11, align 4
  br label %42

; <label>:68:                                     ; preds = %42
  store i32 0, i32* %12, align 4
  br label %69

; <label>:69:                                     ; preds = %246, %68
  %70 = load i32, i32* %12, align 4
  %71 = icmp slt i32 %70, 2
  br i1 %71, label %72, label %250

; <label>:72:                                     ; preds = %69
  store i32 0, i32* %11, align 4
  br label %73

; <label>:73:                                     ; preds = %242, %72
  %74 = load i32, i32* %11, align 4
  %75 = load i32, i32* %7, align 4
  %76 = icmp slt i32 %74, %75
  br i1 %76, label %77, label %245

; <label>:77:                                     ; preds = %73
  %78 = load %struct.III_sideinfo*, %struct.III_sideinfo** %6, align 8
  %79 = getelementptr inbounds %struct.III_sideinfo, %struct.III_sideinfo* %78, i32 0, i32 2
  %80 = load i32, i32* %11, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %79, i64 0, i64 %81
  %83 = getelementptr inbounds %struct.anon, %struct.anon* %82, i32 0, i32 0
  %84 = load i32, i32* %12, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [2 x %struct.gr_info_s], [2 x %struct.gr_info_s]* %83, i64 0, i64 %85
  store %struct.gr_info_s* %86, %struct.gr_info_s** %14, align 8
  %87 = call i32 @getbits(i32 12)
  %88 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %89 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %88, i32 0, i32 1
  store i32 %87, i32* %89, align 4
  %90 = call i32 @getbits_fast(i32 9)
  %91 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %92 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %91, i32 0, i32 2
  store i32 %90, i32* %92, align 8
  %93 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %94 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %93, i32 0, i32 2
  %95 = load i32, i32* %94, align 8
  %96 = icmp ugt i32 %95, 288
  br i1 %96, label %97, label %103

; <label>:97:                                     ; preds = %77
  %pgocount4 = load i64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i64 0, i64 4)
  %98 = add i64 %pgocount4, 1
  store i64 %98, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i64 0, i64 4)
  %99 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %100 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %99, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0))
  %101 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %102 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %101, i32 0, i32 2
  store i32 288, i32* %102, align 8
  br label %103

; <label>:103:                                    ; preds = %97, %77
  %104 = call i32 @getbits_fast(i32 8)
  store i32 %104, i32* %15, align 4
  %105 = load i32, i32* %15, align 4
  %106 = zext i32 %105 to i64
  %107 = sub i64 0, %106
  %108 = getelementptr inbounds double, double* getelementptr inbounds ([378 x double], [378 x double]* @gainpow2, i32 0, i64 256), i64 %107
  %109 = load i32, i32* %13, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds double, double* %108, i64 %110
  %112 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %113 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %112, i32 0, i32 17
  store double* %111, double** %113, align 8
  %114 = load i32, i32* %8, align 4
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %116, label %122

; <label>:116:                                    ; preds = %103
  %pgocount5 = load i64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i64 0, i64 2)
  %117 = add i64 %pgocount5, 1
  store i64 %117, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i64 0, i64 2)
  %118 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %119 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %118, i32 0, i32 17
  %120 = load double*, double** %119, align 8
  %121 = getelementptr inbounds double, double* %120, i64 2
  store double* %121, double** %119, align 8
  br label %122

; <label>:122:                                    ; preds = %116, %103
  %123 = call i32 @getbits_fast(i32 4)
  %124 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %125 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %124, i32 0, i32 3
  store i32 %123, i32* %125, align 4
  %126 = call i32 @get1bit()
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %128, label %182

; <label>:128:                                    ; preds = %122
  %129 = call i32 @getbits_fast(i32 2)
  %130 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %131 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %130, i32 0, i32 4
  store i32 %129, i32* %131, align 8
  %132 = call i32 @get1bit()
  %133 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %134 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %133, i32 0, i32 5
  store i32 %132, i32* %134, align 4
  %135 = call i32 @getbits_fast(i32 5)
  %136 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %137 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %136, i32 0, i32 6
  %138 = getelementptr inbounds [3 x i32], [3 x i32]* %137, i64 0, i64 0
  store i32 %135, i32* %138, align 8
  %139 = call i32 @getbits_fast(i32 5)
  %140 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %141 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %140, i32 0, i32 6
  %142 = getelementptr inbounds [3 x i32], [3 x i32]* %141, i64 0, i64 1
  store i32 %139, i32* %142, align 4
  %143 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %144 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %143, i32 0, i32 6
  %145 = getelementptr inbounds [3 x i32], [3 x i32]* %144, i64 0, i64 2
  store i32 0, i32* %145, align 8
  store i32 0, i32* %16, align 4
  br label %146

; <label>:146:                                    ; preds = %164, %128
  %147 = load i32, i32* %16, align 4
  %148 = icmp slt i32 %147, 3
  br i1 %148, label %149, label %167

; <label>:149:                                    ; preds = %146
  %pgocount6 = load i64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i64 0, i64 0)
  %150 = add i64 %pgocount6, 1
  store i64 %150, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i64 0, i64 0)
  %151 = call i32 @getbits_fast(i32 3)
  %152 = shl i32 %151, 3
  store i32 %152, i32* %17, align 4
  %153 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %154 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %153, i32 0, i32 17
  %155 = load double*, double** %154, align 8
  %156 = load i32, i32* %17, align 4
  %157 = zext i32 %156 to i64
  %158 = getelementptr inbounds double, double* %155, i64 %157
  %159 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %160 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %159, i32 0, i32 16
  %161 = load i32, i32* %16, align 4
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds [3 x double*], [3 x double*]* %160, i64 0, i64 %162
  store double* %158, double** %163, align 8
  br label %164

; <label>:164:                                    ; preds = %149
  %165 = load i32, i32* %16, align 4
  %166 = add nsw i32 %165, 1
  store i32 %166, i32* %16, align 4
  br label %146

; <label>:167:                                    ; preds = %146
  %168 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %169 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %168, i32 0, i32 4
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %176

; <label>:172:                                    ; preds = %167
  %pgocount7 = load i64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i64 0, i64 10)
  %173 = add i64 %pgocount7, 1
  store i64 %173, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i64 0, i64 10)
  %174 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %175 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %174, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i32 0, i32 0))
  call void @exit(i32 1) #5
  unreachable

; <label>:176:                                    ; preds = %167
  %pgocount8 = load i64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i64 0, i64 3)
  %177 = add i64 %pgocount8, 1
  store i64 %177, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i64 0, i64 3)
  %178 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %179 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %178, i32 0, i32 11
  store i32 18, i32* %179, align 4
  %180 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %181 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %180, i32 0, i32 12
  store i32 288, i32* %181, align 8
  br label %232

; <label>:182:                                    ; preds = %122
  store i32 0, i32* %18, align 4
  br label %183

; <label>:183:                                    ; preds = %193, %182
  %184 = load i32, i32* %18, align 4
  %185 = icmp slt i32 %184, 3
  br i1 %185, label %186, label %197

; <label>:186:                                    ; preds = %183
  %187 = call i32 @getbits_fast(i32 5)
  %188 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %189 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %188, i32 0, i32 6
  %190 = load i32, i32* %18, align 4
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds [3 x i32], [3 x i32]* %189, i64 0, i64 %191
  store i32 %187, i32* %192, align 4
  br label %193

; <label>:193:                                    ; preds = %186
  %pgocount9 = load i64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i64 0, i64 1)
  %194 = add i64 %pgocount9, 1
  store i64 %194, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i64 0, i64 1)
  %195 = load i32, i32* %18, align 4
  %196 = add nsw i32 %195, 1
  store i32 %196, i32* %18, align 4
  br label %183

; <label>:197:                                    ; preds = %183
  %pgocount10 = load i64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i64 0, i64 5)
  %198 = add i64 %pgocount10, 1
  store i64 %198, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i64 0, i64 5)
  %199 = call i32 @getbits_fast(i32 4)
  store i32 %199, i32* %19, align 4
  %200 = call i32 @getbits_fast(i32 3)
  store i32 %200, i32* %20, align 4
  %201 = load i64, i64* %9, align 8
  %202 = getelementptr inbounds [9 x %struct.bandInfoStruct], [9 x %struct.bandInfoStruct]* @bandInfo, i64 0, i64 %201
  %203 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %202, i32 0, i32 0
  %204 = load i32, i32* %19, align 4
  %205 = add nsw i32 %204, 1
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds [23 x i16], [23 x i16]* %203, i64 0, i64 %206
  %208 = load i16, i16* %207, align 2
  %209 = sext i16 %208 to i32
  %210 = ashr i32 %209, 1
  %211 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %212 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %211, i32 0, i32 11
  store i32 %210, i32* %212, align 4
  %213 = load i64, i64* %9, align 8
  %214 = getelementptr inbounds [9 x %struct.bandInfoStruct], [9 x %struct.bandInfoStruct]* @bandInfo, i64 0, i64 %213
  %215 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %214, i32 0, i32 0
  %216 = load i32, i32* %19, align 4
  %217 = add nsw i32 %216, 1
  %218 = load i32, i32* %20, align 4
  %219 = add nsw i32 %217, %218
  %220 = add nsw i32 %219, 1
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds [23 x i16], [23 x i16]* %215, i64 0, i64 %221
  %223 = load i16, i16* %222, align 2
  %224 = sext i16 %223 to i32
  %225 = ashr i32 %224, 1
  %226 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %227 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %226, i32 0, i32 12
  store i32 %225, i32* %227, align 8
  %228 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %229 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %228, i32 0, i32 4
  store i32 0, i32* %229, align 8
  %230 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %231 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %230, i32 0, i32 5
  store i32 0, i32* %231, align 4
  br label %232

; <label>:232:                                    ; preds = %197, %176
  %233 = call i32 @get1bit()
  %234 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %235 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %234, i32 0, i32 13
  store i32 %233, i32* %235, align 4
  %236 = call i32 @get1bit()
  %237 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %238 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %237, i32 0, i32 14
  store i32 %236, i32* %238, align 8
  %239 = call i32 @get1bit()
  %240 = load %struct.gr_info_s*, %struct.gr_info_s** %14, align 8
  %241 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %240, i32 0, i32 15
  store i32 %239, i32* %241, align 4
  br label %242

; <label>:242:                                    ; preds = %232
  %243 = load i32, i32* %11, align 4
  %244 = add nsw i32 %243, 1
  store i32 %244, i32* %11, align 4
  br label %73

; <label>:245:                                    ; preds = %73
  br label %246

; <label>:246:                                    ; preds = %245
  %pgocount11 = load i64, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i64 0, i64 7)
  %247 = add i64 %pgocount11, 1
  store i64 %247, i64* getelementptr inbounds ([12 x i64], [12 x i64]* @__profc_tmp1.ll_III_get_side_info_1, i64 0, i64 7)
  %248 = load i32, i32* %12, align 4
  %249 = add nsw i32 %248, 1
  store i32 %249, i32* %12, align 4
  br label %69

; <label>:250:                                    ; preds = %69
  ret void
}

declare i32 @set_pointer(i64) #2

; Function Attrs: nounwind uwtable
define internal i32 @III_get_scale_factors_2(i32*, %struct.gr_info_s*, i32) #0 {
  %4 = alloca i32*, align 8
  %5 = alloca %struct.gr_info_s*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store %struct.gr_info_s* %1, %struct.gr_info_s** %5, align 8
  store i32 %2, i32* %6, align 4
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 4
  %14 = load i32, i32* %6, align 4
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %25

; <label>:16:                                     ; preds = %3
  %pgocount = load i64, i64* getelementptr inbounds ([9 x i64], [9 x i64]* @__profc_tmp1.ll_III_get_scale_factors_2, i64 0, i64 5)
  %17 = add i64 %pgocount, 1
  store i64 %17, i64* getelementptr inbounds ([9 x i64], [9 x i64]* @__profc_tmp1.ll_III_get_scale_factors_2, i64 0, i64 5)
  %18 = load %struct.gr_info_s*, %struct.gr_info_s** %5, align 8
  %19 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %18, i32 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = lshr i32 %20, 1
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds [256 x i32], [256 x i32]* @i_slen2, i64 0, i64 %22
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %10, align 4
  br label %33

; <label>:25:                                     ; preds = %3
  %pgocount1 = load i64, i64* getelementptr inbounds ([9 x i64], [9 x i64]* @__profc_tmp1.ll_III_get_scale_factors_2, i64 0, i64 7)
  %26 = add i64 %pgocount1, 1
  store i64 %26, i64* getelementptr inbounds ([9 x i64], [9 x i64]* @__profc_tmp1.ll_III_get_scale_factors_2, i64 0, i64 7)
  %27 = load %struct.gr_info_s*, %struct.gr_info_s** %5, align 8
  %28 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %27, i32 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds [512 x i32], [512 x i32]* @n_slen2, i64 0, i64 %30
  %32 = load i32, i32* %31, align 4
  store i32 %32, i32* %10, align 4
  br label %33

; <label>:33:                                     ; preds = %25, %16
  %34 = load i32, i32* %10, align 4
  %35 = lshr i32 %34, 15
  %36 = and i32 %35, 1
  %37 = load %struct.gr_info_s*, %struct.gr_info_s** %5, align 8
  %38 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %37, i32 0, i32 13
  store i32 %36, i32* %38, align 4
  store i32 0, i32* %11, align 4
  %39 = load %struct.gr_info_s*, %struct.gr_info_s** %5, align 8
  %40 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %39, i32 0, i32 4
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 2
  br i1 %42, label %43, label %56

; <label>:43:                                     ; preds = %33
  %44 = load i32, i32* %11, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %11, align 4
  %46 = load %struct.gr_info_s*, %struct.gr_info_s** %5, align 8
  %47 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %46, i32 0, i32 5
  %48 = load i32, i32* %47, align 4
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %54

; <label>:50:                                     ; preds = %43
  %pgocount2 = load i64, i64* getelementptr inbounds ([9 x i64], [9 x i64]* @__profc_tmp1.ll_III_get_scale_factors_2, i64 0, i64 8)
  %51 = add i64 %pgocount2, 1
  store i64 %51, i64* getelementptr inbounds ([9 x i64], [9 x i64]* @__profc_tmp1.ll_III_get_scale_factors_2, i64 0, i64 8)
  %52 = load i32, i32* %11, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %11, align 4
  br label %54

; <label>:54:                                     ; preds = %50, %43
  %pgocount3 = load i64, i64* getelementptr inbounds ([9 x i64], [9 x i64]* @__profc_tmp1.ll_III_get_scale_factors_2, i64 0, i64 6)
  %55 = add i64 %pgocount3, 1
  store i64 %55, i64* getelementptr inbounds ([9 x i64], [9 x i64]* @__profc_tmp1.ll_III_get_scale_factors_2, i64 0, i64 6)
  br label %56

; <label>:56:                                     ; preds = %54, %33
  %57 = load i32, i32* %11, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [3 x [6 x [4 x i8]]], [3 x [6 x [4 x i8]]]* @III_get_scale_factors_2.stab, i64 0, i64 %58
  %60 = load i32, i32* %10, align 4
  %61 = lshr i32 %60, 12
  %62 = and i32 %61, 7
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds [6 x [4 x i8]], [6 x [4 x i8]]* %59, i64 0, i64 %63
  %65 = getelementptr inbounds [4 x i8], [4 x i8]* %64, i32 0, i32 0
  store i8* %65, i8** %7, align 8
  store i32 0, i32* %8, align 4
  br label %66

; <label>:66:                                     ; preds = %127, %56
  %67 = load i32, i32* %8, align 4
  %68 = icmp slt i32 %67, 4
  br i1 %68, label %69, label %130

; <label>:69:                                     ; preds = %66
  %70 = load i32, i32* %10, align 4
  %71 = and i32 %70, 7
  store i32 %71, i32* %13, align 4
  %72 = load i32, i32* %10, align 4
  %73 = lshr i32 %72, 3
  store i32 %73, i32* %10, align 4
  %74 = load i32, i32* %13, align 4
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %76, label %107

; <label>:76:                                     ; preds = %69
  %pgocount4 = load i64, i64* getelementptr inbounds ([9 x i64], [9 x i64]* @__profc_tmp1.ll_III_get_scale_factors_2, i64 0, i64 3)
  %77 = add i64 %pgocount4, 1
  store i64 %77, i64* getelementptr inbounds ([9 x i64], [9 x i64]* @__profc_tmp1.ll_III_get_scale_factors_2, i64 0, i64 3)
  store i32 0, i32* %9, align 4
  br label %78

; <label>:78:                                     ; preds = %92, %76
  %79 = load i32, i32* %9, align 4
  %80 = load i8*, i8** %7, align 8
  %81 = load i32, i32* %8, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i8, i8* %80, i64 %82
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i32
  %86 = icmp slt i32 %79, %85
  br i1 %86, label %87, label %96

; <label>:87:                                     ; preds = %78
  %88 = load i32, i32* %13, align 4
  %89 = call i32 @getbits_fast(i32 %88)
  %90 = load i32*, i32** %4, align 8
  %91 = getelementptr inbounds i32, i32* %90, i32 1
  store i32* %91, i32** %4, align 8
  store i32 %89, i32* %90, align 4
  br label %92

; <label>:92:                                     ; preds = %87
  %pgocount5 = load i64, i64* getelementptr inbounds ([9 x i64], [9 x i64]* @__profc_tmp1.ll_III_get_scale_factors_2, i64 0, i64 0)
  %93 = add i64 %pgocount5, 1
  store i64 %93, i64* getelementptr inbounds ([9 x i64], [9 x i64]* @__profc_tmp1.ll_III_get_scale_factors_2, i64 0, i64 0)
  %94 = load i32, i32* %9, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %9, align 4
  br label %78

; <label>:96:                                     ; preds = %78
  %97 = load i8*, i8** %7, align 8
  %98 = load i32, i32* %8, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i8, i8* %97, i64 %99
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = load i32, i32* %13, align 4
  %104 = mul nsw i32 %102, %103
  %105 = load i32, i32* %12, align 4
  %106 = add nsw i32 %105, %104
  store i32 %106, i32* %12, align 4
  br label %126

; <label>:107:                                    ; preds = %69
  store i32 0, i32* %9, align 4
  br label %108

; <label>:108:                                    ; preds = %120, %107
  %109 = load i32, i32* %9, align 4
  %110 = load i8*, i8** %7, align 8
  %111 = load i32, i32* %8, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i8, i8* %110, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = icmp slt i32 %109, %115
  br i1 %116, label %117, label %124

; <label>:117:                                    ; preds = %108
  %118 = load i32*, i32** %4, align 8
  %119 = getelementptr inbounds i32, i32* %118, i32 1
  store i32* %119, i32** %4, align 8
  store i32 0, i32* %118, align 4
  br label %120

; <label>:120:                                    ; preds = %117
  %pgocount6 = load i64, i64* getelementptr inbounds ([9 x i64], [9 x i64]* @__profc_tmp1.ll_III_get_scale_factors_2, i64 0, i64 1)
  %121 = add i64 %pgocount6, 1
  store i64 %121, i64* getelementptr inbounds ([9 x i64], [9 x i64]* @__profc_tmp1.ll_III_get_scale_factors_2, i64 0, i64 1)
  %122 = load i32, i32* %9, align 4
  %123 = add nsw i32 %122, 1
  store i32 %123, i32* %9, align 4
  br label %108

; <label>:124:                                    ; preds = %108
  %pgocount7 = load i64, i64* getelementptr inbounds ([9 x i64], [9 x i64]* @__profc_tmp1.ll_III_get_scale_factors_2, i64 0, i64 4)
  %125 = add i64 %pgocount7, 1
  store i64 %125, i64* getelementptr inbounds ([9 x i64], [9 x i64]* @__profc_tmp1.ll_III_get_scale_factors_2, i64 0, i64 4)
  br label %126

; <label>:126:                                    ; preds = %124, %96
  br label %127

; <label>:127:                                    ; preds = %126
  %128 = load i32, i32* %8, align 4
  %129 = add nsw i32 %128, 1
  store i32 %129, i32* %8, align 4
  br label %66

; <label>:130:                                    ; preds = %66
  %131 = load i32, i32* %11, align 4
  %132 = shl i32 %131, 1
  %133 = add nsw i32 %132, 1
  store i32 %133, i32* %11, align 4
  store i32 0, i32* %8, align 4
  br label %134

; <label>:134:                                    ; preds = %141, %130
  %135 = load i32, i32* %8, align 4
  %136 = load i32, i32* %11, align 4
  %137 = icmp slt i32 %135, %136
  br i1 %137, label %138, label %145

; <label>:138:                                    ; preds = %134
  %139 = load i32*, i32** %4, align 8
  %140 = getelementptr inbounds i32, i32* %139, i32 1
  store i32* %140, i32** %4, align 8
  store i32 0, i32* %139, align 4
  br label %141

; <label>:141:                                    ; preds = %138
  %pgocount8 = load i64, i64* getelementptr inbounds ([9 x i64], [9 x i64]* @__profc_tmp1.ll_III_get_scale_factors_2, i64 0, i64 2)
  %142 = add i64 %pgocount8, 1
  store i64 %142, i64* getelementptr inbounds ([9 x i64], [9 x i64]* @__profc_tmp1.ll_III_get_scale_factors_2, i64 0, i64 2)
  %143 = load i32, i32* %8, align 4
  %144 = add nsw i32 %143, 1
  store i32 %144, i32* %8, align 4
  br label %134

; <label>:145:                                    ; preds = %134
  %146 = load i32, i32* %12, align 4
  ret i32 %146
}

; Function Attrs: nounwind uwtable
define internal i32 @III_get_scale_factors_1(i32*, %struct.gr_info_s*) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca %struct.gr_info_s*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store %struct.gr_info_s* %1, %struct.gr_info_s** %4, align 8
  %11 = load %struct.gr_info_s*, %struct.gr_info_s** %4, align 8
  %12 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %11, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds [16 x i8], [16 x i8]* getelementptr inbounds ([2 x [16 x i8]], [2 x [16 x i8]]* @III_get_scale_factors_1.slen, i64 0, i64 0), i64 0, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  store i32 %17, i32* %6, align 4
  %18 = load %struct.gr_info_s*, %struct.gr_info_s** %4, align 8
  %19 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %18, i32 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* getelementptr inbounds ([2 x [16 x i8]], [2 x [16 x i8]]* @III_get_scale_factors_1.slen, i64 0, i64 1), i64 0, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  store i32 %24, i32* %7, align 4
  %25 = load %struct.gr_info_s*, %struct.gr_info_s** %4, align 8
  %26 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %25, i32 0, i32 4
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 2
  br i1 %28, label %29, label %90

; <label>:29:                                     ; preds = %2
  store i32 18, i32* %8, align 4
  %30 = load i32, i32* %6, align 4
  %31 = load i32, i32* %7, align 4
  %32 = add nsw i32 %30, %31
  %33 = mul nsw i32 %32, 18
  store i32 %33, i32* %5, align 4
  %34 = load %struct.gr_info_s*, %struct.gr_info_s** %4, align 8
  %35 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %34, i32 0, i32 5
  %36 = load i32, i32* %35, align 4
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %56

; <label>:38:                                     ; preds = %29
  %pgocount = load i64, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 10)
  %39 = add i64 %pgocount, 1
  store i64 %39, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 10)
  store i32 8, i32* %8, align 4
  br label %40

; <label>:40:                                     ; preds = %48, %38
  %41 = load i32, i32* %8, align 4
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %52

; <label>:43:                                     ; preds = %40
  %44 = load i32, i32* %6, align 4
  %45 = call i32 @getbits_fast(i32 %44)
  %46 = load i32*, i32** %3, align 8
  %47 = getelementptr inbounds i32, i32* %46, i32 1
  store i32* %47, i32** %3, align 8
  store i32 %45, i32* %46, align 4
  br label %48

; <label>:48:                                     ; preds = %43
  %pgocount1 = load i64, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 2)
  %49 = add i64 %pgocount1, 1
  store i64 %49, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 2)
  %50 = load i32, i32* %8, align 4
  %51 = add nsw i32 %50, -1
  store i32 %51, i32* %8, align 4
  br label %40

; <label>:52:                                     ; preds = %40
  store i32 9, i32* %8, align 4
  %53 = load i32, i32* %6, align 4
  %54 = load i32, i32* %5, align 4
  %55 = sub nsw i32 %54, %53
  store i32 %55, i32* %5, align 4
  br label %56

; <label>:56:                                     ; preds = %52, %29
  br label %57

; <label>:57:                                     ; preds = %65, %56
  %58 = load i32, i32* %8, align 4
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %69

; <label>:60:                                     ; preds = %57
  %61 = load i32, i32* %6, align 4
  %62 = call i32 @getbits_fast(i32 %61)
  %63 = load i32*, i32** %3, align 8
  %64 = getelementptr inbounds i32, i32* %63, i32 1
  store i32* %64, i32** %3, align 8
  store i32 %62, i32* %63, align 4
  br label %65

; <label>:65:                                     ; preds = %60
  %pgocount2 = load i64, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 0)
  %66 = add i64 %pgocount2, 1
  store i64 %66, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 0)
  %67 = load i32, i32* %8, align 4
  %68 = add nsw i32 %67, -1
  store i32 %68, i32* %8, align 4
  br label %57

; <label>:69:                                     ; preds = %57
  store i32 18, i32* %8, align 4
  br label %70

; <label>:70:                                     ; preds = %78, %69
  %71 = load i32, i32* %8, align 4
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %73, label %82

; <label>:73:                                     ; preds = %70
  %74 = load i32, i32* %7, align 4
  %75 = call i32 @getbits_fast(i32 %74)
  %76 = load i32*, i32** %3, align 8
  %77 = getelementptr inbounds i32, i32* %76, i32 1
  store i32* %77, i32** %3, align 8
  store i32 %75, i32* %76, align 4
  br label %78

; <label>:78:                                     ; preds = %73
  %pgocount3 = load i64, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 1)
  %79 = add i64 %pgocount3, 1
  store i64 %79, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 1)
  %80 = load i32, i32* %8, align 4
  %81 = add nsw i32 %80, -1
  store i32 %81, i32* %8, align 4
  br label %70

; <label>:82:                                     ; preds = %70
  %pgocount4 = load i64, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 9)
  %83 = add i64 %pgocount4, 1
  store i64 %83, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 9)
  %84 = load i32*, i32** %3, align 8
  %85 = getelementptr inbounds i32, i32* %84, i32 1
  store i32* %85, i32** %3, align 8
  store i32 0, i32* %84, align 4
  %86 = load i32*, i32** %3, align 8
  %87 = getelementptr inbounds i32, i32* %86, i32 1
  store i32* %87, i32** %3, align 8
  store i32 0, i32* %86, align 4
  %88 = load i32*, i32** %3, align 8
  %89 = getelementptr inbounds i32, i32* %88, i32 1
  store i32* %89, i32** %3, align 8
  store i32 0, i32* %88, align 4
  br label %239

; <label>:90:                                     ; preds = %2
  %91 = load %struct.gr_info_s*, %struct.gr_info_s** %4, align 8
  %92 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %91, i32 0, i32 0
  %93 = load i32, i32* %92, align 8
  store i32 %93, i32* %10, align 4
  %94 = load i32, i32* %10, align 4
  %95 = icmp slt i32 %94, 0
  br i1 %95, label %96, label %130

; <label>:96:                                     ; preds = %90
  store i32 11, i32* %9, align 4
  br label %97

; <label>:97:                                     ; preds = %105, %96
  %98 = load i32, i32* %9, align 4
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %100, label %109

; <label>:100:                                    ; preds = %97
  %101 = load i32, i32* %6, align 4
  %102 = call i32 @getbits_fast(i32 %101)
  %103 = load i32*, i32** %3, align 8
  %104 = getelementptr inbounds i32, i32* %103, i32 1
  store i32* %104, i32** %3, align 8
  store i32 %102, i32* %103, align 4
  br label %105

; <label>:105:                                    ; preds = %100
  %pgocount5 = load i64, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 3)
  %106 = add i64 %pgocount5, 1
  store i64 %106, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 3)
  %107 = load i32, i32* %9, align 4
  %108 = add nsw i32 %107, -1
  store i32 %108, i32* %9, align 4
  br label %97

; <label>:109:                                    ; preds = %97
  store i32 10, i32* %9, align 4
  br label %110

; <label>:110:                                    ; preds = %118, %109
  %111 = load i32, i32* %9, align 4
  %112 = icmp ne i32 %111, 0
  br i1 %112, label %113, label %122

; <label>:113:                                    ; preds = %110
  %114 = load i32, i32* %7, align 4
  %115 = call i32 @getbits_fast(i32 %114)
  %116 = load i32*, i32** %3, align 8
  %117 = getelementptr inbounds i32, i32* %116, i32 1
  store i32* %117, i32** %3, align 8
  store i32 %115, i32* %116, align 4
  br label %118

; <label>:118:                                    ; preds = %113
  %pgocount6 = load i64, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 4)
  %119 = add i64 %pgocount6, 1
  store i64 %119, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 4)
  %120 = load i32, i32* %9, align 4
  %121 = add nsw i32 %120, -1
  store i32 %121, i32* %9, align 4
  br label %110

; <label>:122:                                    ; preds = %110
  %pgocount7 = load i64, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 11)
  %123 = add i64 %pgocount7, 1
  store i64 %123, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 11)
  %124 = load i32, i32* %6, align 4
  %125 = load i32, i32* %7, align 4
  %126 = add nsw i32 %124, %125
  %127 = mul nsw i32 %126, 10
  %128 = load i32, i32* %6, align 4
  %129 = add nsw i32 %127, %128
  store i32 %129, i32* %5, align 4
  br label %236

; <label>:130:                                    ; preds = %90
  store i32 0, i32* %5, align 4
  %131 = load i32, i32* %10, align 4
  %132 = and i32 %131, 8
  %133 = icmp ne i32 %132, 0
  br i1 %133, label %152, label %134

; <label>:134:                                    ; preds = %130
  store i32 6, i32* %9, align 4
  br label %135

; <label>:135:                                    ; preds = %143, %134
  %136 = load i32, i32* %9, align 4
  %137 = icmp ne i32 %136, 0
  br i1 %137, label %138, label %147

; <label>:138:                                    ; preds = %135
  %139 = load i32, i32* %6, align 4
  %140 = call i32 @getbits_fast(i32 %139)
  %141 = load i32*, i32** %3, align 8
  %142 = getelementptr inbounds i32, i32* %141, i32 1
  store i32* %142, i32** %3, align 8
  store i32 %140, i32* %141, align 4
  br label %143

; <label>:143:                                    ; preds = %138
  %pgocount8 = load i64, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 5)
  %144 = add i64 %pgocount8, 1
  store i64 %144, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 5)
  %145 = load i32, i32* %9, align 4
  %146 = add nsw i32 %145, -1
  store i32 %146, i32* %9, align 4
  br label %135

; <label>:147:                                    ; preds = %135
  %148 = load i32, i32* %6, align 4
  %149 = mul nsw i32 %148, 6
  %150 = load i32, i32* %5, align 4
  %151 = add nsw i32 %150, %149
  store i32 %151, i32* %5, align 4
  br label %156

; <label>:152:                                    ; preds = %130
  %pgocount9 = load i64, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 12)
  %153 = add i64 %pgocount9, 1
  store i64 %153, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 12)
  %154 = load i32*, i32** %3, align 8
  %155 = getelementptr inbounds i32, i32* %154, i64 6
  store i32* %155, i32** %3, align 8
  br label %156

; <label>:156:                                    ; preds = %152, %147
  %157 = load i32, i32* %10, align 4
  %158 = and i32 %157, 4
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %178, label %160

; <label>:160:                                    ; preds = %156
  store i32 5, i32* %9, align 4
  br label %161

; <label>:161:                                    ; preds = %169, %160
  %162 = load i32, i32* %9, align 4
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %164, label %173

; <label>:164:                                    ; preds = %161
  %165 = load i32, i32* %6, align 4
  %166 = call i32 @getbits_fast(i32 %165)
  %167 = load i32*, i32** %3, align 8
  %168 = getelementptr inbounds i32, i32* %167, i32 1
  store i32* %168, i32** %3, align 8
  store i32 %166, i32* %167, align 4
  br label %169

; <label>:169:                                    ; preds = %164
  %pgocount10 = load i64, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 6)
  %170 = add i64 %pgocount10, 1
  store i64 %170, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 6)
  %171 = load i32, i32* %9, align 4
  %172 = add nsw i32 %171, -1
  store i32 %172, i32* %9, align 4
  br label %161

; <label>:173:                                    ; preds = %161
  %174 = load i32, i32* %6, align 4
  %175 = mul nsw i32 %174, 5
  %176 = load i32, i32* %5, align 4
  %177 = add nsw i32 %176, %175
  store i32 %177, i32* %5, align 4
  br label %182

; <label>:178:                                    ; preds = %156
  %pgocount11 = load i64, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 13)
  %179 = add i64 %pgocount11, 1
  store i64 %179, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 13)
  %180 = load i32*, i32** %3, align 8
  %181 = getelementptr inbounds i32, i32* %180, i64 5
  store i32* %181, i32** %3, align 8
  br label %182

; <label>:182:                                    ; preds = %178, %173
  %183 = load i32, i32* %10, align 4
  %184 = and i32 %183, 2
  %185 = icmp ne i32 %184, 0
  br i1 %185, label %204, label %186

; <label>:186:                                    ; preds = %182
  store i32 5, i32* %9, align 4
  br label %187

; <label>:187:                                    ; preds = %195, %186
  %188 = load i32, i32* %9, align 4
  %189 = icmp ne i32 %188, 0
  br i1 %189, label %190, label %199

; <label>:190:                                    ; preds = %187
  %191 = load i32, i32* %7, align 4
  %192 = call i32 @getbits_fast(i32 %191)
  %193 = load i32*, i32** %3, align 8
  %194 = getelementptr inbounds i32, i32* %193, i32 1
  store i32* %194, i32** %3, align 8
  store i32 %192, i32* %193, align 4
  br label %195

; <label>:195:                                    ; preds = %190
  %pgocount12 = load i64, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 7)
  %196 = add i64 %pgocount12, 1
  store i64 %196, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 7)
  %197 = load i32, i32* %9, align 4
  %198 = add nsw i32 %197, -1
  store i32 %198, i32* %9, align 4
  br label %187

; <label>:199:                                    ; preds = %187
  %200 = load i32, i32* %7, align 4
  %201 = mul nsw i32 %200, 5
  %202 = load i32, i32* %5, align 4
  %203 = add nsw i32 %202, %201
  store i32 %203, i32* %5, align 4
  br label %208

; <label>:204:                                    ; preds = %182
  %pgocount13 = load i64, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 14)
  %205 = add i64 %pgocount13, 1
  store i64 %205, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 14)
  %206 = load i32*, i32** %3, align 8
  %207 = getelementptr inbounds i32, i32* %206, i64 5
  store i32* %207, i32** %3, align 8
  br label %208

; <label>:208:                                    ; preds = %204, %199
  %209 = load i32, i32* %10, align 4
  %210 = and i32 %209, 1
  %211 = icmp ne i32 %210, 0
  br i1 %211, label %231, label %212

; <label>:212:                                    ; preds = %208
  store i32 5, i32* %9, align 4
  br label %213

; <label>:213:                                    ; preds = %221, %212
  %214 = load i32, i32* %9, align 4
  %215 = icmp ne i32 %214, 0
  br i1 %215, label %216, label %225

; <label>:216:                                    ; preds = %213
  %217 = load i32, i32* %7, align 4
  %218 = call i32 @getbits_fast(i32 %217)
  %219 = load i32*, i32** %3, align 8
  %220 = getelementptr inbounds i32, i32* %219, i32 1
  store i32* %220, i32** %3, align 8
  store i32 %218, i32* %219, align 4
  br label %221

; <label>:221:                                    ; preds = %216
  %pgocount14 = load i64, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 8)
  %222 = add i64 %pgocount14, 1
  store i64 %222, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 8)
  %223 = load i32, i32* %9, align 4
  %224 = add nsw i32 %223, -1
  store i32 %224, i32* %9, align 4
  br label %213

; <label>:225:                                    ; preds = %213
  %pgocount15 = load i64, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 15)
  %226 = add i64 %pgocount15, 1
  store i64 %226, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 15)
  %227 = load i32, i32* %7, align 4
  %228 = mul nsw i32 %227, 5
  %229 = load i32, i32* %5, align 4
  %230 = add nsw i32 %229, %228
  store i32 %230, i32* %5, align 4
  br label %235

; <label>:231:                                    ; preds = %208
  %pgocount16 = load i64, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 16)
  %232 = add i64 %pgocount16, 1
  store i64 %232, i64* getelementptr inbounds ([17 x i64], [17 x i64]* @__profc_tmp1.ll_III_get_scale_factors_1, i64 0, i64 16)
  %233 = load i32*, i32** %3, align 8
  %234 = getelementptr inbounds i32, i32* %233, i64 5
  store i32* %234, i32** %3, align 8
  br label %235

; <label>:235:                                    ; preds = %231, %225
  br label %236

; <label>:236:                                    ; preds = %235, %122
  %237 = load i32*, i32** %3, align 8
  %238 = getelementptr inbounds i32, i32* %237, i32 1
  store i32* %238, i32** %3, align 8
  store i32 0, i32* %237, align 4
  br label %239

; <label>:239:                                    ; preds = %236, %82
  %240 = load i32, i32* %5, align 4
  ret i32 %240
}

; Function Attrs: nounwind uwtable
define internal i32 @III_dequantize_sample([18 x double]*, i32*, %struct.gr_info_s*, i32, i32) #0 {
  %6 = alloca i32, align 4
  %7 = alloca [18 x double]*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca %struct.gr_info_s*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca double*, align 8
  %14 = alloca [3 x i32], align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca [4 x i32], align 16
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca double, align 8
  %27 = alloca i32*, align 8
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca %struct.newhuff*, align 8
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i16*, align 8
  %34 = alloca %struct.newhuff*, align 8
  %35 = alloca i16*, align 8
  %36 = alloca i16, align 2
  %37 = alloca i32, align 4
  %38 = alloca i32*, align 8
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32*, align 8
  %43 = alloca double, align 8
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca %struct.newhuff*, align 8
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca i16*, align 8
  %50 = alloca %struct.newhuff*, align 8
  %51 = alloca i16*, align 8
  %52 = alloca i16, align 2
  store [18 x double]* %0, [18 x double]** %7, align 8
  store i32* %1, i32** %8, align 8
  store %struct.gr_info_s* %2, %struct.gr_info_s** %9, align 8
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  %53 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %54 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %53, i32 0, i32 14
  %55 = load i32, i32* %54, align 8
  %56 = add i32 1, %55
  store i32 %56, i32* %12, align 4
  %57 = load [18 x double]*, [18 x double]** %7, align 8
  %58 = bitcast [18 x double]* %57 to double*
  store double* %58, double** %13, align 8
  %59 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %60 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %59, i32 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = load i32, i32* %11, align 4
  %63 = sub i32 %61, %62
  store i32 %63, i32* %16, align 4
  %64 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %65 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %64, i32 0, i32 2
  %66 = load i32, i32* %65, align 8
  store i32 %66, i32* %18, align 4
  %67 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %68 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %67, i32 0, i32 11
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %19, align 4
  %70 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %71 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %70, i32 0, i32 12
  %72 = load i32, i32* %71, align 8
  store i32 %72, i32* %20, align 4
  %73 = load i32, i32* %18, align 4
  %74 = sub nsw i32 288, %73
  %75 = ashr i32 %74, 1
  store i32 %75, i32* %15, align 4
  %76 = load i32, i32* %18, align 4
  %77 = load i32, i32* %19, align 4
  %78 = icmp sle i32 %76, %77
  br i1 %78, label %79, label %84

; <label>:79:                                     ; preds = %5
  %80 = load i32, i32* %18, align 4
  %81 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 0
  store i32 %80, i32* %81, align 4
  %82 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 1
  store i32 0, i32* %82, align 4
  %83 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 2
  store i32 0, i32* %83, align 4
  br label %110

; <label>:84:                                     ; preds = %5
  %85 = load i32, i32* %19, align 4
  %86 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 0
  store i32 %85, i32* %86, align 4
  %87 = load i32, i32* %18, align 4
  %88 = load i32, i32* %20, align 4
  %89 = icmp sle i32 %87, %88
  br i1 %89, label %90, label %98

; <label>:90:                                     ; preds = %84
  %pgocount = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 56)
  %91 = add i64 %pgocount, 1
  store i64 %91, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 56)
  %92 = load i32, i32* %18, align 4
  %93 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 0
  %94 = load i32, i32* %93, align 4
  %95 = sub nsw i32 %92, %94
  %96 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 1
  store i32 %95, i32* %96, align 4
  %97 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 2
  store i32 0, i32* %97, align 4
  br label %109

; <label>:98:                                     ; preds = %84
  %pgocount1 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 57)
  %99 = add i64 %pgocount1, 1
  store i64 %99, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 57)
  %100 = load i32, i32* %20, align 4
  %101 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 0
  %102 = load i32, i32* %101, align 4
  %103 = sub nsw i32 %100, %102
  %104 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 1
  store i32 %103, i32* %104, align 4
  %105 = load i32, i32* %18, align 4
  %106 = load i32, i32* %20, align 4
  %107 = sub nsw i32 %105, %106
  %108 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 2
  store i32 %107, i32* %108, align 4
  br label %109

; <label>:109:                                    ; preds = %98, %90
  br label %110

; <label>:110:                                    ; preds = %109, %79
  %111 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %112 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %111, i32 0, i32 4
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %113, 2
  br i1 %114, label %115, label %706

; <label>:115:                                    ; preds = %110
  store i32 0, i32* %23, align 4
  store i32 0, i32* %24, align 4
  store i32 0, i32* %25, align 4
  store double 0.000000e+00, double* %26, align 8
  %116 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %117 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %116, i32 0, i32 5
  %118 = load i32, i32* %117, align 4
  %119 = icmp ne i32 %118, 0
  br i1 %119, label %120, label %135

; <label>:120:                                    ; preds = %115
  %121 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 0, i64 3
  store i32 -1, i32* %121, align 4
  %122 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 0, i64 2
  store i32 2, i32* %122, align 8
  %123 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 0, i64 1
  store i32 2, i32* %123, align 4
  %124 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 0, i64 0
  store i32 2, i32* %124, align 16
  %125 = load i32, i32* %10, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [9 x [3 x i32*]], [9 x [3 x i32*]]* @map, i64 0, i64 %126
  %128 = getelementptr inbounds [3 x i32*], [3 x i32*]* %127, i64 0, i64 0
  %129 = load i32*, i32** %128, align 8
  store i32* %129, i32** %27, align 8
  %130 = load i32, i32* %10, align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds [9 x [3 x i32*]], [9 x [3 x i32*]]* @mapend, i64 0, i64 %131
  %133 = getelementptr inbounds [3 x i32*], [3 x i32*]* %132, i64 0, i64 0
  %134 = load i32*, i32** %133, align 8
  store i32* %134, i32** %17, align 8
  br label %151

; <label>:135:                                    ; preds = %115
  %pgocount2 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 62)
  %136 = add i64 %pgocount2, 1
  store i64 %136, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 62)
  %137 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 0, i64 3
  store i32 -1, i32* %137, align 4
  %138 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 0, i64 2
  store i32 -1, i32* %138, align 8
  %139 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 0, i64 1
  store i32 -1, i32* %139, align 4
  %140 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 0, i64 0
  store i32 -1, i32* %140, align 16
  %141 = load i32, i32* %10, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [9 x [3 x i32*]], [9 x [3 x i32*]]* @map, i64 0, i64 %142
  %144 = getelementptr inbounds [3 x i32*], [3 x i32*]* %143, i64 0, i64 1
  %145 = load i32*, i32** %144, align 8
  store i32* %145, i32** %27, align 8
  %146 = load i32, i32* %10, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [9 x [3 x i32*]], [9 x [3 x i32*]]* @mapend, i64 0, i64 %147
  %149 = getelementptr inbounds [3 x i32*], [3 x i32*]* %148, i64 0, i64 1
  %150 = load i32*, i32** %149, align 8
  store i32* %150, i32** %17, align 8
  br label %151

; <label>:151:                                    ; preds = %135, %120
  store i32 0, i32* %28, align 4
  store i32 0, i32* %21, align 4
  br label %152

; <label>:152:                                    ; preds = %421, %151
  %153 = load i32, i32* %21, align 4
  %154 = icmp slt i32 %153, 2
  br i1 %154, label %155, label %425

; <label>:155:                                    ; preds = %152
  %156 = load i32, i32* %21, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 %157
  %159 = load i32, i32* %158, align 4
  store i32 %159, i32* %29, align 4
  %160 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %161 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %160, i32 0, i32 6
  %162 = load i32, i32* %21, align 4
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds [3 x i32], [3 x i32]* %161, i64 0, i64 %163
  %165 = load i32, i32* %164, align 4
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds %struct.newhuff, %struct.newhuff* getelementptr inbounds ([32 x %struct.newhuff], [32 x %struct.newhuff]* @ht, i32 0, i32 0), i64 %166
  store %struct.newhuff* %167, %struct.newhuff** %30, align 8
  br label %168

; <label>:168:                                    ; preds = %415, %155
  %169 = load i32, i32* %29, align 4
  %170 = icmp ne i32 %169, 0
  br i1 %170, label %171, label %420

; <label>:171:                                    ; preds = %168
  %172 = load i32, i32* %28, align 4
  %173 = icmp ne i32 %172, 0
  br i1 %173, label %223, label %174

; <label>:174:                                    ; preds = %171
  %175 = load i32*, i32** %27, align 8
  %176 = getelementptr inbounds i32, i32* %175, i32 1
  store i32* %176, i32** %27, align 8
  %177 = load i32, i32* %175, align 4
  store i32 %177, i32* %28, align 4
  %178 = load [18 x double]*, [18 x double]** %7, align 8
  %179 = bitcast [18 x double]* %178 to double*
  %180 = load i32*, i32** %27, align 8
  %181 = getelementptr inbounds i32, i32* %180, i32 1
  store i32* %181, i32** %27, align 8
  %182 = load i32, i32* %180, align 4
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds double, double* %179, i64 %183
  store double* %184, double** %13, align 8
  %185 = load i32*, i32** %27, align 8
  %186 = getelementptr inbounds i32, i32* %185, i32 1
  store i32* %186, i32** %27, align 8
  %187 = load i32, i32* %185, align 4
  store i32 %187, i32* %24, align 4
  %188 = load i32*, i32** %27, align 8
  %189 = getelementptr inbounds i32, i32* %188, i32 1
  store i32* %189, i32** %27, align 8
  %190 = load i32, i32* %188, align 4
  store i32 %190, i32* %25, align 4
  %191 = load i32, i32* %24, align 4
  %192 = icmp eq i32 %191, 3
  br i1 %192, label %193, label %206

; <label>:193:                                    ; preds = %174
  %pgocount3 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 21)
  %194 = add i64 %pgocount3, 1
  store i64 %194, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 21)
  %195 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %196 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %195, i32 0, i32 17
  %197 = load double*, double** %196, align 8
  %198 = load i32*, i32** %8, align 8
  %199 = getelementptr inbounds i32, i32* %198, i32 1
  store i32* %199, i32** %8, align 8
  %200 = load i32, i32* %198, align 4
  %201 = load i32, i32* %12, align 4
  %202 = shl i32 %200, %201
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds double, double* %197, i64 %203
  %205 = load double, double* %204, align 8
  store double %205, double* %26, align 8
  store i32 1, i32* %23, align 4
  br label %222

; <label>:206:                                    ; preds = %174
  %pgocount4 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 22)
  %207 = add i64 %pgocount4, 1
  store i64 %207, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 22)
  %208 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %209 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %208, i32 0, i32 16
  %210 = load i32, i32* %24, align 4
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds [3 x double*], [3 x double*]* %209, i64 0, i64 %211
  %213 = load double*, double** %212, align 8
  %214 = load i32*, i32** %8, align 8
  %215 = getelementptr inbounds i32, i32* %214, i32 1
  store i32* %215, i32** %8, align 8
  %216 = load i32, i32* %214, align 4
  %217 = load i32, i32* %12, align 4
  %218 = shl i32 %216, %217
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds double, double* %213, i64 %219
  %221 = load double, double* %220, align 8
  store double %221, double* %26, align 8
  store i32 3, i32* %23, align 4
  br label %222

; <label>:222:                                    ; preds = %206, %193
  br label %223

; <label>:223:                                    ; preds = %222, %171
  %224 = load %struct.newhuff*, %struct.newhuff** %30, align 8
  %225 = getelementptr inbounds %struct.newhuff, %struct.newhuff* %224, i32 0, i32 1
  %226 = load i16*, i16** %225, align 8
  store i16* %226, i16** %33, align 8
  br label %227

; <label>:227:                                    ; preds = %244, %223
  %228 = load i16*, i16** %33, align 8
  %229 = getelementptr inbounds i16, i16* %228, i32 1
  store i16* %229, i16** %33, align 8
  %230 = load i16, i16* %228, align 2
  %231 = sext i16 %230 to i32
  store i32 %231, i32* %32, align 4
  %232 = icmp slt i32 %231, 0
  br i1 %232, label %233, label %247

; <label>:233:                                    ; preds = %227
  %pgocount5 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 0)
  %234 = add i64 %pgocount5, 1
  store i64 %234, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 0)
  %235 = call i32 @get1bit()
  %236 = icmp ne i32 %235, 0
  br i1 %236, label %237, label %244

; <label>:237:                                    ; preds = %233
  %pgocount6 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 2)
  %238 = add i64 %pgocount6, 1
  store i64 %238, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 2)
  %239 = load i32, i32* %32, align 4
  %240 = load i16*, i16** %33, align 8
  %241 = sext i32 %239 to i64
  %242 = sub i64 0, %241
  %243 = getelementptr inbounds i16, i16* %240, i64 %242
  store i16* %243, i16** %33, align 8
  br label %244

; <label>:244:                                    ; preds = %237, %233
  %245 = load i32, i32* %16, align 4
  %246 = add nsw i32 %245, -1
  store i32 %246, i32* %16, align 4
  br label %227

; <label>:247:                                    ; preds = %227
  %248 = load i32, i32* %32, align 4
  %249 = ashr i32 %248, 4
  store i32 %249, i32* %31, align 4
  %250 = load i32, i32* %32, align 4
  %251 = and i32 %250, 15
  store i32 %251, i32* %32, align 4
  %252 = load i32, i32* %31, align 4
  %253 = icmp eq i32 %252, 15
  br i1 %253, label %254, label %292

; <label>:254:                                    ; preds = %247
  %255 = load i32, i32* %25, align 4
  %256 = load i32, i32* %24, align 4
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 0, i64 %257
  store i32 %255, i32* %258, align 4
  %259 = load %struct.newhuff*, %struct.newhuff** %30, align 8
  %260 = getelementptr inbounds %struct.newhuff, %struct.newhuff* %259, i32 0, i32 0
  %261 = load i32, i32* %260, align 8
  %262 = add i32 %261, 1
  %263 = load i32, i32* %16, align 4
  %264 = sub i32 %263, %262
  store i32 %264, i32* %16, align 4
  %265 = load %struct.newhuff*, %struct.newhuff** %30, align 8
  %266 = getelementptr inbounds %struct.newhuff, %struct.newhuff* %265, i32 0, i32 0
  %267 = load i32, i32* %266, align 8
  %268 = call i32 @getbits(i32 %267)
  %269 = load i32, i32* %31, align 4
  %270 = add i32 %269, %268
  store i32 %270, i32* %31, align 4
  %271 = call i32 @get1bit()
  %272 = icmp ne i32 %271, 0
  br i1 %272, label %273, label %282

; <label>:273:                                    ; preds = %254
  %274 = load i32, i32* %31, align 4
  %275 = sext i32 %274 to i64
  %276 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i64 0, i64 %275
  %277 = load double, double* %276, align 8
  %278 = fsub double -0.000000e+00, %277
  %279 = load double, double* %26, align 8
  %280 = fmul double %278, %279
  %281 = load double*, double** %13, align 8
  store double %280, double* %281, align 8
  br label %291

; <label>:282:                                    ; preds = %254
  %pgocount7 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 23)
  %283 = add i64 %pgocount7, 1
  store i64 %283, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 23)
  %284 = load i32, i32* %31, align 4
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i64 0, i64 %285
  %287 = load double, double* %286, align 8
  %288 = load double, double* %26, align 8
  %289 = fmul double %287, %288
  %290 = load double*, double** %13, align 8
  store double %289, double* %290, align 8
  br label %291

; <label>:291:                                    ; preds = %282, %273
  br label %328

; <label>:292:                                    ; preds = %247
  %293 = load i32, i32* %31, align 4
  %294 = icmp ne i32 %293, 0
  br i1 %294, label %295, label %324

; <label>:295:                                    ; preds = %292
  %296 = load i32, i32* %25, align 4
  %297 = load i32, i32* %24, align 4
  %298 = sext i32 %297 to i64
  %299 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 0, i64 %298
  store i32 %296, i32* %299, align 4
  %300 = call i32 @get1bit()
  %301 = icmp ne i32 %300, 0
  br i1 %301, label %302, label %312

; <label>:302:                                    ; preds = %295
  %pgocount8 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 17)
  %303 = add i64 %pgocount8, 1
  store i64 %303, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 17)
  %304 = load i32, i32* %31, align 4
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i64 0, i64 %305
  %307 = load double, double* %306, align 8
  %308 = fsub double -0.000000e+00, %307
  %309 = load double, double* %26, align 8
  %310 = fmul double %308, %309
  %311 = load double*, double** %13, align 8
  store double %310, double* %311, align 8
  br label %321

; <label>:312:                                    ; preds = %295
  %pgocount9 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 33)
  %313 = add i64 %pgocount9, 1
  store i64 %313, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 33)
  %314 = load i32, i32* %31, align 4
  %315 = sext i32 %314 to i64
  %316 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i64 0, i64 %315
  %317 = load double, double* %316, align 8
  %318 = load double, double* %26, align 8
  %319 = fmul double %317, %318
  %320 = load double*, double** %13, align 8
  store double %319, double* %320, align 8
  br label %321

; <label>:321:                                    ; preds = %312, %302
  %322 = load i32, i32* %16, align 4
  %323 = add nsw i32 %322, -1
  store i32 %323, i32* %16, align 4
  br label %327

; <label>:324:                                    ; preds = %292
  %pgocount10 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 24)
  %325 = add i64 %pgocount10, 1
  store i64 %325, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 24)
  %326 = load double*, double** %13, align 8
  store double 0.000000e+00, double* %326, align 8
  br label %327

; <label>:327:                                    ; preds = %324, %321
  br label %328

; <label>:328:                                    ; preds = %327, %291
  %329 = load i32, i32* %23, align 4
  %330 = load double*, double** %13, align 8
  %331 = sext i32 %329 to i64
  %332 = getelementptr inbounds double, double* %330, i64 %331
  store double* %332, double** %13, align 8
  %333 = load i32, i32* %32, align 4
  %334 = icmp eq i32 %333, 15
  br i1 %334, label %335, label %374

; <label>:335:                                    ; preds = %328
  %336 = load i32, i32* %25, align 4
  %337 = load i32, i32* %24, align 4
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 0, i64 %338
  store i32 %336, i32* %339, align 4
  %340 = load %struct.newhuff*, %struct.newhuff** %30, align 8
  %341 = getelementptr inbounds %struct.newhuff, %struct.newhuff* %340, i32 0, i32 0
  %342 = load i32, i32* %341, align 8
  %343 = add i32 %342, 1
  %344 = load i32, i32* %16, align 4
  %345 = sub i32 %344, %343
  store i32 %345, i32* %16, align 4
  %346 = load %struct.newhuff*, %struct.newhuff** %30, align 8
  %347 = getelementptr inbounds %struct.newhuff, %struct.newhuff* %346, i32 0, i32 0
  %348 = load i32, i32* %347, align 8
  %349 = call i32 @getbits(i32 %348)
  %350 = load i32, i32* %32, align 4
  %351 = add i32 %350, %349
  store i32 %351, i32* %32, align 4
  %352 = call i32 @get1bit()
  %353 = icmp ne i32 %352, 0
  br i1 %353, label %354, label %364

; <label>:354:                                    ; preds = %335
  %pgocount11 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 7)
  %355 = add i64 %pgocount11, 1
  store i64 %355, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 7)
  %356 = load i32, i32* %32, align 4
  %357 = sext i32 %356 to i64
  %358 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i64 0, i64 %357
  %359 = load double, double* %358, align 8
  %360 = fsub double -0.000000e+00, %359
  %361 = load double, double* %26, align 8
  %362 = fmul double %360, %361
  %363 = load double*, double** %13, align 8
  store double %362, double* %363, align 8
  br label %373

; <label>:364:                                    ; preds = %335
  %pgocount12 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 25)
  %365 = add i64 %pgocount12, 1
  store i64 %365, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 25)
  %366 = load i32, i32* %32, align 4
  %367 = sext i32 %366 to i64
  %368 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i64 0, i64 %367
  %369 = load double, double* %368, align 8
  %370 = load double, double* %26, align 8
  %371 = fmul double %369, %370
  %372 = load double*, double** %13, align 8
  store double %371, double* %372, align 8
  br label %373

; <label>:373:                                    ; preds = %364, %354
  br label %410

; <label>:374:                                    ; preds = %328
  %375 = load i32, i32* %32, align 4
  %376 = icmp ne i32 %375, 0
  br i1 %376, label %377, label %406

; <label>:377:                                    ; preds = %374
  %378 = load i32, i32* %25, align 4
  %379 = load i32, i32* %24, align 4
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 0, i64 %380
  store i32 %378, i32* %381, align 4
  %382 = call i32 @get1bit()
  %383 = icmp ne i32 %382, 0
  br i1 %383, label %384, label %394

; <label>:384:                                    ; preds = %377
  %pgocount13 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 18)
  %385 = add i64 %pgocount13, 1
  store i64 %385, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 18)
  %386 = load i32, i32* %32, align 4
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i64 0, i64 %387
  %389 = load double, double* %388, align 8
  %390 = fsub double -0.000000e+00, %389
  %391 = load double, double* %26, align 8
  %392 = fmul double %390, %391
  %393 = load double*, double** %13, align 8
  store double %392, double* %393, align 8
  br label %403

; <label>:394:                                    ; preds = %377
  %pgocount14 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 34)
  %395 = add i64 %pgocount14, 1
  store i64 %395, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 34)
  %396 = load i32, i32* %32, align 4
  %397 = sext i32 %396 to i64
  %398 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i64 0, i64 %397
  %399 = load double, double* %398, align 8
  %400 = load double, double* %26, align 8
  %401 = fmul double %399, %400
  %402 = load double*, double** %13, align 8
  store double %401, double* %402, align 8
  br label %403

; <label>:403:                                    ; preds = %394, %384
  %404 = load i32, i32* %16, align 4
  %405 = add nsw i32 %404, -1
  store i32 %405, i32* %16, align 4
  br label %409

; <label>:406:                                    ; preds = %374
  %pgocount15 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 26)
  %407 = add i64 %pgocount15, 1
  store i64 %407, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 26)
  %408 = load double*, double** %13, align 8
  store double 0.000000e+00, double* %408, align 8
  br label %409

; <label>:409:                                    ; preds = %406, %403
  br label %410

; <label>:410:                                    ; preds = %409, %373
  %411 = load i32, i32* %23, align 4
  %412 = load double*, double** %13, align 8
  %413 = sext i32 %411 to i64
  %414 = getelementptr inbounds double, double* %412, i64 %413
  store double* %414, double** %13, align 8
  br label %415

; <label>:415:                                    ; preds = %410
  %416 = load i32, i32* %29, align 4
  %417 = add nsw i32 %416, -1
  store i32 %417, i32* %29, align 4
  %418 = load i32, i32* %28, align 4
  %419 = add nsw i32 %418, -1
  store i32 %419, i32* %28, align 4
  br label %168

; <label>:420:                                    ; preds = %168
  br label %421

; <label>:421:                                    ; preds = %420
  %pgocount16 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 41)
  %422 = add i64 %pgocount16, 1
  store i64 %422, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 41)
  %423 = load i32, i32* %21, align 4
  %424 = add nsw i32 %423, 1
  store i32 %424, i32* %21, align 4
  br label %152

; <label>:425:                                    ; preds = %152
  br label %426

; <label>:426:                                    ; preds = %581, %425
  %427 = load i32, i32* %15, align 4
  %428 = icmp ne i32 %427, 0
  br i1 %428, label %429, label %433

; <label>:429:                                    ; preds = %426
  %pgocount17 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 47)
  %430 = add i64 %pgocount17, 1
  store i64 %430, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 47)
  %431 = load i32, i32* %16, align 4
  %432 = icmp sgt i32 %431, 0
  br label %433

; <label>:433:                                    ; preds = %429, %426
  %434 = phi i1 [ false, %426 ], [ %432, %429 ]
  br i1 %434, label %435, label %585

; <label>:435:                                    ; preds = %433
  %436 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %437 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %436, i32 0, i32 15
  %438 = load i32, i32* %437, align 4
  %439 = zext i32 %438 to i64
  %440 = getelementptr inbounds %struct.newhuff, %struct.newhuff* getelementptr inbounds ([2 x %struct.newhuff], [2 x %struct.newhuff]* @htc, i32 0, i32 0), i64 %439
  store %struct.newhuff* %440, %struct.newhuff** %34, align 8
  %441 = load %struct.newhuff*, %struct.newhuff** %34, align 8
  %442 = getelementptr inbounds %struct.newhuff, %struct.newhuff* %441, i32 0, i32 1
  %443 = load i16*, i16** %442, align 8
  store i16* %443, i16** %35, align 8
  br label %444

; <label>:444:                                    ; preds = %470, %435
  %445 = load i16*, i16** %35, align 8
  %446 = getelementptr inbounds i16, i16* %445, i32 1
  store i16* %446, i16** %35, align 8
  %447 = load i16, i16* %445, align 2
  store i16 %447, i16* %36, align 2
  %448 = sext i16 %447 to i32
  %449 = icmp slt i32 %448, 0
  br i1 %449, label %450, label %472

; <label>:450:                                    ; preds = %444
  %451 = load i32, i32* %16, align 4
  %452 = add nsw i32 %451, -1
  store i32 %452, i32* %16, align 4
  %453 = load i32, i32* %16, align 4
  %454 = icmp slt i32 %453, 0
  br i1 %454, label %455, label %459

; <label>:455:                                    ; preds = %450
  %pgocount18 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 49)
  %456 = add i64 %pgocount18, 1
  store i64 %456, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 49)
  %457 = load i32, i32* %16, align 4
  %458 = add nsw i32 %457, 1
  store i32 %458, i32* %16, align 4
  store i16 0, i16* %36, align 2
  br label %472

; <label>:459:                                    ; preds = %450
  %460 = call i32 @get1bit()
  %461 = icmp ne i32 %460, 0
  br i1 %461, label %462, label %470

; <label>:462:                                    ; preds = %459
  %pgocount19 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 11)
  %463 = add i64 %pgocount19, 1
  store i64 %463, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 11)
  %464 = load i16, i16* %36, align 2
  %465 = sext i16 %464 to i32
  %466 = load i16*, i16** %35, align 8
  %467 = sext i32 %465 to i64
  %468 = sub i64 0, %467
  %469 = getelementptr inbounds i16, i16* %466, i64 %468
  store i16* %469, i16** %35, align 8
  br label %470

; <label>:470:                                    ; preds = %462, %459
  %pgocount20 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 4)
  %471 = add i64 %pgocount20, 1
  store i64 %471, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 4)
  br label %444

; <label>:472:                                    ; preds = %455, %444
  store i32 0, i32* %21, align 4
  br label %473

; <label>:473:                                    ; preds = %577, %472
  %474 = load i32, i32* %21, align 4
  %475 = icmp slt i32 %474, 4
  br i1 %475, label %476, label %580

; <label>:476:                                    ; preds = %473
  %477 = load i32, i32* %21, align 4
  %478 = and i32 %477, 1
  %479 = icmp ne i32 %478, 0
  br i1 %479, label %536, label %480

; <label>:480:                                    ; preds = %476
  %481 = load i32, i32* %28, align 4
  %482 = icmp ne i32 %481, 0
  br i1 %482, label %532, label %483

; <label>:483:                                    ; preds = %480
  %484 = load i32*, i32** %27, align 8
  %485 = getelementptr inbounds i32, i32* %484, i32 1
  store i32* %485, i32** %27, align 8
  %486 = load i32, i32* %484, align 4
  store i32 %486, i32* %28, align 4
  %487 = load [18 x double]*, [18 x double]** %7, align 8
  %488 = bitcast [18 x double]* %487 to double*
  %489 = load i32*, i32** %27, align 8
  %490 = getelementptr inbounds i32, i32* %489, i32 1
  store i32* %490, i32** %27, align 8
  %491 = load i32, i32* %489, align 4
  %492 = sext i32 %491 to i64
  %493 = getelementptr inbounds double, double* %488, i64 %492
  store double* %493, double** %13, align 8
  %494 = load i32*, i32** %27, align 8
  %495 = getelementptr inbounds i32, i32* %494, i32 1
  store i32* %495, i32** %27, align 8
  %496 = load i32, i32* %494, align 4
  store i32 %496, i32* %24, align 4
  %497 = load i32*, i32** %27, align 8
  %498 = getelementptr inbounds i32, i32* %497, i32 1
  store i32* %498, i32** %27, align 8
  %499 = load i32, i32* %497, align 4
  store i32 %499, i32* %25, align 4
  %500 = load i32, i32* %24, align 4
  %501 = icmp eq i32 %500, 3
  br i1 %501, label %502, label %515

; <label>:502:                                    ; preds = %483
  %pgocount21 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 39)
  %503 = add i64 %pgocount21, 1
  store i64 %503, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 39)
  %504 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %505 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %504, i32 0, i32 17
  %506 = load double*, double** %505, align 8
  %507 = load i32*, i32** %8, align 8
  %508 = getelementptr inbounds i32, i32* %507, i32 1
  store i32* %508, i32** %8, align 8
  %509 = load i32, i32* %507, align 4
  %510 = load i32, i32* %12, align 4
  %511 = shl i32 %509, %510
  %512 = sext i32 %511 to i64
  %513 = getelementptr inbounds double, double* %506, i64 %512
  %514 = load double, double* %513, align 8
  store double %514, double* %26, align 8
  store i32 1, i32* %23, align 4
  br label %531

; <label>:515:                                    ; preds = %483
  %pgocount22 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 40)
  %516 = add i64 %pgocount22, 1
  store i64 %516, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 40)
  %517 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %518 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %517, i32 0, i32 16
  %519 = load i32, i32* %24, align 4
  %520 = sext i32 %519 to i64
  %521 = getelementptr inbounds [3 x double*], [3 x double*]* %518, i64 0, i64 %520
  %522 = load double*, double** %521, align 8
  %523 = load i32*, i32** %8, align 8
  %524 = getelementptr inbounds i32, i32* %523, i32 1
  store i32* %524, i32** %8, align 8
  %525 = load i32, i32* %523, align 4
  %526 = load i32, i32* %12, align 4
  %527 = shl i32 %525, %526
  %528 = sext i32 %527 to i64
  %529 = getelementptr inbounds double, double* %522, i64 %528
  %530 = load double, double* %529, align 8
  store double %530, double* %26, align 8
  store i32 3, i32* %23, align 4
  br label %531

; <label>:531:                                    ; preds = %515, %502
  br label %532

; <label>:532:                                    ; preds = %531, %480
  %pgocount23 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 9)
  %533 = add i64 %pgocount23, 1
  store i64 %533, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 9)
  %534 = load i32, i32* %28, align 4
  %535 = add nsw i32 %534, -1
  store i32 %535, i32* %28, align 4
  br label %536

; <label>:536:                                    ; preds = %532, %476
  %537 = load i16, i16* %36, align 2
  %538 = sext i16 %537 to i32
  %539 = load i32, i32* %21, align 4
  %540 = ashr i32 8, %539
  %541 = and i32 %538, %540
  %542 = icmp ne i32 %541, 0
  br i1 %542, label %543, label %569

; <label>:543:                                    ; preds = %536
  %544 = load i32, i32* %25, align 4
  %545 = load i32, i32* %24, align 4
  %546 = sext i32 %545 to i64
  %547 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 0, i64 %546
  store i32 %544, i32* %547, align 4
  %548 = load i32, i32* %16, align 4
  %549 = add nsw i32 %548, -1
  store i32 %549, i32* %16, align 4
  %550 = load i32, i32* %16, align 4
  %551 = icmp slt i32 %550, 0
  br i1 %551, label %552, label %556

; <label>:552:                                    ; preds = %543
  %pgocount24 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 51)
  %553 = add i64 %pgocount24, 1
  store i64 %553, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 51)
  %554 = load i32, i32* %16, align 4
  %555 = add nsw i32 %554, 1
  store i32 %555, i32* %16, align 4
  br label %580

; <label>:556:                                    ; preds = %543
  %557 = call i32 @get1bit()
  %558 = icmp ne i32 %557, 0
  br i1 %558, label %559, label %564

; <label>:559:                                    ; preds = %556
  %pgocount25 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 13)
  %560 = add i64 %pgocount25, 1
  store i64 %560, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 13)
  %561 = load double, double* %26, align 8
  %562 = fsub double -0.000000e+00, %561
  %563 = load double*, double** %13, align 8
  store double %562, double* %563, align 8
  br label %568

; <label>:564:                                    ; preds = %556
  %pgocount26 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 31)
  %565 = add i64 %pgocount26, 1
  store i64 %565, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 31)
  %566 = load double, double* %26, align 8
  %567 = load double*, double** %13, align 8
  store double %566, double* %567, align 8
  br label %568

; <label>:568:                                    ; preds = %564, %559
  br label %572

; <label>:569:                                    ; preds = %536
  %pgocount27 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 15)
  %570 = add i64 %pgocount27, 1
  store i64 %570, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 15)
  %571 = load double*, double** %13, align 8
  store double 0.000000e+00, double* %571, align 8
  br label %572

; <label>:572:                                    ; preds = %569, %568
  %573 = load i32, i32* %23, align 4
  %574 = load double*, double** %13, align 8
  %575 = sext i32 %573 to i64
  %576 = getelementptr inbounds double, double* %574, i64 %575
  store double* %576, double** %13, align 8
  br label %577

; <label>:577:                                    ; preds = %572
  %578 = load i32, i32* %21, align 4
  %579 = add nsw i32 %578, 1
  store i32 %579, i32* %21, align 4
  br label %473

; <label>:580:                                    ; preds = %552, %473
  br label %581

; <label>:581:                                    ; preds = %580
  %pgocount28 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 42)
  %582 = add i64 %pgocount28, 1
  store i64 %582, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 42)
  %583 = load i32, i32* %15, align 4
  %584 = add nsw i32 %583, -1
  store i32 %584, i32* %15, align 4
  br label %426

; <label>:585:                                    ; preds = %433
  br label %586

; <label>:586:                                    ; preds = %615, %585
  %587 = load i32*, i32** %27, align 8
  %588 = load i32*, i32** %17, align 8
  %589 = icmp ult i32* %587, %588
  br i1 %589, label %590, label %629

; <label>:590:                                    ; preds = %586
  %591 = load i32, i32* %28, align 4
  %592 = icmp ne i32 %591, 0
  br i1 %592, label %615, label %593

; <label>:593:                                    ; preds = %590
  %594 = load i32*, i32** %27, align 8
  %595 = getelementptr inbounds i32, i32* %594, i32 1
  store i32* %595, i32** %27, align 8
  %596 = load i32, i32* %594, align 4
  store i32 %596, i32* %28, align 4
  %597 = load [18 x double]*, [18 x double]** %7, align 8
  %598 = bitcast [18 x double]* %597 to double*
  %599 = load i32*, i32** %27, align 8
  %600 = getelementptr inbounds i32, i32* %599, i32 1
  store i32* %600, i32** %27, align 8
  %601 = load i32, i32* %599, align 4
  %602 = sext i32 %601 to i64
  %603 = getelementptr inbounds double, double* %598, i64 %602
  store double* %603, double** %13, align 8
  %604 = load i32*, i32** %27, align 8
  %605 = getelementptr inbounds i32, i32* %604, i32 1
  store i32* %605, i32** %27, align 8
  %606 = load i32, i32* %604, align 4
  %607 = icmp eq i32 %606, 3
  br i1 %607, label %608, label %610

; <label>:608:                                    ; preds = %593
  %pgocount29 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 53)
  %609 = add i64 %pgocount29, 1
  store i64 %609, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 53)
  store i32 1, i32* %23, align 4
  br label %612

; <label>:610:                                    ; preds = %593
  %pgocount30 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 54)
  %611 = add i64 %pgocount30, 1
  store i64 %611, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 54)
  store i32 3, i32* %23, align 4
  br label %612

; <label>:612:                                    ; preds = %610, %608
  %613 = load i32*, i32** %27, align 8
  %614 = getelementptr inbounds i32, i32* %613, i32 1
  store i32* %614, i32** %27, align 8
  br label %615

; <label>:615:                                    ; preds = %612, %590
  %pgocount31 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 43)
  %616 = add i64 %pgocount31, 1
  store i64 %616, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 43)
  %617 = load i32, i32* %28, align 4
  %618 = add nsw i32 %617, -1
  store i32 %618, i32* %28, align 4
  %619 = load double*, double** %13, align 8
  store double 0.000000e+00, double* %619, align 8
  %620 = load i32, i32* %23, align 4
  %621 = load double*, double** %13, align 8
  %622 = sext i32 %620 to i64
  %623 = getelementptr inbounds double, double* %621, i64 %622
  store double* %623, double** %13, align 8
  %624 = load double*, double** %13, align 8
  store double 0.000000e+00, double* %624, align 8
  %625 = load i32, i32* %23, align 4
  %626 = load double*, double** %13, align 8
  %627 = sext i32 %625 to i64
  %628 = getelementptr inbounds double, double* %626, i64 %627
  store double* %628, double** %13, align 8
  br label %586

; <label>:629:                                    ; preds = %586
  %630 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 0, i64 0
  %631 = load i32, i32* %630, align 16
  %632 = add nsw i32 %631, 1
  %633 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %634 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %633, i32 0, i32 8
  %635 = getelementptr inbounds [3 x i32], [3 x i32]* %634, i64 0, i64 0
  store i32 %632, i32* %635, align 8
  %636 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 0, i64 1
  %637 = load i32, i32* %636, align 4
  %638 = add nsw i32 %637, 1
  %639 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %640 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %639, i32 0, i32 8
  %641 = getelementptr inbounds [3 x i32], [3 x i32]* %640, i64 0, i64 1
  store i32 %638, i32* %641, align 4
  %642 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 0, i64 2
  %643 = load i32, i32* %642, align 8
  %644 = add nsw i32 %643, 1
  %645 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %646 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %645, i32 0, i32 8
  %647 = getelementptr inbounds [3 x i32], [3 x i32]* %646, i64 0, i64 2
  store i32 %644, i32* %647, align 8
  %648 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 0, i64 3
  %649 = load i32, i32* %648, align 4
  %650 = add nsw i32 %649, 1
  %651 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %652 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %651, i32 0, i32 9
  store i32 %650, i32* %652, align 4
  %653 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 0, i64 0
  %654 = load i32, i32* %653, align 16
  %655 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 0, i64 1
  %656 = load i32, i32* %655, align 4
  %657 = icmp sgt i32 %654, %656
  br i1 %657, label %658, label %661

; <label>:658:                                    ; preds = %629
  %659 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 0, i64 0
  %660 = load i32, i32* %659, align 16
  br label %665

; <label>:661:                                    ; preds = %629
  %pgocount32 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 58)
  %662 = add i64 %pgocount32, 1
  store i64 %662, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 58)
  %663 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 0, i64 1
  %664 = load i32, i32* %663, align 4
  br label %665

; <label>:665:                                    ; preds = %661, %658
  %666 = phi i32 [ %660, %658 ], [ %664, %661 ]
  store i32 %666, i32* %37, align 4
  %667 = load i32, i32* %37, align 4
  %668 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 0, i64 2
  %669 = load i32, i32* %668, align 8
  %670 = icmp sgt i32 %667, %669
  br i1 %670, label %671, label %674

; <label>:671:                                    ; preds = %665
  %pgocount33 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 59)
  %672 = add i64 %pgocount33, 1
  store i64 %672, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 59)
  %673 = load i32, i32* %37, align 4
  br label %678

; <label>:674:                                    ; preds = %665
  %pgocount34 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 60)
  %675 = add i64 %pgocount34, 1
  store i64 %675, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 60)
  %676 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 0, i64 2
  %677 = load i32, i32* %676, align 8
  br label %678

; <label>:678:                                    ; preds = %674, %671
  %679 = phi i32 [ %673, %671 ], [ %677, %674 ]
  %680 = add nsw i32 %679, 1
  store i32 %680, i32* %37, align 4
  %681 = load i32, i32* %37, align 4
  %682 = icmp ne i32 %681, 0
  br i1 %682, label %683, label %691

; <label>:683:                                    ; preds = %678
  %684 = load i32, i32* %10, align 4
  %685 = sext i32 %684 to i64
  %686 = getelementptr inbounds [9 x [14 x i32]], [9 x [14 x i32]]* @shortLimit, i64 0, i64 %685
  %687 = load i32, i32* %37, align 4
  %688 = sext i32 %687 to i64
  %689 = getelementptr inbounds [14 x i32], [14 x i32]* %686, i64 0, i64 %688
  %690 = load i32, i32* %689, align 4
  br label %702

; <label>:691:                                    ; preds = %678
  %pgocount35 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 63)
  %692 = add i64 %pgocount35, 1
  store i64 %692, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 63)
  %693 = load i32, i32* %10, align 4
  %694 = sext i32 %693 to i64
  %695 = getelementptr inbounds [9 x [23 x i32]], [9 x [23 x i32]]* @longLimit, i64 0, i64 %694
  %696 = getelementptr inbounds [4 x i32], [4 x i32]* %22, i64 0, i64 3
  %697 = load i32, i32* %696, align 4
  %698 = add nsw i32 %697, 1
  %699 = sext i32 %698 to i64
  %700 = getelementptr inbounds [23 x i32], [23 x i32]* %695, i64 0, i64 %699
  %701 = load i32, i32* %700, align 4
  br label %702

; <label>:702:                                    ; preds = %691, %683
  %703 = phi i32 [ %690, %683 ], [ %701, %691 ]
  %704 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %705 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %704, i32 0, i32 10
  store i32 %703, i32* %705, align 8
  br label %1126

; <label>:706:                                    ; preds = %110
  %707 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %708 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %707, i32 0, i32 13
  %709 = load i32, i32* %708, align 4
  %710 = icmp ne i32 %709, 0
  %711 = zext i1 %710 to i64
  %pgocount36 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 65)
  %712 = add i64 %pgocount36, %711
  store i64 %712, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 65)
  %713 = select i1 %710, i32* getelementptr inbounds ([22 x i32], [22 x i32]* @pretab1, i32 0, i32 0), i32* getelementptr inbounds ([22 x i32], [22 x i32]* @pretab2, i32 0, i32 0)
  store i32* %713, i32** %38, align 8
  store i32 -1, i32* %40, align 4
  store i32 0, i32* %41, align 4
  %714 = load i32, i32* %10, align 4
  %715 = sext i32 %714 to i64
  %716 = getelementptr inbounds [9 x [3 x i32*]], [9 x [3 x i32*]]* @map, i64 0, i64 %715
  %717 = getelementptr inbounds [3 x i32*], [3 x i32*]* %716, i64 0, i64 2
  %718 = load i32*, i32** %717, align 8
  store i32* %718, i32** %42, align 8
  store double 0.000000e+00, double* %43, align 8
  store i32 0, i32* %44, align 4
  store i32 0, i32* %39, align 4
  br label %719

; <label>:719:                                    ; preds = %952, %706
  %720 = load i32, i32* %39, align 4
  %721 = icmp slt i32 %720, 3
  br i1 %721, label %722, label %956

; <label>:722:                                    ; preds = %719
  %723 = load i32, i32* %39, align 4
  %724 = sext i32 %723 to i64
  %725 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 %724
  %726 = load i32, i32* %725, align 4
  store i32 %726, i32* %45, align 4
  %727 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %728 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %727, i32 0, i32 6
  %729 = load i32, i32* %39, align 4
  %730 = sext i32 %729 to i64
  %731 = getelementptr inbounds [3 x i32], [3 x i32]* %728, i64 0, i64 %730
  %732 = load i32, i32* %731, align 4
  %733 = zext i32 %732 to i64
  %734 = getelementptr inbounds %struct.newhuff, %struct.newhuff* getelementptr inbounds ([32 x %struct.newhuff], [32 x %struct.newhuff]* @ht, i32 0, i32 0), i64 %733
  store %struct.newhuff* %734, %struct.newhuff** %46, align 8
  br label %735

; <label>:735:                                    ; preds = %946, %722
  %736 = load i32, i32* %45, align 4
  %737 = icmp ne i32 %736, 0
  br i1 %737, label %738, label %951

; <label>:738:                                    ; preds = %735
  %739 = load i32, i32* %44, align 4
  %740 = icmp ne i32 %739, 0
  br i1 %740, label %764, label %741

; <label>:741:                                    ; preds = %738
  %pgocount37 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 6)
  %742 = add i64 %pgocount37, 1
  store i64 %742, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 6)
  %743 = load i32*, i32** %42, align 8
  %744 = getelementptr inbounds i32, i32* %743, i32 1
  store i32* %744, i32** %42, align 8
  %745 = load i32, i32* %743, align 4
  store i32 %745, i32* %44, align 4
  %746 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %747 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %746, i32 0, i32 17
  %748 = load double*, double** %747, align 8
  %749 = load i32*, i32** %8, align 8
  %750 = getelementptr inbounds i32, i32* %749, i32 1
  store i32* %750, i32** %8, align 8
  %751 = load i32, i32* %749, align 4
  %752 = load i32*, i32** %38, align 8
  %753 = getelementptr inbounds i32, i32* %752, i32 1
  store i32* %753, i32** %38, align 8
  %754 = load i32, i32* %752, align 4
  %755 = add nsw i32 %751, %754
  %756 = load i32, i32* %12, align 4
  %757 = shl i32 %755, %756
  %758 = sext i32 %757 to i64
  %759 = getelementptr inbounds double, double* %748, i64 %758
  %760 = load double, double* %759, align 8
  store double %760, double* %43, align 8
  %761 = load i32*, i32** %42, align 8
  %762 = getelementptr inbounds i32, i32* %761, i32 1
  store i32* %762, i32** %42, align 8
  %763 = load i32, i32* %761, align 4
  store i32 %763, i32* %41, align 4
  br label %764

; <label>:764:                                    ; preds = %741, %738
  %765 = load %struct.newhuff*, %struct.newhuff** %46, align 8
  %766 = getelementptr inbounds %struct.newhuff, %struct.newhuff* %765, i32 0, i32 1
  %767 = load i16*, i16** %766, align 8
  store i16* %767, i16** %49, align 8
  br label %768

; <label>:768:                                    ; preds = %785, %764
  %769 = load i16*, i16** %49, align 8
  %770 = getelementptr inbounds i16, i16* %769, i32 1
  store i16* %770, i16** %49, align 8
  %771 = load i16, i16* %769, align 2
  %772 = sext i16 %771 to i32
  store i32 %772, i32* %48, align 4
  %773 = icmp slt i32 %772, 0
  br i1 %773, label %774, label %788

; <label>:774:                                    ; preds = %768
  %pgocount38 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 1)
  %775 = add i64 %pgocount38, 1
  store i64 %775, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 1)
  %776 = call i32 @get1bit()
  %777 = icmp ne i32 %776, 0
  br i1 %777, label %778, label %785

; <label>:778:                                    ; preds = %774
  %pgocount39 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 3)
  %779 = add i64 %pgocount39, 1
  store i64 %779, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 3)
  %780 = load i32, i32* %48, align 4
  %781 = load i16*, i16** %49, align 8
  %782 = sext i32 %780 to i64
  %783 = sub i64 0, %782
  %784 = getelementptr inbounds i16, i16* %781, i64 %783
  store i16* %784, i16** %49, align 8
  br label %785

; <label>:785:                                    ; preds = %778, %774
  %786 = load i32, i32* %16, align 4
  %787 = add nsw i32 %786, -1
  store i32 %787, i32* %16, align 4
  br label %768

; <label>:788:                                    ; preds = %768
  %789 = load i32, i32* %48, align 4
  %790 = ashr i32 %789, 4
  store i32 %790, i32* %47, align 4
  %791 = load i32, i32* %48, align 4
  %792 = and i32 %791, 15
  store i32 %792, i32* %48, align 4
  %793 = load i32, i32* %47, align 4
  %794 = icmp eq i32 %793, 15
  br i1 %794, label %795, label %832

; <label>:795:                                    ; preds = %788
  %796 = load i32, i32* %41, align 4
  store i32 %796, i32* %40, align 4
  %797 = load %struct.newhuff*, %struct.newhuff** %46, align 8
  %798 = getelementptr inbounds %struct.newhuff, %struct.newhuff* %797, i32 0, i32 0
  %799 = load i32, i32* %798, align 8
  %800 = add i32 %799, 1
  %801 = load i32, i32* %16, align 4
  %802 = sub i32 %801, %800
  store i32 %802, i32* %16, align 4
  %803 = load %struct.newhuff*, %struct.newhuff** %46, align 8
  %804 = getelementptr inbounds %struct.newhuff, %struct.newhuff* %803, i32 0, i32 0
  %805 = load i32, i32* %804, align 8
  %806 = call i32 @getbits(i32 %805)
  %807 = load i32, i32* %47, align 4
  %808 = add i32 %807, %806
  store i32 %808, i32* %47, align 4
  %809 = call i32 @get1bit()
  %810 = icmp ne i32 %809, 0
  br i1 %810, label %811, label %821

; <label>:811:                                    ; preds = %795
  %812 = load i32, i32* %47, align 4
  %813 = sext i32 %812 to i64
  %814 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i64 0, i64 %813
  %815 = load double, double* %814, align 8
  %816 = fsub double -0.000000e+00, %815
  %817 = load double, double* %43, align 8
  %818 = fmul double %816, %817
  %819 = load double*, double** %13, align 8
  %820 = getelementptr inbounds double, double* %819, i32 1
  store double* %820, double** %13, align 8
  store double %818, double* %819, align 8
  br label %831

; <label>:821:                                    ; preds = %795
  %pgocount40 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 27)
  %822 = add i64 %pgocount40, 1
  store i64 %822, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 27)
  %823 = load i32, i32* %47, align 4
  %824 = sext i32 %823 to i64
  %825 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i64 0, i64 %824
  %826 = load double, double* %825, align 8
  %827 = load double, double* %43, align 8
  %828 = fmul double %826, %827
  %829 = load double*, double** %13, align 8
  %830 = getelementptr inbounds double, double* %829, i32 1
  store double* %830, double** %13, align 8
  store double %828, double* %829, align 8
  br label %831

; <label>:831:                                    ; preds = %821, %811
  br label %868

; <label>:832:                                    ; preds = %788
  %833 = load i32, i32* %47, align 4
  %834 = icmp ne i32 %833, 0
  br i1 %834, label %835, label %863

; <label>:835:                                    ; preds = %832
  %836 = load i32, i32* %41, align 4
  store i32 %836, i32* %40, align 4
  %837 = call i32 @get1bit()
  %838 = icmp ne i32 %837, 0
  br i1 %838, label %839, label %850

; <label>:839:                                    ; preds = %835
  %pgocount41 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 19)
  %840 = add i64 %pgocount41, 1
  store i64 %840, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 19)
  %841 = load i32, i32* %47, align 4
  %842 = sext i32 %841 to i64
  %843 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i64 0, i64 %842
  %844 = load double, double* %843, align 8
  %845 = fsub double -0.000000e+00, %844
  %846 = load double, double* %43, align 8
  %847 = fmul double %845, %846
  %848 = load double*, double** %13, align 8
  %849 = getelementptr inbounds double, double* %848, i32 1
  store double* %849, double** %13, align 8
  store double %847, double* %848, align 8
  br label %860

; <label>:850:                                    ; preds = %835
  %pgocount42 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 35)
  %851 = add i64 %pgocount42, 1
  store i64 %851, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 35)
  %852 = load i32, i32* %47, align 4
  %853 = sext i32 %852 to i64
  %854 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i64 0, i64 %853
  %855 = load double, double* %854, align 8
  %856 = load double, double* %43, align 8
  %857 = fmul double %855, %856
  %858 = load double*, double** %13, align 8
  %859 = getelementptr inbounds double, double* %858, i32 1
  store double* %859, double** %13, align 8
  store double %857, double* %858, align 8
  br label %860

; <label>:860:                                    ; preds = %850, %839
  %861 = load i32, i32* %16, align 4
  %862 = add nsw i32 %861, -1
  store i32 %862, i32* %16, align 4
  br label %867

; <label>:863:                                    ; preds = %832
  %pgocount43 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 28)
  %864 = add i64 %pgocount43, 1
  store i64 %864, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 28)
  %865 = load double*, double** %13, align 8
  %866 = getelementptr inbounds double, double* %865, i32 1
  store double* %866, double** %13, align 8
  store double 0.000000e+00, double* %865, align 8
  br label %867

; <label>:867:                                    ; preds = %863, %860
  br label %868

; <label>:868:                                    ; preds = %867, %831
  %869 = load i32, i32* %48, align 4
  %870 = icmp eq i32 %869, 15
  br i1 %870, label %871, label %909

; <label>:871:                                    ; preds = %868
  %872 = load i32, i32* %41, align 4
  store i32 %872, i32* %40, align 4
  %873 = load %struct.newhuff*, %struct.newhuff** %46, align 8
  %874 = getelementptr inbounds %struct.newhuff, %struct.newhuff* %873, i32 0, i32 0
  %875 = load i32, i32* %874, align 8
  %876 = add i32 %875, 1
  %877 = load i32, i32* %16, align 4
  %878 = sub i32 %877, %876
  store i32 %878, i32* %16, align 4
  %879 = load %struct.newhuff*, %struct.newhuff** %46, align 8
  %880 = getelementptr inbounds %struct.newhuff, %struct.newhuff* %879, i32 0, i32 0
  %881 = load i32, i32* %880, align 8
  %882 = call i32 @getbits(i32 %881)
  %883 = load i32, i32* %48, align 4
  %884 = add i32 %883, %882
  store i32 %884, i32* %48, align 4
  %885 = call i32 @get1bit()
  %886 = icmp ne i32 %885, 0
  br i1 %886, label %887, label %898

; <label>:887:                                    ; preds = %871
  %pgocount44 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 8)
  %888 = add i64 %pgocount44, 1
  store i64 %888, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 8)
  %889 = load i32, i32* %48, align 4
  %890 = sext i32 %889 to i64
  %891 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i64 0, i64 %890
  %892 = load double, double* %891, align 8
  %893 = fsub double -0.000000e+00, %892
  %894 = load double, double* %43, align 8
  %895 = fmul double %893, %894
  %896 = load double*, double** %13, align 8
  %897 = getelementptr inbounds double, double* %896, i32 1
  store double* %897, double** %13, align 8
  store double %895, double* %896, align 8
  br label %908

; <label>:898:                                    ; preds = %871
  %pgocount45 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 29)
  %899 = add i64 %pgocount45, 1
  store i64 %899, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 29)
  %900 = load i32, i32* %48, align 4
  %901 = sext i32 %900 to i64
  %902 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i64 0, i64 %901
  %903 = load double, double* %902, align 8
  %904 = load double, double* %43, align 8
  %905 = fmul double %903, %904
  %906 = load double*, double** %13, align 8
  %907 = getelementptr inbounds double, double* %906, i32 1
  store double* %907, double** %13, align 8
  store double %905, double* %906, align 8
  br label %908

; <label>:908:                                    ; preds = %898, %887
  br label %945

; <label>:909:                                    ; preds = %868
  %910 = load i32, i32* %48, align 4
  %911 = icmp ne i32 %910, 0
  br i1 %911, label %912, label %940

; <label>:912:                                    ; preds = %909
  %913 = load i32, i32* %41, align 4
  store i32 %913, i32* %40, align 4
  %914 = call i32 @get1bit()
  %915 = icmp ne i32 %914, 0
  br i1 %915, label %916, label %927

; <label>:916:                                    ; preds = %912
  %pgocount46 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 20)
  %917 = add i64 %pgocount46, 1
  store i64 %917, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 20)
  %918 = load i32, i32* %48, align 4
  %919 = sext i32 %918 to i64
  %920 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i64 0, i64 %919
  %921 = load double, double* %920, align 8
  %922 = fsub double -0.000000e+00, %921
  %923 = load double, double* %43, align 8
  %924 = fmul double %922, %923
  %925 = load double*, double** %13, align 8
  %926 = getelementptr inbounds double, double* %925, i32 1
  store double* %926, double** %13, align 8
  store double %924, double* %925, align 8
  br label %937

; <label>:927:                                    ; preds = %912
  %pgocount47 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 36)
  %928 = add i64 %pgocount47, 1
  store i64 %928, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 36)
  %929 = load i32, i32* %48, align 4
  %930 = sext i32 %929 to i64
  %931 = getelementptr inbounds [8207 x double], [8207 x double]* @ispow, i64 0, i64 %930
  %932 = load double, double* %931, align 8
  %933 = load double, double* %43, align 8
  %934 = fmul double %932, %933
  %935 = load double*, double** %13, align 8
  %936 = getelementptr inbounds double, double* %935, i32 1
  store double* %936, double** %13, align 8
  store double %934, double* %935, align 8
  br label %937

; <label>:937:                                    ; preds = %927, %916
  %938 = load i32, i32* %16, align 4
  %939 = add nsw i32 %938, -1
  store i32 %939, i32* %16, align 4
  br label %944

; <label>:940:                                    ; preds = %909
  %pgocount48 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 30)
  %941 = add i64 %pgocount48, 1
  store i64 %941, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 30)
  %942 = load double*, double** %13, align 8
  %943 = getelementptr inbounds double, double* %942, i32 1
  store double* %943, double** %13, align 8
  store double 0.000000e+00, double* %942, align 8
  br label %944

; <label>:944:                                    ; preds = %940, %937
  br label %945

; <label>:945:                                    ; preds = %944, %908
  br label %946

; <label>:946:                                    ; preds = %945
  %947 = load i32, i32* %45, align 4
  %948 = add nsw i32 %947, -1
  store i32 %948, i32* %45, align 4
  %949 = load i32, i32* %44, align 4
  %950 = add nsw i32 %949, -1
  store i32 %950, i32* %44, align 4
  br label %735

; <label>:951:                                    ; preds = %735
  br label %952

; <label>:952:                                    ; preds = %951
  %pgocount49 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 44)
  %953 = add i64 %pgocount49, 1
  store i64 %953, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 44)
  %954 = load i32, i32* %39, align 4
  %955 = add nsw i32 %954, 1
  store i32 %955, i32* %39, align 4
  br label %719

; <label>:956:                                    ; preds = %719
  br label %957

; <label>:957:                                    ; preds = %1082, %956
  %958 = load i32, i32* %15, align 4
  %959 = icmp ne i32 %958, 0
  br i1 %959, label %960, label %964

; <label>:960:                                    ; preds = %957
  %pgocount50 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 48)
  %961 = add i64 %pgocount50, 1
  store i64 %961, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 48)
  %962 = load i32, i32* %16, align 4
  %963 = icmp sgt i32 %962, 0
  br label %964

; <label>:964:                                    ; preds = %960, %957
  %965 = phi i1 [ false, %957 ], [ %963, %960 ]
  br i1 %965, label %966, label %1086

; <label>:966:                                    ; preds = %964
  %967 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %968 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %967, i32 0, i32 15
  %969 = load i32, i32* %968, align 4
  %970 = zext i32 %969 to i64
  %971 = getelementptr inbounds %struct.newhuff, %struct.newhuff* getelementptr inbounds ([2 x %struct.newhuff], [2 x %struct.newhuff]* @htc, i32 0, i32 0), i64 %970
  store %struct.newhuff* %971, %struct.newhuff** %50, align 8
  %972 = load %struct.newhuff*, %struct.newhuff** %50, align 8
  %973 = getelementptr inbounds %struct.newhuff, %struct.newhuff* %972, i32 0, i32 1
  %974 = load i16*, i16** %973, align 8
  store i16* %974, i16** %51, align 8
  br label %975

; <label>:975:                                    ; preds = %1001, %966
  %976 = load i16*, i16** %51, align 8
  %977 = getelementptr inbounds i16, i16* %976, i32 1
  store i16* %977, i16** %51, align 8
  %978 = load i16, i16* %976, align 2
  store i16 %978, i16* %52, align 2
  %979 = sext i16 %978 to i32
  %980 = icmp slt i32 %979, 0
  br i1 %980, label %981, label %1003

; <label>:981:                                    ; preds = %975
  %982 = load i32, i32* %16, align 4
  %983 = add nsw i32 %982, -1
  store i32 %983, i32* %16, align 4
  %984 = load i32, i32* %16, align 4
  %985 = icmp slt i32 %984, 0
  br i1 %985, label %986, label %990

; <label>:986:                                    ; preds = %981
  %pgocount51 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 50)
  %987 = add i64 %pgocount51, 1
  store i64 %987, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 50)
  %988 = load i32, i32* %16, align 4
  %989 = add nsw i32 %988, 1
  store i32 %989, i32* %16, align 4
  store i16 0, i16* %52, align 2
  br label %1003

; <label>:990:                                    ; preds = %981
  %991 = call i32 @get1bit()
  %992 = icmp ne i32 %991, 0
  br i1 %992, label %993, label %1001

; <label>:993:                                    ; preds = %990
  %pgocount52 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 12)
  %994 = add i64 %pgocount52, 1
  store i64 %994, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 12)
  %995 = load i16, i16* %52, align 2
  %996 = sext i16 %995 to i32
  %997 = load i16*, i16** %51, align 8
  %998 = sext i32 %996 to i64
  %999 = sub i64 0, %998
  %1000 = getelementptr inbounds i16, i16* %997, i64 %999
  store i16* %1000, i16** %51, align 8
  br label %1001

; <label>:1001:                                   ; preds = %993, %990
  %pgocount53 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 5)
  %1002 = add i64 %pgocount53, 1
  store i64 %1002, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 5)
  br label %975

; <label>:1003:                                   ; preds = %986, %975
  store i32 0, i32* %39, align 4
  br label %1004

; <label>:1004:                                   ; preds = %1078, %1003
  %1005 = load i32, i32* %39, align 4
  %1006 = icmp slt i32 %1005, 4
  br i1 %1006, label %1007, label %1081

; <label>:1007:                                   ; preds = %1004
  %1008 = load i32, i32* %39, align 4
  %1009 = and i32 %1008, 1
  %1010 = icmp ne i32 %1009, 0
  br i1 %1010, label %1041, label %1011

; <label>:1011:                                   ; preds = %1007
  %1012 = load i32, i32* %44, align 4
  %1013 = icmp ne i32 %1012, 0
  br i1 %1013, label %1037, label %1014

; <label>:1014:                                   ; preds = %1011
  %pgocount54 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 37)
  %1015 = add i64 %pgocount54, 1
  store i64 %1015, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 37)
  %1016 = load i32*, i32** %42, align 8
  %1017 = getelementptr inbounds i32, i32* %1016, i32 1
  store i32* %1017, i32** %42, align 8
  %1018 = load i32, i32* %1016, align 4
  store i32 %1018, i32* %44, align 4
  %1019 = load i32*, i32** %42, align 8
  %1020 = getelementptr inbounds i32, i32* %1019, i32 1
  store i32* %1020, i32** %42, align 8
  %1021 = load i32, i32* %1019, align 4
  store i32 %1021, i32* %41, align 4
  %1022 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %1023 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %1022, i32 0, i32 17
  %1024 = load double*, double** %1023, align 8
  %1025 = load i32*, i32** %8, align 8
  %1026 = getelementptr inbounds i32, i32* %1025, i32 1
  store i32* %1026, i32** %8, align 8
  %1027 = load i32, i32* %1025, align 4
  %1028 = load i32*, i32** %38, align 8
  %1029 = getelementptr inbounds i32, i32* %1028, i32 1
  store i32* %1029, i32** %38, align 8
  %1030 = load i32, i32* %1028, align 4
  %1031 = add nsw i32 %1027, %1030
  %1032 = load i32, i32* %12, align 4
  %1033 = shl i32 %1031, %1032
  %1034 = sext i32 %1033 to i64
  %1035 = getelementptr inbounds double, double* %1024, i64 %1034
  %1036 = load double, double* %1035, align 8
  store double %1036, double* %43, align 8
  br label %1037

; <label>:1037:                                   ; preds = %1014, %1011
  %pgocount55 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 10)
  %1038 = add i64 %pgocount55, 1
  store i64 %1038, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 10)
  %1039 = load i32, i32* %44, align 4
  %1040 = add nsw i32 %1039, -1
  store i32 %1040, i32* %44, align 4
  br label %1041

; <label>:1041:                                   ; preds = %1037, %1007
  %1042 = load i16, i16* %52, align 2
  %1043 = sext i16 %1042 to i32
  %1044 = load i32, i32* %39, align 4
  %1045 = ashr i32 8, %1044
  %1046 = and i32 %1043, %1045
  %1047 = icmp ne i32 %1046, 0
  br i1 %1047, label %1048, label %1073

; <label>:1048:                                   ; preds = %1041
  %1049 = load i32, i32* %41, align 4
  store i32 %1049, i32* %40, align 4
  %1050 = load i32, i32* %16, align 4
  %1051 = add nsw i32 %1050, -1
  store i32 %1051, i32* %16, align 4
  %1052 = load i32, i32* %16, align 4
  %1053 = icmp slt i32 %1052, 0
  br i1 %1053, label %1054, label %1058

; <label>:1054:                                   ; preds = %1048
  %pgocount56 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 52)
  %1055 = add i64 %pgocount56, 1
  store i64 %1055, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 52)
  %1056 = load i32, i32* %16, align 4
  %1057 = add nsw i32 %1056, 1
  store i32 %1057, i32* %16, align 4
  br label %1081

; <label>:1058:                                   ; preds = %1048
  %1059 = call i32 @get1bit()
  %1060 = icmp ne i32 %1059, 0
  br i1 %1060, label %1061, label %1067

; <label>:1061:                                   ; preds = %1058
  %pgocount57 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 14)
  %1062 = add i64 %pgocount57, 1
  store i64 %1062, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 14)
  %1063 = load double, double* %43, align 8
  %1064 = fsub double -0.000000e+00, %1063
  %1065 = load double*, double** %13, align 8
  %1066 = getelementptr inbounds double, double* %1065, i32 1
  store double* %1066, double** %13, align 8
  store double %1064, double* %1065, align 8
  br label %1072

; <label>:1067:                                   ; preds = %1058
  %pgocount58 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 32)
  %1068 = add i64 %pgocount58, 1
  store i64 %1068, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 32)
  %1069 = load double, double* %43, align 8
  %1070 = load double*, double** %13, align 8
  %1071 = getelementptr inbounds double, double* %1070, i32 1
  store double* %1071, double** %13, align 8
  store double %1069, double* %1070, align 8
  br label %1072

; <label>:1072:                                   ; preds = %1067, %1061
  br label %1077

; <label>:1073:                                   ; preds = %1041
  %pgocount59 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 16)
  %1074 = add i64 %pgocount59, 1
  store i64 %1074, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 16)
  %1075 = load double*, double** %13, align 8
  %1076 = getelementptr inbounds double, double* %1075, i32 1
  store double* %1076, double** %13, align 8
  store double 0.000000e+00, double* %1075, align 8
  br label %1077

; <label>:1077:                                   ; preds = %1073, %1072
  br label %1078

; <label>:1078:                                   ; preds = %1077
  %1079 = load i32, i32* %39, align 4
  %1080 = add nsw i32 %1079, 1
  store i32 %1080, i32* %39, align 4
  br label %1004

; <label>:1081:                                   ; preds = %1054, %1004
  br label %1082

; <label>:1082:                                   ; preds = %1081
  %pgocount60 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 45)
  %1083 = add i64 %pgocount60, 1
  store i64 %1083, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 45)
  %1084 = load i32, i32* %15, align 4
  %1085 = add nsw i32 %1084, -1
  store i32 %1085, i32* %15, align 4
  br label %957

; <label>:1086:                                   ; preds = %964
  %1087 = load [18 x double]*, [18 x double]** %7, align 8
  %1088 = getelementptr inbounds [18 x double], [18 x double]* %1087, i64 32
  %1089 = getelementptr inbounds [18 x double], [18 x double]* %1088, i64 0, i64 0
  %1090 = load double*, double** %13, align 8
  %1091 = ptrtoint double* %1089 to i64
  %1092 = ptrtoint double* %1090 to i64
  %1093 = sub i64 %1091, %1092
  %1094 = sdiv exact i64 %1093, 8
  %1095 = ashr i64 %1094, 1
  %1096 = trunc i64 %1095 to i32
  store i32 %1096, i32* %39, align 4
  br label %1097

; <label>:1097:                                   ; preds = %1105, %1086
  %1098 = load i32, i32* %39, align 4
  %1099 = icmp ne i32 %1098, 0
  br i1 %1099, label %1100, label %1109

; <label>:1100:                                   ; preds = %1097
  %1101 = load double*, double** %13, align 8
  %1102 = getelementptr inbounds double, double* %1101, i32 1
  store double* %1102, double** %13, align 8
  store double 0.000000e+00, double* %1101, align 8
  %1103 = load double*, double** %13, align 8
  %1104 = getelementptr inbounds double, double* %1103, i32 1
  store double* %1104, double** %13, align 8
  store double 0.000000e+00, double* %1103, align 8
  br label %1105

; <label>:1105:                                   ; preds = %1100
  %pgocount61 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 46)
  %1106 = add i64 %pgocount61, 1
  store i64 %1106, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 46)
  %1107 = load i32, i32* %39, align 4
  %1108 = add nsw i32 %1107, -1
  store i32 %1108, i32* %39, align 4
  br label %1097

; <label>:1109:                                   ; preds = %1097
  %pgocount62 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 55)
  %1110 = add i64 %pgocount62, 1
  store i64 %1110, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 55)
  %1111 = load i32, i32* %40, align 4
  %1112 = add nsw i32 %1111, 1
  %1113 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %1114 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %1113, i32 0, i32 9
  store i32 %1112, i32* %1114, align 4
  %1115 = load i32, i32* %10, align 4
  %1116 = sext i32 %1115 to i64
  %1117 = getelementptr inbounds [9 x [23 x i32]], [9 x [23 x i32]]* @longLimit, i64 0, i64 %1116
  %1118 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %1119 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %1118, i32 0, i32 9
  %1120 = load i32, i32* %1119, align 4
  %1121 = zext i32 %1120 to i64
  %1122 = getelementptr inbounds [23 x i32], [23 x i32]* %1117, i64 0, i64 %1121
  %1123 = load i32, i32* %1122, align 4
  %1124 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %1125 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %1124, i32 0, i32 10
  store i32 %1123, i32* %1125, align 8
  br label %1126

; <label>:1126:                                   ; preds = %1109, %702
  br label %1127

; <label>:1127:                                   ; preds = %1130, %1126
  %1128 = load i32, i32* %16, align 4
  %1129 = icmp sgt i32 %1128, 16
  br i1 %1129, label %1130, label %1135

; <label>:1130:                                   ; preds = %1127
  %pgocount63 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 38)
  %1131 = add i64 %pgocount63, 1
  store i64 %1131, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 38)
  %1132 = call i32 @getbits(i32 16)
  %1133 = load i32, i32* %16, align 4
  %1134 = sub nsw i32 %1133, 16
  store i32 %1134, i32* %16, align 4
  br label %1127

; <label>:1135:                                   ; preds = %1127
  %1136 = load i32, i32* %16, align 4
  %1137 = icmp sgt i32 %1136, 0
  br i1 %1137, label %1138, label %1141

; <label>:1138:                                   ; preds = %1135
  %1139 = load i32, i32* %16, align 4
  %1140 = call i32 @getbits(i32 %1139)
  br label %1152

; <label>:1141:                                   ; preds = %1135
  %1142 = load i32, i32* %16, align 4
  %1143 = icmp slt i32 %1142, 0
  br i1 %1143, label %1144, label %1150

; <label>:1144:                                   ; preds = %1141
  %pgocount64 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 64)
  %1145 = add i64 %pgocount64, 1
  store i64 %1145, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 64)
  %1146 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1147 = load i32, i32* %16, align 4
  %1148 = sub nsw i32 0, %1147
  %1149 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1146, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i32 0, i32 0), i32 %1148)
  store i32 1, i32* %6, align 4
  br label %1153

; <label>:1150:                                   ; preds = %1141
  %pgocount65 = load i64, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 61)
  %1151 = add i64 %pgocount65, 1
  store i64 %1151, i64* getelementptr inbounds ([66 x i64], [66 x i64]* @__profc_tmp1.ll_III_dequantize_sample, i64 0, i64 61)
  br label %1152

; <label>:1152:                                   ; preds = %1150, %1138
  store i32 0, i32* %6, align 4
  br label %1153

; <label>:1153:                                   ; preds = %1152, %1144
  %1154 = load i32, i32* %6, align 4
  ret i32 %1154
}

; Function Attrs: nounwind uwtable
define internal void @III_i_stereo([32 x [18 x double]]*, i32*, %struct.gr_info_s*, i32, i32, i32) #0 {
  %7 = alloca [32 x [18 x double]]*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca %struct.gr_info_s*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca [576 x double]*, align 8
  %14 = alloca %struct.bandInfoStruct*, align 8
  %15 = alloca double*, align 8
  %16 = alloca double*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca double, align 8
  %25 = alloca double, align 8
  %26 = alloca double, align 8
  %27 = alloca double, align 8
  %28 = alloca double, align 8
  %29 = alloca double, align 8
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca double, align 8
  %35 = alloca double, align 8
  %36 = alloca double, align 8
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca double, align 8
  %42 = alloca double, align 8
  %43 = alloca double, align 8
  %44 = alloca i32, align 4
  %45 = alloca double, align 8
  %46 = alloca double, align 8
  %47 = alloca double, align 8
  store [32 x [18 x double]]* %0, [32 x [18 x double]]** %7, align 8
  store i32* %1, i32** %8, align 8
  store %struct.gr_info_s* %2, %struct.gr_info_s** %9, align 8
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  store i32 %5, i32* %12, align 4
  %48 = load [32 x [18 x double]]*, [32 x [18 x double]]** %7, align 8
  %49 = bitcast [32 x [18 x double]]* %48 to [576 x double]*
  store [576 x double]* %49, [576 x double]** %13, align 8
  %50 = load i32, i32* %10, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [9 x %struct.bandInfoStruct], [9 x %struct.bandInfoStruct]* @bandInfo, i64 0, i64 %51
  store %struct.bandInfoStruct* %52, %struct.bandInfoStruct** %14, align 8
  %53 = load i32, i32* %12, align 4
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %83

; <label>:55:                                     ; preds = %6
  %56 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %57 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %56, i32 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = and i32 %58, 1
  store i32 %59, i32* %17, align 4
  %60 = load i32, i32* %11, align 4
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %72

; <label>:62:                                     ; preds = %55
  %pgocount = load i64, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 15)
  %63 = add i64 %pgocount, 1
  store i64 %63, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 15)
  %64 = load i32, i32* %17, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [2 x [16 x double]], [2 x [16 x double]]* @pow1_2, i64 0, i64 %65
  %67 = getelementptr inbounds [16 x double], [16 x double]* %66, i32 0, i32 0
  store double* %67, double** %15, align 8
  %68 = load i32, i32* %17, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [2 x [16 x double]], [2 x [16 x double]]* @pow2_2, i64 0, i64 %69
  %71 = getelementptr inbounds [16 x double], [16 x double]* %70, i32 0, i32 0
  store double* %71, double** %16, align 8
  br label %82

; <label>:72:                                     ; preds = %55
  %pgocount1 = load i64, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 19)
  %73 = add i64 %pgocount1, 1
  store i64 %73, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 19)
  %74 = load i32, i32* %17, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [2 x [16 x double]], [2 x [16 x double]]* @pow1_1, i64 0, i64 %75
  %77 = getelementptr inbounds [16 x double], [16 x double]* %76, i32 0, i32 0
  store double* %77, double** %15, align 8
  %78 = load i32, i32* %17, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds [2 x [16 x double]], [2 x [16 x double]]* @pow2_1, i64 0, i64 %79
  %81 = getelementptr inbounds [16 x double], [16 x double]* %80, i32 0, i32 0
  store double* %81, double** %16, align 8
  br label %82

; <label>:82:                                     ; preds = %72, %62
  br label %91

; <label>:83:                                     ; preds = %6
  %84 = load i32, i32* %11, align 4
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %86, label %88

; <label>:86:                                     ; preds = %83
  %pgocount2 = load i64, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 20)
  %87 = add i64 %pgocount2, 1
  store i64 %87, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 20)
  store double* getelementptr inbounds ([16 x double], [16 x double]* @tan1_2, i32 0, i32 0), double** %15, align 8
  store double* getelementptr inbounds ([16 x double], [16 x double]* @tan2_2, i32 0, i32 0), double** %16, align 8
  br label %90

; <label>:88:                                     ; preds = %83
  %pgocount3 = load i64, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 21)
  %89 = add i64 %pgocount3, 1
  store i64 %89, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 21)
  store double* getelementptr inbounds ([16 x double], [16 x double]* @tan1_1, i32 0, i32 0), double** %15, align 8
  store double* getelementptr inbounds ([16 x double], [16 x double]* @tan2_1, i32 0, i32 0), double** %16, align 8
  br label %90

; <label>:90:                                     ; preds = %88, %86
  br label %91

; <label>:91:                                     ; preds = %90, %82
  %92 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %93 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %92, i32 0, i32 4
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %94, 2
  br i1 %95, label %96, label %367

; <label>:96:                                     ; preds = %91
  store i32 0, i32* %19, align 4
  %97 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %98 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %97, i32 0, i32 5
  %99 = load i32, i32* %98, align 4
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %101, label %103

; <label>:101:                                    ; preds = %96
  %pgocount4 = load i64, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 16)
  %102 = add i64 %pgocount4, 1
  store i64 %102, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 16)
  store i32 1, i32* %19, align 4
  br label %103

; <label>:103:                                    ; preds = %101, %96
  store i32 0, i32* %18, align 4
  br label %104

; <label>:104:                                    ; preds = %274, %103
  %105 = load i32, i32* %18, align 4
  %106 = icmp slt i32 %105, 3
  br i1 %106, label %107, label %278

; <label>:107:                                    ; preds = %104
  %108 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %109 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %108, i32 0, i32 8
  %110 = load i32, i32* %18, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [3 x i32], [3 x i32]* %109, i64 0, i64 %111
  %113 = load i32, i32* %112, align 4
  store i32 %113, i32* %23, align 4
  %114 = load i32, i32* %23, align 4
  %115 = icmp sgt i32 %114, 3
  br i1 %115, label %116, label %118

; <label>:116:                                    ; preds = %107
  %pgocount5 = load i64, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 7)
  %117 = add i64 %pgocount5, 1
  store i64 %117, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 7)
  store i32 0, i32* %19, align 4
  br label %118

; <label>:118:                                    ; preds = %116, %107
  br label %119

; <label>:119:                                    ; preds = %200, %118
  %120 = load i32, i32* %23, align 4
  %121 = icmp slt i32 %120, 12
  br i1 %121, label %122, label %203

; <label>:122:                                    ; preds = %119
  %pgocount6 = load i64, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 1)
  %123 = add i64 %pgocount6, 1
  store i64 %123, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 1)
  %124 = load i32*, i32** %8, align 8
  %125 = load i32, i32* %23, align 4
  %126 = mul nsw i32 %125, 3
  %127 = load i32, i32* %18, align 4
  %128 = add nsw i32 %126, %127
  %129 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %130 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %129, i32 0, i32 5
  %131 = load i32, i32* %130, align 4
  %132 = sub i32 %128, %131
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds i32, i32* %124, i64 %133
  %135 = load i32, i32* %134, align 4
  store i32 %135, i32* %20, align 4
  %136 = load i32, i32* %20, align 4
  %137 = icmp ne i32 %136, 7
  br i1 %137, label %138, label %199

; <label>:138:                                    ; preds = %122
  %139 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %14, align 8
  %140 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %139, i32 0, i32 3
  %141 = load i32, i32* %23, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [13 x i16], [13 x i16]* %140, i64 0, i64 %142
  %144 = load i16, i16* %143, align 2
  %145 = sext i16 %144 to i32
  store i32 %145, i32* %21, align 4
  %146 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %14, align 8
  %147 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %146, i32 0, i32 2
  %148 = load i32, i32* %23, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds [14 x i16], [14 x i16]* %147, i64 0, i64 %149
  %151 = load i16, i16* %150, align 2
  %152 = sext i16 %151 to i32
  %153 = load i32, i32* %18, align 4
  %154 = add nsw i32 %152, %153
  store i32 %154, i32* %22, align 4
  %155 = load double*, double** %15, align 8
  %156 = load i32, i32* %20, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds double, double* %155, i64 %157
  %159 = load double, double* %158, align 8
  store double %159, double* %24, align 8
  %160 = load double*, double** %16, align 8
  %161 = load i32, i32* %20, align 4
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds double, double* %160, i64 %162
  %164 = load double, double* %163, align 8
  store double %164, double* %25, align 8
  br label %165

; <label>:165:                                    ; preds = %192, %138
  %166 = load i32, i32* %21, align 4
  %167 = icmp sgt i32 %166, 0
  br i1 %167, label %168, label %197

; <label>:168:                                    ; preds = %165
  %pgocount7 = load i64, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 0)
  %169 = add i64 %pgocount7, 1
  store i64 %169, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 0)
  %170 = load [576 x double]*, [576 x double]** %13, align 8
  %171 = getelementptr inbounds [576 x double], [576 x double]* %170, i64 0
  %172 = load i32, i32* %22, align 4
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds [576 x double], [576 x double]* %171, i64 0, i64 %173
  %175 = load double, double* %174, align 8
  store double %175, double* %26, align 8
  %176 = load double, double* %26, align 8
  %177 = load double, double* %24, align 8
  %178 = fmul double %176, %177
  %179 = load [576 x double]*, [576 x double]** %13, align 8
  %180 = getelementptr inbounds [576 x double], [576 x double]* %179, i64 0
  %181 = load i32, i32* %22, align 4
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds [576 x double], [576 x double]* %180, i64 0, i64 %182
  store double %178, double* %183, align 8
  %184 = load double, double* %26, align 8
  %185 = load double, double* %25, align 8
  %186 = fmul double %184, %185
  %187 = load [576 x double]*, [576 x double]** %13, align 8
  %188 = getelementptr inbounds [576 x double], [576 x double]* %187, i64 1
  %189 = load i32, i32* %22, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds [576 x double], [576 x double]* %188, i64 0, i64 %190
  store double %186, double* %191, align 8
  br label %192

; <label>:192:                                    ; preds = %168
  %193 = load i32, i32* %21, align 4
  %194 = add nsw i32 %193, -1
  store i32 %194, i32* %21, align 4
  %195 = load i32, i32* %22, align 4
  %196 = add nsw i32 %195, 3
  store i32 %196, i32* %22, align 4
  br label %165

; <label>:197:                                    ; preds = %165
  %pgocount8 = load i64, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 2)
  %198 = add i64 %pgocount8, 1
  store i64 %198, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 2)
  br label %199

; <label>:199:                                    ; preds = %197, %122
  br label %200

; <label>:200:                                    ; preds = %199
  %201 = load i32, i32* %23, align 4
  %202 = add nsw i32 %201, 1
  store i32 %202, i32* %23, align 4
  br label %119

; <label>:203:                                    ; preds = %119
  %204 = load i32*, i32** %8, align 8
  %205 = load i32, i32* %18, align 4
  %206 = add nsw i32 33, %205
  %207 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %208 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %207, i32 0, i32 5
  %209 = load i32, i32* %208, align 4
  %210 = sub i32 %206, %209
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds i32, i32* %204, i64 %211
  %213 = load i32, i32* %212, align 4
  store i32 %213, i32* %20, align 4
  %214 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %14, align 8
  %215 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %214, i32 0, i32 3
  %216 = getelementptr inbounds [13 x i16], [13 x i16]* %215, i64 0, i64 12
  %217 = load i16, i16* %216, align 2
  %218 = sext i16 %217 to i32
  store i32 %218, i32* %21, align 4
  %219 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %14, align 8
  %220 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %219, i32 0, i32 2
  %221 = getelementptr inbounds [14 x i16], [14 x i16]* %220, i64 0, i64 12
  %222 = load i16, i16* %221, align 2
  %223 = sext i16 %222 to i32
  %224 = load i32, i32* %18, align 4
  %225 = add nsw i32 %223, %224
  store i32 %225, i32* %22, align 4
  %226 = load i32, i32* %20, align 4
  %227 = icmp ne i32 %226, 7
  br i1 %227, label %228, label %273

; <label>:228:                                    ; preds = %203
  %229 = load double*, double** %15, align 8
  %230 = load i32, i32* %20, align 4
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds double, double* %229, i64 %231
  %233 = load double, double* %232, align 8
  store double %233, double* %27, align 8
  %234 = load double*, double** %16, align 8
  %235 = load i32, i32* %20, align 4
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds double, double* %234, i64 %236
  %238 = load double, double* %237, align 8
  store double %238, double* %28, align 8
  br label %239

; <label>:239:                                    ; preds = %265, %228
  %240 = load i32, i32* %21, align 4
  %241 = icmp sgt i32 %240, 0
  br i1 %241, label %242, label %271

; <label>:242:                                    ; preds = %239
  %243 = load [576 x double]*, [576 x double]** %13, align 8
  %244 = getelementptr inbounds [576 x double], [576 x double]* %243, i64 0
  %245 = load i32, i32* %22, align 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds [576 x double], [576 x double]* %244, i64 0, i64 %246
  %248 = load double, double* %247, align 8
  store double %248, double* %29, align 8
  %249 = load double, double* %29, align 8
  %250 = load double, double* %27, align 8
  %251 = fmul double %249, %250
  %252 = load [576 x double]*, [576 x double]** %13, align 8
  %253 = getelementptr inbounds [576 x double], [576 x double]* %252, i64 0
  %254 = load i32, i32* %22, align 4
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds [576 x double], [576 x double]* %253, i64 0, i64 %255
  store double %251, double* %256, align 8
  %257 = load double, double* %29, align 8
  %258 = load double, double* %28, align 8
  %259 = fmul double %257, %258
  %260 = load [576 x double]*, [576 x double]** %13, align 8
  %261 = getelementptr inbounds [576 x double], [576 x double]* %260, i64 1
  %262 = load i32, i32* %22, align 4
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds [576 x double], [576 x double]* %261, i64 0, i64 %263
  store double %259, double* %264, align 8
  br label %265

; <label>:265:                                    ; preds = %242
  %pgocount9 = load i64, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 3)
  %266 = add i64 %pgocount9, 1
  store i64 %266, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 3)
  %267 = load i32, i32* %21, align 4
  %268 = add nsw i32 %267, -1
  store i32 %268, i32* %21, align 4
  %269 = load i32, i32* %22, align 4
  %270 = add nsw i32 %269, 3
  store i32 %270, i32* %22, align 4
  br label %239

; <label>:271:                                    ; preds = %239
  %pgocount10 = load i64, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 8)
  %272 = add i64 %pgocount10, 1
  store i64 %272, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 8)
  br label %273

; <label>:273:                                    ; preds = %271, %203
  br label %274

; <label>:274:                                    ; preds = %273
  %pgocount11 = load i64, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 6)
  %275 = add i64 %pgocount11, 1
  store i64 %275, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 6)
  %276 = load i32, i32* %18, align 4
  %277 = add nsw i32 %276, 1
  store i32 %277, i32* %18, align 4
  br label %104

; <label>:278:                                    ; preds = %104
  %279 = load i32, i32* %19, align 4
  %280 = icmp ne i32 %279, 0
  br i1 %280, label %281, label %366

; <label>:281:                                    ; preds = %278
  %282 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %283 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %282, i32 0, i32 9
  %284 = load i32, i32* %283, align 4
  store i32 %284, i32* %30, align 4
  %285 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %14, align 8
  %286 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %285, i32 0, i32 0
  %287 = load i32, i32* %30, align 4
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds [23 x i16], [23 x i16]* %286, i64 0, i64 %288
  %290 = load i16, i16* %289, align 2
  %291 = sext i16 %290 to i32
  store i32 %291, i32* %31, align 4
  br label %292

; <label>:292:                                    ; preds = %361, %281
  %293 = load i32, i32* %30, align 4
  %294 = icmp slt i32 %293, 8
  br i1 %294, label %295, label %364

; <label>:295:                                    ; preds = %292
  %296 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %14, align 8
  %297 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %296, i32 0, i32 1
  %298 = load i32, i32* %30, align 4
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds [22 x i16], [22 x i16]* %297, i64 0, i64 %299
  %301 = load i16, i16* %300, align 2
  %302 = sext i16 %301 to i32
  store i32 %302, i32* %32, align 4
  %303 = load i32*, i32** %8, align 8
  %304 = load i32, i32* %30, align 4
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds i32, i32* %303, i64 %305
  %307 = load i32, i32* %306, align 4
  store i32 %307, i32* %33, align 4
  %308 = load i32, i32* %33, align 4
  %309 = icmp ne i32 %308, 7
  br i1 %309, label %310, label %355

; <label>:310:                                    ; preds = %295
  %311 = load double*, double** %15, align 8
  %312 = load i32, i32* %33, align 4
  %313 = sext i32 %312 to i64
  %314 = getelementptr inbounds double, double* %311, i64 %313
  %315 = load double, double* %314, align 8
  store double %315, double* %34, align 8
  %316 = load double*, double** %16, align 8
  %317 = load i32, i32* %33, align 4
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds double, double* %316, i64 %318
  %320 = load double, double* %319, align 8
  store double %320, double* %35, align 8
  br label %321

; <label>:321:                                    ; preds = %348, %310
  %322 = load i32, i32* %32, align 4
  %323 = icmp sgt i32 %322, 0
  br i1 %323, label %324, label %353

; <label>:324:                                    ; preds = %321
  %pgocount12 = load i64, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 5)
  %325 = add i64 %pgocount12, 1
  store i64 %325, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 5)
  %326 = load [576 x double]*, [576 x double]** %13, align 8
  %327 = getelementptr inbounds [576 x double], [576 x double]* %326, i64 0
  %328 = load i32, i32* %31, align 4
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds [576 x double], [576 x double]* %327, i64 0, i64 %329
  %331 = load double, double* %330, align 8
  store double %331, double* %36, align 8
  %332 = load double, double* %36, align 8
  %333 = load double, double* %34, align 8
  %334 = fmul double %332, %333
  %335 = load [576 x double]*, [576 x double]** %13, align 8
  %336 = getelementptr inbounds [576 x double], [576 x double]* %335, i64 0
  %337 = load i32, i32* %31, align 4
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds [576 x double], [576 x double]* %336, i64 0, i64 %338
  store double %334, double* %339, align 8
  %340 = load double, double* %36, align 8
  %341 = load double, double* %35, align 8
  %342 = fmul double %340, %341
  %343 = load [576 x double]*, [576 x double]** %13, align 8
  %344 = getelementptr inbounds [576 x double], [576 x double]* %343, i64 1
  %345 = load i32, i32* %31, align 4
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds [576 x double], [576 x double]* %344, i64 0, i64 %346
  store double %342, double* %347, align 8
  br label %348

; <label>:348:                                    ; preds = %324
  %349 = load i32, i32* %32, align 4
  %350 = add nsw i32 %349, -1
  store i32 %350, i32* %32, align 4
  %351 = load i32, i32* %31, align 4
  %352 = add nsw i32 %351, 1
  store i32 %352, i32* %31, align 4
  br label %321

; <label>:353:                                    ; preds = %321
  %pgocount13 = load i64, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 12)
  %354 = add i64 %pgocount13, 1
  store i64 %354, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 12)
  br label %360

; <label>:355:                                    ; preds = %295
  %pgocount14 = load i64, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 13)
  %356 = add i64 %pgocount14, 1
  store i64 %356, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 13)
  %357 = load i32, i32* %32, align 4
  %358 = load i32, i32* %31, align 4
  %359 = add nsw i32 %358, %357
  store i32 %359, i32* %31, align 4
  br label %360

; <label>:360:                                    ; preds = %355, %353
  br label %361

; <label>:361:                                    ; preds = %360
  %362 = load i32, i32* %30, align 4
  %363 = add nsw i32 %362, 1
  store i32 %363, i32* %30, align 4
  br label %292

; <label>:364:                                    ; preds = %292
  %pgocount15 = load i64, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 17)
  %365 = add i64 %pgocount15, 1
  store i64 %365, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 17)
  br label %366

; <label>:366:                                    ; preds = %364, %278
  br label %508

; <label>:367:                                    ; preds = %91
  %368 = load %struct.gr_info_s*, %struct.gr_info_s** %9, align 8
  %369 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %368, i32 0, i32 9
  %370 = load i32, i32* %369, align 4
  store i32 %370, i32* %37, align 4
  %371 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %14, align 8
  %372 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %371, i32 0, i32 0
  %373 = load i32, i32* %37, align 4
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds [23 x i16], [23 x i16]* %372, i64 0, i64 %374
  %376 = load i16, i16* %375, align 2
  %377 = sext i16 %376 to i32
  store i32 %377, i32* %39, align 4
  br label %378

; <label>:378:                                    ; preds = %447, %367
  %379 = load i32, i32* %37, align 4
  %380 = icmp slt i32 %379, 21
  br i1 %380, label %381, label %450

; <label>:381:                                    ; preds = %378
  %382 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %14, align 8
  %383 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %382, i32 0, i32 1
  %384 = load i32, i32* %37, align 4
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds [22 x i16], [22 x i16]* %383, i64 0, i64 %385
  %387 = load i16, i16* %386, align 2
  %388 = sext i16 %387 to i32
  store i32 %388, i32* %40, align 4
  %389 = load i32*, i32** %8, align 8
  %390 = load i32, i32* %37, align 4
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds i32, i32* %389, i64 %391
  %393 = load i32, i32* %392, align 4
  store i32 %393, i32* %38, align 4
  %394 = load i32, i32* %38, align 4
  %395 = icmp ne i32 %394, 7
  br i1 %395, label %396, label %441

; <label>:396:                                    ; preds = %381
  %397 = load double*, double** %15, align 8
  %398 = load i32, i32* %38, align 4
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds double, double* %397, i64 %399
  %401 = load double, double* %400, align 8
  store double %401, double* %41, align 8
  %402 = load double*, double** %16, align 8
  %403 = load i32, i32* %38, align 4
  %404 = sext i32 %403 to i64
  %405 = getelementptr inbounds double, double* %402, i64 %404
  %406 = load double, double* %405, align 8
  store double %406, double* %42, align 8
  br label %407

; <label>:407:                                    ; preds = %433, %396
  %408 = load i32, i32* %40, align 4
  %409 = icmp sgt i32 %408, 0
  br i1 %409, label %410, label %439

; <label>:410:                                    ; preds = %407
  %411 = load [576 x double]*, [576 x double]** %13, align 8
  %412 = getelementptr inbounds [576 x double], [576 x double]* %411, i64 0
  %413 = load i32, i32* %39, align 4
  %414 = sext i32 %413 to i64
  %415 = getelementptr inbounds [576 x double], [576 x double]* %412, i64 0, i64 %414
  %416 = load double, double* %415, align 8
  store double %416, double* %43, align 8
  %417 = load double, double* %43, align 8
  %418 = load double, double* %41, align 8
  %419 = fmul double %417, %418
  %420 = load [576 x double]*, [576 x double]** %13, align 8
  %421 = getelementptr inbounds [576 x double], [576 x double]* %420, i64 0
  %422 = load i32, i32* %39, align 4
  %423 = sext i32 %422 to i64
  %424 = getelementptr inbounds [576 x double], [576 x double]* %421, i64 0, i64 %423
  store double %419, double* %424, align 8
  %425 = load double, double* %43, align 8
  %426 = load double, double* %42, align 8
  %427 = fmul double %425, %426
  %428 = load [576 x double]*, [576 x double]** %13, align 8
  %429 = getelementptr inbounds [576 x double], [576 x double]* %428, i64 1
  %430 = load i32, i32* %39, align 4
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds [576 x double], [576 x double]* %429, i64 0, i64 %431
  store double %427, double* %432, align 8
  br label %433

; <label>:433:                                    ; preds = %410
  %pgocount16 = load i64, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 4)
  %434 = add i64 %pgocount16, 1
  store i64 %434, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 4)
  %435 = load i32, i32* %40, align 4
  %436 = add nsw i32 %435, -1
  store i32 %436, i32* %40, align 4
  %437 = load i32, i32* %39, align 4
  %438 = add nsw i32 %437, 1
  store i32 %438, i32* %39, align 4
  br label %407

; <label>:439:                                    ; preds = %407
  %pgocount17 = load i64, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 9)
  %440 = add i64 %pgocount17, 1
  store i64 %440, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 9)
  br label %446

; <label>:441:                                    ; preds = %381
  %pgocount18 = load i64, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 10)
  %442 = add i64 %pgocount18, 1
  store i64 %442, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 10)
  %443 = load i32, i32* %40, align 4
  %444 = load i32, i32* %39, align 4
  %445 = add nsw i32 %444, %443
  store i32 %445, i32* %39, align 4
  br label %446

; <label>:446:                                    ; preds = %441, %439
  br label %447

; <label>:447:                                    ; preds = %446
  %448 = load i32, i32* %37, align 4
  %449 = add nsw i32 %448, 1
  store i32 %449, i32* %37, align 4
  br label %378

; <label>:450:                                    ; preds = %378
  %451 = load i32*, i32** %8, align 8
  %452 = getelementptr inbounds i32, i32* %451, i64 20
  %453 = load i32, i32* %452, align 4
  store i32 %453, i32* %38, align 4
  %454 = load i32, i32* %38, align 4
  %455 = icmp ne i32 %454, 7
  br i1 %455, label %456, label %506

; <label>:456:                                    ; preds = %450
  %457 = load double*, double** %15, align 8
  %458 = load i32, i32* %38, align 4
  %459 = sext i32 %458 to i64
  %460 = getelementptr inbounds double, double* %457, i64 %459
  %461 = load double, double* %460, align 8
  store double %461, double* %45, align 8
  %462 = load double*, double** %16, align 8
  %463 = load i32, i32* %38, align 4
  %464 = sext i32 %463 to i64
  %465 = getelementptr inbounds double, double* %462, i64 %464
  %466 = load double, double* %465, align 8
  store double %466, double* %46, align 8
  %467 = load %struct.bandInfoStruct*, %struct.bandInfoStruct** %14, align 8
  %468 = getelementptr inbounds %struct.bandInfoStruct, %struct.bandInfoStruct* %467, i32 0, i32 1
  %469 = getelementptr inbounds [22 x i16], [22 x i16]* %468, i64 0, i64 21
  %470 = load i16, i16* %469, align 2
  %471 = sext i16 %470 to i32
  store i32 %471, i32* %44, align 4
  br label %472

; <label>:472:                                    ; preds = %498, %456
  %473 = load i32, i32* %44, align 4
  %474 = icmp sgt i32 %473, 0
  br i1 %474, label %475, label %504

; <label>:475:                                    ; preds = %472
  %476 = load [576 x double]*, [576 x double]** %13, align 8
  %477 = getelementptr inbounds [576 x double], [576 x double]* %476, i64 0
  %478 = load i32, i32* %39, align 4
  %479 = sext i32 %478 to i64
  %480 = getelementptr inbounds [576 x double], [576 x double]* %477, i64 0, i64 %479
  %481 = load double, double* %480, align 8
  store double %481, double* %47, align 8
  %482 = load double, double* %47, align 8
  %483 = load double, double* %45, align 8
  %484 = fmul double %482, %483
  %485 = load [576 x double]*, [576 x double]** %13, align 8
  %486 = getelementptr inbounds [576 x double], [576 x double]* %485, i64 0
  %487 = load i32, i32* %39, align 4
  %488 = sext i32 %487 to i64
  %489 = getelementptr inbounds [576 x double], [576 x double]* %486, i64 0, i64 %488
  store double %484, double* %489, align 8
  %490 = load double, double* %47, align 8
  %491 = load double, double* %46, align 8
  %492 = fmul double %490, %491
  %493 = load [576 x double]*, [576 x double]** %13, align 8
  %494 = getelementptr inbounds [576 x double], [576 x double]* %493, i64 1
  %495 = load i32, i32* %39, align 4
  %496 = sext i32 %495 to i64
  %497 = getelementptr inbounds [576 x double], [576 x double]* %494, i64 0, i64 %496
  store double %492, double* %497, align 8
  br label %498

; <label>:498:                                    ; preds = %475
  %pgocount19 = load i64, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 11)
  %499 = add i64 %pgocount19, 1
  store i64 %499, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 11)
  %500 = load i32, i32* %44, align 4
  %501 = add nsw i32 %500, -1
  store i32 %501, i32* %44, align 4
  %502 = load i32, i32* %39, align 4
  %503 = add nsw i32 %502, 1
  store i32 %503, i32* %39, align 4
  br label %472

; <label>:504:                                    ; preds = %472
  %pgocount20 = load i64, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 18)
  %505 = add i64 %pgocount20, 1
  store i64 %505, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 18)
  br label %506

; <label>:506:                                    ; preds = %504, %450
  %pgocount21 = load i64, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 14)
  %507 = add i64 %pgocount21, 1
  store i64 %507, i64* getelementptr inbounds ([22 x i64], [22 x i64]* @__profc_tmp1.ll_III_i_stereo, i64 0, i64 14)
  br label %508

; <label>:508:                                    ; preds = %506, %366
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @III_antialias([18 x double]*, %struct.gr_info_s*) #0 {
  %3 = alloca [18 x double]*, align 8
  %4 = alloca %struct.gr_info_s*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double*, align 8
  %8 = alloca i32, align 4
  %9 = alloca double*, align 8
  %10 = alloca double*, align 8
  %11 = alloca double*, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  store [18 x double]* %0, [18 x double]** %3, align 8
  store %struct.gr_info_s* %1, %struct.gr_info_s** %4, align 8
  %14 = load %struct.gr_info_s*, %struct.gr_info_s** %4, align 8
  %15 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %14, i32 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 2
  br i1 %17, label %18, label %27

; <label>:18:                                     ; preds = %2
  %19 = load %struct.gr_info_s*, %struct.gr_info_s** %4, align 8
  %20 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %19, i32 0, i32 5
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %25, label %23

; <label>:23:                                     ; preds = %18
  %pgocount = load i64, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_tmp1.ll_III_antialias, i64 0, i64 4)
  %24 = add i64 %pgocount, 1
  store i64 %24, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_tmp1.ll_III_antialias, i64 0, i64 4)
  br label %86

; <label>:25:                                     ; preds = %18
  %pgocount1 = load i64, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_tmp1.ll_III_antialias, i64 0, i64 3)
  %26 = add i64 %pgocount1, 1
  store i64 %26, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_tmp1.ll_III_antialias, i64 0, i64 3)
  store i32 1, i32* %5, align 4
  br label %33

; <label>:27:                                     ; preds = %2
  %pgocount2 = load i64, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_tmp1.ll_III_antialias, i64 0, i64 2)
  %28 = add i64 %pgocount2, 1
  store i64 %28, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_tmp1.ll_III_antialias, i64 0, i64 2)
  %29 = load %struct.gr_info_s*, %struct.gr_info_s** %4, align 8
  %30 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %29, i32 0, i32 10
  %31 = load i32, i32* %30, align 8
  %32 = sub i32 %31, 1
  store i32 %32, i32* %5, align 4
  br label %33

; <label>:33:                                     ; preds = %27, %25
  %34 = load [18 x double]*, [18 x double]** %3, align 8
  %35 = getelementptr inbounds [18 x double], [18 x double]* %34, i64 1
  %36 = getelementptr inbounds [18 x double], [18 x double]* %35, i32 0, i32 0
  store double* %36, double** %7, align 8
  %37 = load i32, i32* %5, align 4
  store i32 %37, i32* %6, align 4
  br label %38

; <label>:38:                                     ; preds = %80, %33
  %39 = load i32, i32* %6, align 4
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %86

; <label>:41:                                     ; preds = %38
  store double* getelementptr inbounds ([8 x double], [8 x double]* @aa_cs, i32 0, i32 0), double** %9, align 8
  store double* getelementptr inbounds ([8 x double], [8 x double]* @aa_ca, i32 0, i32 0), double** %10, align 8
  %42 = load double*, double** %7, align 8
  store double* %42, double** %11, align 8
  store i32 7, i32* %8, align 4
  br label %43

; <label>:43:                                     ; preds = %75, %41
  %44 = load i32, i32* %8, align 4
  %45 = icmp sge i32 %44, 0
  br i1 %45, label %46, label %79

; <label>:46:                                     ; preds = %43
  %47 = load double*, double** %11, align 8
  %48 = getelementptr inbounds double, double* %47, i32 -1
  store double* %48, double** %11, align 8
  %49 = load double, double* %48, align 8
  store double %49, double* %12, align 8
  %50 = load double*, double** %7, align 8
  %51 = load double, double* %50, align 8
  store double %51, double* %13, align 8
  %52 = load double, double* %12, align 8
  %53 = load double*, double** %9, align 8
  %54 = load double, double* %53, align 8
  %55 = fmul double %52, %54
  %56 = load double, double* %13, align 8
  %57 = load double*, double** %10, align 8
  %58 = load double, double* %57, align 8
  %59 = fmul double %56, %58
  %60 = fsub double %55, %59
  %61 = load double*, double** %11, align 8
  store double %60, double* %61, align 8
  %62 = load double, double* %13, align 8
  %63 = load double*, double** %9, align 8
  %64 = getelementptr inbounds double, double* %63, i32 1
  store double* %64, double** %9, align 8
  %65 = load double, double* %63, align 8
  %66 = fmul double %62, %65
  %67 = load double, double* %12, align 8
  %68 = load double*, double** %10, align 8
  %69 = getelementptr inbounds double, double* %68, i32 1
  store double* %69, double** %10, align 8
  %70 = load double, double* %68, align 8
  %71 = fmul double %67, %70
  %72 = fadd double %66, %71
  %73 = load double*, double** %7, align 8
  %74 = getelementptr inbounds double, double* %73, i32 1
  store double* %74, double** %7, align 8
  store double %72, double* %73, align 8
  br label %75

; <label>:75:                                     ; preds = %46
  %pgocount3 = load i64, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_tmp1.ll_III_antialias, i64 0, i64 0)
  %76 = add i64 %pgocount3, 1
  store i64 %76, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_tmp1.ll_III_antialias, i64 0, i64 0)
  %77 = load i32, i32* %8, align 4
  %78 = add nsw i32 %77, -1
  store i32 %78, i32* %8, align 4
  br label %43

; <label>:79:                                     ; preds = %43
  br label %80

; <label>:80:                                     ; preds = %79
  %pgocount4 = load i64, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_tmp1.ll_III_antialias, i64 0, i64 1)
  %81 = add i64 %pgocount4, 1
  store i64 %81, i64* getelementptr inbounds ([5 x i64], [5 x i64]* @__profc_tmp1.ll_III_antialias, i64 0, i64 1)
  %82 = load i32, i32* %6, align 4
  %83 = add nsw i32 %82, -1
  store i32 %83, i32* %6, align 4
  %84 = load double*, double** %7, align 8
  %85 = getelementptr inbounds double, double* %84, i64 10
  store double* %85, double** %7, align 8
  br label %38

; <label>:86:                                     ; preds = %38, %23
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @III_hybrid([18 x double]*, [32 x double]*, i32, %struct.gr_info_s*) #0 {
  %5 = alloca [18 x double]*, align 8
  %6 = alloca [32 x double]*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.gr_info_s*, align 8
  %9 = alloca double*, align 8
  %10 = alloca [2 x [576 x double]]*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store [18 x double]* %0, [18 x double]** %5, align 8
  store [32 x double]* %1, [32 x double]** %6, align 8
  store i32 %2, i32* %7, align 4
  store %struct.gr_info_s* %3, %struct.gr_info_s** %8, align 8
  %18 = load [32 x double]*, [32 x double]** %6, align 8
  %19 = bitcast [32 x double]* %18 to double*
  store double* %19, double** %9, align 8
  %20 = load %struct.mpstr*, %struct.mpstr** @gmp, align 8
  %21 = getelementptr inbounds %struct.mpstr, %struct.mpstr* %20, i32 0, i32 7
  %22 = getelementptr inbounds [2 x [2 x [576 x double]]], [2 x [2 x [576 x double]]]* %21, i32 0, i32 0
  store [2 x [576 x double]]* %22, [2 x [576 x double]]** %10, align 8
  %23 = load %struct.mpstr*, %struct.mpstr** @gmp, align 8
  %24 = getelementptr inbounds %struct.mpstr, %struct.mpstr* %23, i32 0, i32 8
  %25 = getelementptr inbounds [2 x i32], [2 x i32]* %24, i32 0, i32 0
  store i32* %25, i32** %11, align 8
  store i32 0, i32* %15, align 4
  %26 = load i32*, i32** %11, align 8
  %27 = load i32, i32* %7, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, i32* %26, i64 %28
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %16, align 4
  %31 = load [2 x [576 x double]]*, [2 x [576 x double]]** %10, align 8
  %32 = load i32, i32* %16, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [2 x [576 x double]], [2 x [576 x double]]* %31, i64 %33
  %35 = load i32, i32* %7, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [2 x [576 x double]], [2 x [576 x double]]* %34, i64 0, i64 %36
  %38 = getelementptr inbounds [576 x double], [576 x double]* %37, i32 0, i32 0
  store double* %38, double** %12, align 8
  %39 = load i32, i32* %16, align 4
  %40 = sub nsw i32 0, %39
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %16, align 4
  %42 = load [2 x [576 x double]]*, [2 x [576 x double]]** %10, align 8
  %43 = load i32, i32* %16, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [2 x [576 x double]], [2 x [576 x double]]* %42, i64 %44
  %46 = load i32, i32* %7, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [2 x [576 x double]], [2 x [576 x double]]* %45, i64 0, i64 %47
  %49 = getelementptr inbounds [576 x double], [576 x double]* %48, i32 0, i32 0
  store double* %49, double** %13, align 8
  %50 = load i32, i32* %16, align 4
  %51 = load i32*, i32** %11, align 8
  %52 = load i32, i32* %7, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i32, i32* %51, i64 %53
  store i32 %50, i32* %54, align 4
  %55 = load %struct.gr_info_s*, %struct.gr_info_s** %8, align 8
  %56 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %55, i32 0, i32 5
  %57 = load i32, i32* %56, align 4
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %59, label %82

; <label>:59:                                     ; preds = %4
  %pgocount = load i64, i64* getelementptr inbounds ([7 x i64], [7 x i64]* @__profc_tmp1.ll_III_hybrid, i64 0, i64 4)
  %60 = add i64 %pgocount, 1
  store i64 %60, i64* getelementptr inbounds ([7 x i64], [7 x i64]* @__profc_tmp1.ll_III_hybrid, i64 0, i64 4)
  store i32 2, i32* %15, align 4
  %61 = load [18 x double]*, [18 x double]** %5, align 8
  %62 = getelementptr inbounds [18 x double], [18 x double]* %61, i64 0
  %63 = getelementptr inbounds [18 x double], [18 x double]* %62, i32 0, i32 0
  %64 = load double*, double** %12, align 8
  %65 = load double*, double** %13, align 8
  %66 = load double*, double** %9, align 8
  call void @dct36(double* %63, double* %64, double* %65, double* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i64 0, i64 0, i32 0), double* %66)
  %67 = load [18 x double]*, [18 x double]** %5, align 8
  %68 = getelementptr inbounds [18 x double], [18 x double]* %67, i64 1
  %69 = getelementptr inbounds [18 x double], [18 x double]* %68, i32 0, i32 0
  %70 = load double*, double** %12, align 8
  %71 = getelementptr inbounds double, double* %70, i64 18
  %72 = load double*, double** %13, align 8
  %73 = getelementptr inbounds double, double* %72, i64 18
  %74 = load double*, double** %9, align 8
  %75 = getelementptr inbounds double, double* %74, i64 1
  call void @dct36(double* %69, double* %71, double* %73, double* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win1, i64 0, i64 0, i32 0), double* %75)
  %76 = load double*, double** %12, align 8
  %77 = getelementptr inbounds double, double* %76, i64 36
  store double* %77, double** %12, align 8
  %78 = load double*, double** %13, align 8
  %79 = getelementptr inbounds double, double* %78, i64 36
  store double* %79, double** %13, align 8
  %80 = load double*, double** %9, align 8
  %81 = getelementptr inbounds double, double* %80, i64 2
  store double* %81, double** %9, align 8
  br label %82

; <label>:82:                                     ; preds = %59, %4
  %83 = load %struct.gr_info_s*, %struct.gr_info_s** %8, align 8
  %84 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %83, i32 0, i32 4
  %85 = load i32, i32* %84, align 8
  store i32 %85, i32* %14, align 4
  %86 = load i32, i32* %14, align 4
  %87 = icmp eq i32 %86, 2
  br i1 %87, label %88, label %128

; <label>:88:                                     ; preds = %82
  br label %89

; <label>:89:                                     ; preds = %116, %88
  %90 = load i32, i32* %15, align 4
  %91 = load %struct.gr_info_s*, %struct.gr_info_s** %8, align 8
  %92 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %91, i32 0, i32 10
  %93 = load i32, i32* %92, align 8
  %94 = icmp ult i32 %90, %93
  br i1 %94, label %95, label %126

; <label>:95:                                     ; preds = %89
  %96 = load [18 x double]*, [18 x double]** %5, align 8
  %97 = load i32, i32* %15, align 4
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds [18 x double], [18 x double]* %96, i64 %98
  %100 = getelementptr inbounds [18 x double], [18 x double]* %99, i32 0, i32 0
  %101 = load double*, double** %12, align 8
  %102 = load double*, double** %13, align 8
  %103 = load double*, double** %9, align 8
  call void @dct12(double* %100, double* %101, double* %102, double* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win, i64 0, i64 2, i32 0), double* %103)
  %104 = load [18 x double]*, [18 x double]** %5, align 8
  %105 = load i32, i32* %15, align 4
  %106 = add nsw i32 %105, 1
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [18 x double], [18 x double]* %104, i64 %107
  %109 = getelementptr inbounds [18 x double], [18 x double]* %108, i32 0, i32 0
  %110 = load double*, double** %12, align 8
  %111 = getelementptr inbounds double, double* %110, i64 18
  %112 = load double*, double** %13, align 8
  %113 = getelementptr inbounds double, double* %112, i64 18
  %114 = load double*, double** %9, align 8
  %115 = getelementptr inbounds double, double* %114, i64 1
  call void @dct12(double* %109, double* %111, double* %113, double* getelementptr inbounds ([4 x [36 x double]], [4 x [36 x double]]* @win1, i64 0, i64 2, i32 0), double* %115)
  br label %116

; <label>:116:                                    ; preds = %95
  %pgocount1 = load i64, i64* getelementptr inbounds ([7 x i64], [7 x i64]* @__profc_tmp1.ll_III_hybrid, i64 0, i64 2)
  %117 = add i64 %pgocount1, 1
  store i64 %117, i64* getelementptr inbounds ([7 x i64], [7 x i64]* @__profc_tmp1.ll_III_hybrid, i64 0, i64 2)
  %118 = load i32, i32* %15, align 4
  %119 = add nsw i32 %118, 2
  store i32 %119, i32* %15, align 4
  %120 = load double*, double** %9, align 8
  %121 = getelementptr inbounds double, double* %120, i64 2
  store double* %121, double** %9, align 8
  %122 = load double*, double** %12, align 8
  %123 = getelementptr inbounds double, double* %122, i64 36
  store double* %123, double** %12, align 8
  %124 = load double*, double** %13, align 8
  %125 = getelementptr inbounds double, double* %124, i64 36
  store double* %125, double** %13, align 8
  br label %89

; <label>:126:                                    ; preds = %89
  %pgocount2 = load i64, i64* getelementptr inbounds ([7 x i64], [7 x i64]* @__profc_tmp1.ll_III_hybrid, i64 0, i64 5)
  %127 = add i64 %pgocount2, 1
  store i64 %127, i64* getelementptr inbounds ([7 x i64], [7 x i64]* @__profc_tmp1.ll_III_hybrid, i64 0, i64 5)
  br label %176

; <label>:128:                                    ; preds = %82
  br label %129

; <label>:129:                                    ; preds = %164, %128
  %130 = load i32, i32* %15, align 4
  %131 = load %struct.gr_info_s*, %struct.gr_info_s** %8, align 8
  %132 = getelementptr inbounds %struct.gr_info_s, %struct.gr_info_s* %131, i32 0, i32 10
  %133 = load i32, i32* %132, align 8
  %134 = icmp ult i32 %130, %133
  br i1 %134, label %135, label %174

; <label>:135:                                    ; preds = %129
  %136 = load [18 x double]*, [18 x double]** %5, align 8
  %137 = load i32, i32* %15, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds [18 x double], [18 x double]* %136, i64 %138
  %140 = getelementptr inbounds [18 x double], [18 x double]* %139, i32 0, i32 0
  %141 = load double*, double** %12, align 8
  %142 = load double*, double** %13, align 8
  %143 = load i32, i32* %14, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds [4 x [36 x double]], [4 x [36 x double]]* @win, i64 0, i64 %144
  %146 = getelementptr inbounds [36 x double], [36 x double]* %145, i32 0, i32 0
  %147 = load double*, double** %9, align 8
  call void @dct36(double* %140, double* %141, double* %142, double* %146, double* %147)
  %148 = load [18 x double]*, [18 x double]** %5, align 8
  %149 = load i32, i32* %15, align 4
  %150 = add nsw i32 %149, 1
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds [18 x double], [18 x double]* %148, i64 %151
  %153 = getelementptr inbounds [18 x double], [18 x double]* %152, i32 0, i32 0
  %154 = load double*, double** %12, align 8
  %155 = getelementptr inbounds double, double* %154, i64 18
  %156 = load double*, double** %13, align 8
  %157 = getelementptr inbounds double, double* %156, i64 18
  %158 = load i32, i32* %14, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds [4 x [36 x double]], [4 x [36 x double]]* @win1, i64 0, i64 %159
  %161 = getelementptr inbounds [36 x double], [36 x double]* %160, i32 0, i32 0
  %162 = load double*, double** %9, align 8
  %163 = getelementptr inbounds double, double* %162, i64 1
  call void @dct36(double* %153, double* %155, double* %157, double* %161, double* %163)
  br label %164

; <label>:164:                                    ; preds = %135
  %pgocount3 = load i64, i64* getelementptr inbounds ([7 x i64], [7 x i64]* @__profc_tmp1.ll_III_hybrid, i64 0, i64 3)
  %165 = add i64 %pgocount3, 1
  store i64 %165, i64* getelementptr inbounds ([7 x i64], [7 x i64]* @__profc_tmp1.ll_III_hybrid, i64 0, i64 3)
  %166 = load i32, i32* %15, align 4
  %167 = add nsw i32 %166, 2
  store i32 %167, i32* %15, align 4
  %168 = load double*, double** %9, align 8
  %169 = getelementptr inbounds double, double* %168, i64 2
  store double* %169, double** %9, align 8
  %170 = load double*, double** %12, align 8
  %171 = getelementptr inbounds double, double* %170, i64 36
  store double* %171, double** %12, align 8
  %172 = load double*, double** %13, align 8
  %173 = getelementptr inbounds double, double* %172, i64 36
  store double* %173, double** %13, align 8
  br label %129

; <label>:174:                                    ; preds = %129
  %pgocount4 = load i64, i64* getelementptr inbounds ([7 x i64], [7 x i64]* @__profc_tmp1.ll_III_hybrid, i64 0, i64 6)
  %175 = add i64 %pgocount4, 1
  store i64 %175, i64* getelementptr inbounds ([7 x i64], [7 x i64]* @__profc_tmp1.ll_III_hybrid, i64 0, i64 6)
  br label %176

; <label>:176:                                    ; preds = %174, %126
  br label %177

; <label>:177:                                    ; preds = %200, %176
  %178 = load i32, i32* %15, align 4
  %179 = icmp slt i32 %178, 32
  br i1 %179, label %180, label %206

; <label>:180:                                    ; preds = %177
  store i32 0, i32* %17, align 4
  br label %181

; <label>:181:                                    ; preds = %195, %180
  %182 = load i32, i32* %17, align 4
  %183 = icmp slt i32 %182, 18
  br i1 %183, label %184, label %199

; <label>:184:                                    ; preds = %181
  %185 = load double*, double** %12, align 8
  %186 = getelementptr inbounds double, double* %185, i32 1
  store double* %186, double** %12, align 8
  %187 = load double, double* %185, align 8
  %188 = load double*, double** %9, align 8
  %189 = load i32, i32* %17, align 4
  %190 = mul nsw i32 %189, 32
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds double, double* %188, i64 %191
  store double %187, double* %192, align 8
  %193 = load double*, double** %13, align 8
  %194 = getelementptr inbounds double, double* %193, i32 1
  store double* %194, double** %13, align 8
  store double 0.000000e+00, double* %193, align 8
  br label %195

; <label>:195:                                    ; preds = %184
  %pgocount5 = load i64, i64* getelementptr inbounds ([7 x i64], [7 x i64]* @__profc_tmp1.ll_III_hybrid, i64 0, i64 0)
  %196 = add i64 %pgocount5, 1
  store i64 %196, i64* getelementptr inbounds ([7 x i64], [7 x i64]* @__profc_tmp1.ll_III_hybrid, i64 0, i64 0)
  %197 = load i32, i32* %17, align 4
  %198 = add nsw i32 %197, 1
  store i32 %198, i32* %17, align 4
  br label %181

; <label>:199:                                    ; preds = %181
  br label %200

; <label>:200:                                    ; preds = %199
  %pgocount6 = load i64, i64* getelementptr inbounds ([7 x i64], [7 x i64]* @__profc_tmp1.ll_III_hybrid, i64 0, i64 1)
  %201 = add i64 %pgocount6, 1
  store i64 %201, i64* getelementptr inbounds ([7 x i64], [7 x i64]* @__profc_tmp1.ll_III_hybrid, i64 0, i64 1)
  %202 = load i32, i32* %15, align 4
  %203 = add nsw i32 %202, 1
  store i32 %203, i32* %15, align 4
  %204 = load double*, double** %9, align 8
  %205 = getelementptr inbounds double, double* %204, i32 1
  store double* %205, double** %9, align 8
  br label %177

; <label>:206:                                    ; preds = %177
  ret void
}

declare i32 @synth_1to1_mono(double*, i8*, i32*) #2

declare i32 @synth_1to1(double*, i32, i8*, i32*) #2

declare i32 @getbits(i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @get1bit() #0 {
  %pgocount = load i64, i64* getelementptr inbounds ([1 x i64], [1 x i64]* @__profc_tmp1.ll_get1bit, i64 0, i64 0)
  %1 = add i64 %pgocount, 1
  store i64 %1, i64* getelementptr inbounds ([1 x i64], [1 x i64]* @__profc_tmp1.ll_get1bit, i64 0, i64 0)
  %2 = alloca i8, align 1
  %3 = load i8*, i8** @wordpointer, align 8
  %4 = load i8, i8* %3, align 1
  %5 = zext i8 %4 to i32
  %6 = load i32, i32* @bitindex, align 4
  %7 = shl i32 %5, %6
  %8 = trunc i32 %7 to i8
  store i8 %8, i8* %2, align 1
  %9 = load i32, i32* @bitindex, align 4
  %10 = add nsw i32 %9, 1
  store i32 %10, i32* @bitindex, align 4
  %11 = load i32, i32* @bitindex, align 4
  %12 = ashr i32 %11, 3
  %13 = load i8*, i8** @wordpointer, align 8
  %14 = sext i32 %12 to i64
  %15 = getelementptr inbounds i8, i8* %13, i64 %14
  store i8* %15, i8** @wordpointer, align 8
  %16 = load i32, i32* @bitindex, align 4
  %17 = and i32 %16, 7
  store i32 %17, i32* @bitindex, align 4
  %18 = load i8, i8* %2, align 1
  %19 = zext i8 %18 to i32
  %20 = ashr i32 %19, 7
  ret i32 %20
}

declare i32 @getbits_fast(i32) #2

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: noreturn nounwind
declare void @exit(i32) #3

; Function Attrs: nounwind uwtable
define internal void @dct36(double*, double*, double*, double*, double*) #0 {
  %pgocount = load i64, i64* getelementptr inbounds ([1 x i64], [1 x i64]* @__profc_tmp1.ll_dct36, i64 0, i64 0)
  %6 = add i64 %pgocount, 1
  store i64 %6, i64* getelementptr inbounds ([1 x i64], [1 x i64]* @__profc_tmp1.ll_dct36, i64 0, i64 0)
  %7 = alloca double*, align 8
  %8 = alloca double*, align 8
  %9 = alloca double*, align 8
  %10 = alloca double*, align 8
  %11 = alloca double*, align 8
  %12 = alloca double*, align 8
  %13 = alloca double*, align 8
  %14 = alloca double*, align 8
  %15 = alloca double*, align 8
  %16 = alloca double*, align 8
  %17 = alloca double*, align 8
  %18 = alloca double, align 8
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  %21 = alloca double, align 8
  %22 = alloca double, align 8
  %23 = alloca double, align 8
  %24 = alloca double, align 8
  %25 = alloca double, align 8
  %26 = alloca double, align 8
  %27 = alloca double, align 8
  %28 = alloca double, align 8
  %29 = alloca double, align 8
  %30 = alloca double, align 8
  %31 = alloca double, align 8
  %32 = alloca double, align 8
  %33 = alloca double, align 8
  %34 = alloca double, align 8
  %35 = alloca double, align 8
  %36 = alloca double, align 8
  %37 = alloca double, align 8
  %38 = alloca double, align 8
  %39 = alloca double, align 8
  %40 = alloca double, align 8
  %41 = alloca double, align 8
  %42 = alloca double, align 8
  %43 = alloca double, align 8
  %44 = alloca double, align 8
  %45 = alloca double, align 8
  %46 = alloca double, align 8
  %47 = alloca double, align 8
  %48 = alloca double, align 8
  %49 = alloca double, align 8
  %50 = alloca double, align 8
  %51 = alloca double, align 8
  %52 = alloca double, align 8
  %53 = alloca double, align 8
  %54 = alloca double, align 8
  %55 = alloca double, align 8
  %56 = alloca double, align 8
  %57 = alloca double, align 8
  %58 = alloca double, align 8
  %59 = alloca double, align 8
  %60 = alloca double, align 8
  %61 = alloca double, align 8
  %62 = alloca double, align 8
  %63 = alloca double, align 8
  %64 = alloca double, align 8
  store double* %0, double** %7, align 8
  store double* %1, double** %8, align 8
  store double* %2, double** %9, align 8
  store double* %3, double** %10, align 8
  store double* %4, double** %11, align 8
  %65 = load double*, double** %7, align 8
  store double* %65, double** %12, align 8
  %66 = load double*, double** %12, align 8
  %67 = getelementptr inbounds double, double* %66, i64 16
  %68 = load double, double* %67, align 8
  %69 = load double*, double** %12, align 8
  %70 = getelementptr inbounds double, double* %69, i64 17
  %71 = load double, double* %70, align 8
  %72 = fadd double %71, %68
  store double %72, double* %70, align 8
  %73 = load double*, double** %12, align 8
  %74 = getelementptr inbounds double, double* %73, i64 15
  %75 = load double, double* %74, align 8
  %76 = load double*, double** %12, align 8
  %77 = getelementptr inbounds double, double* %76, i64 16
  %78 = load double, double* %77, align 8
  %79 = fadd double %78, %75
  store double %79, double* %77, align 8
  %80 = load double*, double** %12, align 8
  %81 = getelementptr inbounds double, double* %80, i64 14
  %82 = load double, double* %81, align 8
  %83 = load double*, double** %12, align 8
  %84 = getelementptr inbounds double, double* %83, i64 15
  %85 = load double, double* %84, align 8
  %86 = fadd double %85, %82
  store double %86, double* %84, align 8
  %87 = load double*, double** %12, align 8
  %88 = getelementptr inbounds double, double* %87, i64 13
  %89 = load double, double* %88, align 8
  %90 = load double*, double** %12, align 8
  %91 = getelementptr inbounds double, double* %90, i64 14
  %92 = load double, double* %91, align 8
  %93 = fadd double %92, %89
  store double %93, double* %91, align 8
  %94 = load double*, double** %12, align 8
  %95 = getelementptr inbounds double, double* %94, i64 12
  %96 = load double, double* %95, align 8
  %97 = load double*, double** %12, align 8
  %98 = getelementptr inbounds double, double* %97, i64 13
  %99 = load double, double* %98, align 8
  %100 = fadd double %99, %96
  store double %100, double* %98, align 8
  %101 = load double*, double** %12, align 8
  %102 = getelementptr inbounds double, double* %101, i64 11
  %103 = load double, double* %102, align 8
  %104 = load double*, double** %12, align 8
  %105 = getelementptr inbounds double, double* %104, i64 12
  %106 = load double, double* %105, align 8
  %107 = fadd double %106, %103
  store double %107, double* %105, align 8
  %108 = load double*, double** %12, align 8
  %109 = getelementptr inbounds double, double* %108, i64 10
  %110 = load double, double* %109, align 8
  %111 = load double*, double** %12, align 8
  %112 = getelementptr inbounds double, double* %111, i64 11
  %113 = load double, double* %112, align 8
  %114 = fadd double %113, %110
  store double %114, double* %112, align 8
  %115 = load double*, double** %12, align 8
  %116 = getelementptr inbounds double, double* %115, i64 9
  %117 = load double, double* %116, align 8
  %118 = load double*, double** %12, align 8
  %119 = getelementptr inbounds double, double* %118, i64 10
  %120 = load double, double* %119, align 8
  %121 = fadd double %120, %117
  store double %121, double* %119, align 8
  %122 = load double*, double** %12, align 8
  %123 = getelementptr inbounds double, double* %122, i64 8
  %124 = load double, double* %123, align 8
  %125 = load double*, double** %12, align 8
  %126 = getelementptr inbounds double, double* %125, i64 9
  %127 = load double, double* %126, align 8
  %128 = fadd double %127, %124
  store double %128, double* %126, align 8
  %129 = load double*, double** %12, align 8
  %130 = getelementptr inbounds double, double* %129, i64 7
  %131 = load double, double* %130, align 8
  %132 = load double*, double** %12, align 8
  %133 = getelementptr inbounds double, double* %132, i64 8
  %134 = load double, double* %133, align 8
  %135 = fadd double %134, %131
  store double %135, double* %133, align 8
  %136 = load double*, double** %12, align 8
  %137 = getelementptr inbounds double, double* %136, i64 6
  %138 = load double, double* %137, align 8
  %139 = load double*, double** %12, align 8
  %140 = getelementptr inbounds double, double* %139, i64 7
  %141 = load double, double* %140, align 8
  %142 = fadd double %141, %138
  store double %142, double* %140, align 8
  %143 = load double*, double** %12, align 8
  %144 = getelementptr inbounds double, double* %143, i64 5
  %145 = load double, double* %144, align 8
  %146 = load double*, double** %12, align 8
  %147 = getelementptr inbounds double, double* %146, i64 6
  %148 = load double, double* %147, align 8
  %149 = fadd double %148, %145
  store double %149, double* %147, align 8
  %150 = load double*, double** %12, align 8
  %151 = getelementptr inbounds double, double* %150, i64 4
  %152 = load double, double* %151, align 8
  %153 = load double*, double** %12, align 8
  %154 = getelementptr inbounds double, double* %153, i64 5
  %155 = load double, double* %154, align 8
  %156 = fadd double %155, %152
  store double %156, double* %154, align 8
  %157 = load double*, double** %12, align 8
  %158 = getelementptr inbounds double, double* %157, i64 3
  %159 = load double, double* %158, align 8
  %160 = load double*, double** %12, align 8
  %161 = getelementptr inbounds double, double* %160, i64 4
  %162 = load double, double* %161, align 8
  %163 = fadd double %162, %159
  store double %163, double* %161, align 8
  %164 = load double*, double** %12, align 8
  %165 = getelementptr inbounds double, double* %164, i64 2
  %166 = load double, double* %165, align 8
  %167 = load double*, double** %12, align 8
  %168 = getelementptr inbounds double, double* %167, i64 3
  %169 = load double, double* %168, align 8
  %170 = fadd double %169, %166
  store double %170, double* %168, align 8
  %171 = load double*, double** %12, align 8
  %172 = getelementptr inbounds double, double* %171, i64 1
  %173 = load double, double* %172, align 8
  %174 = load double*, double** %12, align 8
  %175 = getelementptr inbounds double, double* %174, i64 2
  %176 = load double, double* %175, align 8
  %177 = fadd double %176, %173
  store double %177, double* %175, align 8
  %178 = load double*, double** %12, align 8
  %179 = getelementptr inbounds double, double* %178, i64 0
  %180 = load double, double* %179, align 8
  %181 = load double*, double** %12, align 8
  %182 = getelementptr inbounds double, double* %181, i64 1
  %183 = load double, double* %182, align 8
  %184 = fadd double %183, %180
  store double %184, double* %182, align 8
  %185 = load double*, double** %12, align 8
  %186 = getelementptr inbounds double, double* %185, i64 15
  %187 = load double, double* %186, align 8
  %188 = load double*, double** %12, align 8
  %189 = getelementptr inbounds double, double* %188, i64 17
  %190 = load double, double* %189, align 8
  %191 = fadd double %190, %187
  store double %191, double* %189, align 8
  %192 = load double*, double** %12, align 8
  %193 = getelementptr inbounds double, double* %192, i64 13
  %194 = load double, double* %193, align 8
  %195 = load double*, double** %12, align 8
  %196 = getelementptr inbounds double, double* %195, i64 15
  %197 = load double, double* %196, align 8
  %198 = fadd double %197, %194
  store double %198, double* %196, align 8
  %199 = load double*, double** %12, align 8
  %200 = getelementptr inbounds double, double* %199, i64 11
  %201 = load double, double* %200, align 8
  %202 = load double*, double** %12, align 8
  %203 = getelementptr inbounds double, double* %202, i64 13
  %204 = load double, double* %203, align 8
  %205 = fadd double %204, %201
  store double %205, double* %203, align 8
  %206 = load double*, double** %12, align 8
  %207 = getelementptr inbounds double, double* %206, i64 9
  %208 = load double, double* %207, align 8
  %209 = load double*, double** %12, align 8
  %210 = getelementptr inbounds double, double* %209, i64 11
  %211 = load double, double* %210, align 8
  %212 = fadd double %211, %208
  store double %212, double* %210, align 8
  %213 = load double*, double** %12, align 8
  %214 = getelementptr inbounds double, double* %213, i64 7
  %215 = load double, double* %214, align 8
  %216 = load double*, double** %12, align 8
  %217 = getelementptr inbounds double, double* %216, i64 9
  %218 = load double, double* %217, align 8
  %219 = fadd double %218, %215
  store double %219, double* %217, align 8
  %220 = load double*, double** %12, align 8
  %221 = getelementptr inbounds double, double* %220, i64 5
  %222 = load double, double* %221, align 8
  %223 = load double*, double** %12, align 8
  %224 = getelementptr inbounds double, double* %223, i64 7
  %225 = load double, double* %224, align 8
  %226 = fadd double %225, %222
  store double %226, double* %224, align 8
  %227 = load double*, double** %12, align 8
  %228 = getelementptr inbounds double, double* %227, i64 3
  %229 = load double, double* %228, align 8
  %230 = load double*, double** %12, align 8
  %231 = getelementptr inbounds double, double* %230, i64 5
  %232 = load double, double* %231, align 8
  %233 = fadd double %232, %229
  store double %233, double* %231, align 8
  %234 = load double*, double** %12, align 8
  %235 = getelementptr inbounds double, double* %234, i64 1
  %236 = load double, double* %235, align 8
  %237 = load double*, double** %12, align 8
  %238 = getelementptr inbounds double, double* %237, i64 3
  %239 = load double, double* %238, align 8
  %240 = fadd double %239, %236
  store double %240, double* %238, align 8
  store double* getelementptr inbounds ([9 x double], [9 x double]* @COS9, i32 0, i32 0), double** %13, align 8
  %241 = load double*, double** %9, align 8
  store double* %241, double** %14, align 8
  %242 = load double*, double** %10, align 8
  store double* %242, double** %15, align 8
  %243 = load double*, double** %8, align 8
  store double* %243, double** %16, align 8
  %244 = load double*, double** %11, align 8
  store double* %244, double** %17, align 8
  %245 = load double*, double** %12, align 8
  %246 = getelementptr inbounds double, double* %245, i64 6
  %247 = load double, double* %246, align 8
  %248 = load double*, double** %13, align 8
  %249 = getelementptr inbounds double, double* %248, i64 3
  %250 = load double, double* %249, align 8
  %251 = fmul double %247, %250
  store double %251, double* %18, align 8
  %252 = load double*, double** %12, align 8
  %253 = getelementptr inbounds double, double* %252, i64 12
  %254 = load double, double* %253, align 8
  %255 = load double*, double** %13, align 8
  %256 = getelementptr inbounds double, double* %255, i64 6
  %257 = load double, double* %256, align 8
  %258 = fmul double %254, %257
  store double %258, double* %19, align 8
  %259 = load double*, double** %12, align 8
  %260 = getelementptr inbounds double, double* %259, i64 7
  %261 = load double, double* %260, align 8
  %262 = load double*, double** %13, align 8
  %263 = getelementptr inbounds double, double* %262, i64 3
  %264 = load double, double* %263, align 8
  %265 = fmul double %261, %264
  store double %265, double* %20, align 8
  %266 = load double*, double** %12, align 8
  %267 = getelementptr inbounds double, double* %266, i64 13
  %268 = load double, double* %267, align 8
  %269 = load double*, double** %13, align 8
  %270 = getelementptr inbounds double, double* %269, i64 6
  %271 = load double, double* %270, align 8
  %272 = fmul double %268, %271
  store double %272, double* %21, align 8
  %273 = load double*, double** %12, align 8
  %274 = getelementptr inbounds double, double* %273, i64 2
  %275 = load double, double* %274, align 8
  %276 = load double*, double** %13, align 8
  %277 = getelementptr inbounds double, double* %276, i64 1
  %278 = load double, double* %277, align 8
  %279 = fmul double %275, %278
  %280 = load double, double* %18, align 8
  %281 = fadd double %279, %280
  %282 = load double*, double** %12, align 8
  %283 = getelementptr inbounds double, double* %282, i64 10
  %284 = load double, double* %283, align 8
  %285 = load double*, double** %13, align 8
  %286 = getelementptr inbounds double, double* %285, i64 5
  %287 = load double, double* %286, align 8
  %288 = fmul double %284, %287
  %289 = fadd double %281, %288
  %290 = load double*, double** %12, align 8
  %291 = getelementptr inbounds double, double* %290, i64 14
  %292 = load double, double* %291, align 8
  %293 = load double*, double** %13, align 8
  %294 = getelementptr inbounds double, double* %293, i64 7
  %295 = load double, double* %294, align 8
  %296 = fmul double %292, %295
  %297 = fadd double %289, %296
  store double %297, double* %22, align 8
  %298 = load double*, double** %12, align 8
  %299 = getelementptr inbounds double, double* %298, i64 3
  %300 = load double, double* %299, align 8
  %301 = load double*, double** %13, align 8
  %302 = getelementptr inbounds double, double* %301, i64 1
  %303 = load double, double* %302, align 8
  %304 = fmul double %300, %303
  %305 = load double, double* %20, align 8
  %306 = fadd double %304, %305
  %307 = load double*, double** %12, align 8
  %308 = getelementptr inbounds double, double* %307, i64 11
  %309 = load double, double* %308, align 8
  %310 = load double*, double** %13, align 8
  %311 = getelementptr inbounds double, double* %310, i64 5
  %312 = load double, double* %311, align 8
  %313 = fmul double %309, %312
  %314 = fadd double %306, %313
  %315 = load double*, double** %12, align 8
  %316 = getelementptr inbounds double, double* %315, i64 15
  %317 = load double, double* %316, align 8
  %318 = load double*, double** %13, align 8
  %319 = getelementptr inbounds double, double* %318, i64 7
  %320 = load double, double* %319, align 8
  %321 = fmul double %317, %320
  %322 = fadd double %314, %321
  store double %322, double* %24, align 8
  %323 = load double*, double** %12, align 8
  %324 = getelementptr inbounds double, double* %323, i64 0
  %325 = load double, double* %324, align 8
  %326 = load double*, double** %12, align 8
  %327 = getelementptr inbounds double, double* %326, i64 4
  %328 = load double, double* %327, align 8
  %329 = load double*, double** %13, align 8
  %330 = getelementptr inbounds double, double* %329, i64 2
  %331 = load double, double* %330, align 8
  %332 = fmul double %328, %331
  %333 = fadd double %325, %332
  %334 = load double*, double** %12, align 8
  %335 = getelementptr inbounds double, double* %334, i64 8
  %336 = load double, double* %335, align 8
  %337 = load double*, double** %13, align 8
  %338 = getelementptr inbounds double, double* %337, i64 4
  %339 = load double, double* %338, align 8
  %340 = fmul double %336, %339
  %341 = fadd double %333, %340
  %342 = load double, double* %19, align 8
  %343 = fadd double %341, %342
  %344 = load double*, double** %12, align 8
  %345 = getelementptr inbounds double, double* %344, i64 16
  %346 = load double, double* %345, align 8
  %347 = load double*, double** %13, align 8
  %348 = getelementptr inbounds double, double* %347, i64 8
  %349 = load double, double* %348, align 8
  %350 = fmul double %346, %349
  %351 = fadd double %343, %350
  store double %351, double* %23, align 8
  %352 = load double*, double** %12, align 8
  %353 = getelementptr inbounds double, double* %352, i64 1
  %354 = load double, double* %353, align 8
  %355 = load double*, double** %12, align 8
  %356 = getelementptr inbounds double, double* %355, i64 5
  %357 = load double, double* %356, align 8
  %358 = load double*, double** %13, align 8
  %359 = getelementptr inbounds double, double* %358, i64 2
  %360 = load double, double* %359, align 8
  %361 = fmul double %357, %360
  %362 = fadd double %354, %361
  %363 = load double*, double** %12, align 8
  %364 = getelementptr inbounds double, double* %363, i64 9
  %365 = load double, double* %364, align 8
  %366 = load double*, double** %13, align 8
  %367 = getelementptr inbounds double, double* %366, i64 4
  %368 = load double, double* %367, align 8
  %369 = fmul double %365, %368
  %370 = fadd double %362, %369
  %371 = load double, double* %21, align 8
  %372 = fadd double %370, %371
  %373 = load double*, double** %12, align 8
  %374 = getelementptr inbounds double, double* %373, i64 17
  %375 = load double, double* %374, align 8
  %376 = load double*, double** %13, align 8
  %377 = getelementptr inbounds double, double* %376, i64 8
  %378 = load double, double* %377, align 8
  %379 = fmul double %375, %378
  %380 = fadd double %372, %379
  store double %380, double* %25, align 8
  %381 = load double, double* %22, align 8
  %382 = load double, double* %23, align 8
  %383 = fadd double %381, %382
  store double %383, double* %26, align 8
  %384 = load double, double* %24, align 8
  %385 = load double, double* %25, align 8
  %386 = fadd double %384, %385
  %387 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @tfcos36, i64 0, i64 0), align 16
  %388 = fmul double %386, %387
  store double %388, double* %27, align 8
  %389 = load double, double* %26, align 8
  %390 = load double, double* %27, align 8
  %391 = fadd double %389, %390
  store double %391, double* %28, align 8
  %392 = load double*, double** %15, align 8
  %393 = getelementptr inbounds double, double* %392, i64 27
  %394 = load double, double* %393, align 8
  %395 = fmul double %391, %394
  %396 = load double*, double** %14, align 8
  %397 = getelementptr inbounds double, double* %396, i64 9
  store double %395, double* %397, align 8
  %398 = load double, double* %28, align 8
  %399 = load double*, double** %15, align 8
  %400 = getelementptr inbounds double, double* %399, i64 26
  %401 = load double, double* %400, align 8
  %402 = fmul double %398, %401
  %403 = load double*, double** %14, align 8
  %404 = getelementptr inbounds double, double* %403, i64 8
  store double %402, double* %404, align 8
  %405 = load double, double* %27, align 8
  %406 = load double, double* %26, align 8
  %407 = fsub double %406, %405
  store double %407, double* %26, align 8
  %408 = load double*, double** %16, align 8
  %409 = getelementptr inbounds double, double* %408, i64 8
  %410 = load double, double* %409, align 8
  %411 = load double, double* %26, align 8
  %412 = load double*, double** %15, align 8
  %413 = getelementptr inbounds double, double* %412, i64 8
  %414 = load double, double* %413, align 8
  %415 = fmul double %411, %414
  %416 = fadd double %410, %415
  %417 = load double*, double** %17, align 8
  %418 = getelementptr inbounds double, double* %417, i64 256
  store double %416, double* %418, align 8
  %419 = load double*, double** %16, align 8
  %420 = getelementptr inbounds double, double* %419, i64 9
  %421 = load double, double* %420, align 8
  %422 = load double, double* %26, align 8
  %423 = load double*, double** %15, align 8
  %424 = getelementptr inbounds double, double* %423, i64 9
  %425 = load double, double* %424, align 8
  %426 = fmul double %422, %425
  %427 = fadd double %421, %426
  %428 = load double*, double** %17, align 8
  %429 = getelementptr inbounds double, double* %428, i64 288
  store double %427, double* %429, align 8
  %430 = load double, double* %23, align 8
  %431 = load double, double* %22, align 8
  %432 = fsub double %430, %431
  store double %432, double* %29, align 8
  %433 = load double, double* %25, align 8
  %434 = load double, double* %24, align 8
  %435 = fsub double %433, %434
  %436 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @tfcos36, i64 0, i64 8), align 16
  %437 = fmul double %435, %436
  store double %437, double* %30, align 8
  %438 = load double, double* %29, align 8
  %439 = load double, double* %30, align 8
  %440 = fadd double %438, %439
  store double %440, double* %31, align 8
  %441 = load double*, double** %15, align 8
  %442 = getelementptr inbounds double, double* %441, i64 35
  %443 = load double, double* %442, align 8
  %444 = fmul double %440, %443
  %445 = load double*, double** %14, align 8
  %446 = getelementptr inbounds double, double* %445, i64 17
  store double %444, double* %446, align 8
  %447 = load double, double* %31, align 8
  %448 = load double*, double** %15, align 8
  %449 = getelementptr inbounds double, double* %448, i64 18
  %450 = load double, double* %449, align 8
  %451 = fmul double %447, %450
  %452 = load double*, double** %14, align 8
  %453 = getelementptr inbounds double, double* %452, i64 0
  store double %451, double* %453, align 8
  %454 = load double, double* %30, align 8
  %455 = load double, double* %29, align 8
  %456 = fsub double %455, %454
  store double %456, double* %29, align 8
  %457 = load double*, double** %16, align 8
  %458 = getelementptr inbounds double, double* %457, i64 0
  %459 = load double, double* %458, align 8
  %460 = load double, double* %29, align 8
  %461 = load double*, double** %15, align 8
  %462 = getelementptr inbounds double, double* %461, i64 0
  %463 = load double, double* %462, align 8
  %464 = fmul double %460, %463
  %465 = fadd double %459, %464
  %466 = load double*, double** %17, align 8
  %467 = getelementptr inbounds double, double* %466, i64 0
  store double %465, double* %467, align 8
  %468 = load double*, double** %16, align 8
  %469 = getelementptr inbounds double, double* %468, i64 17
  %470 = load double, double* %469, align 8
  %471 = load double, double* %29, align 8
  %472 = load double*, double** %15, align 8
  %473 = getelementptr inbounds double, double* %472, i64 17
  %474 = load double, double* %473, align 8
  %475 = fmul double %471, %474
  %476 = fadd double %470, %475
  %477 = load double*, double** %17, align 8
  %478 = getelementptr inbounds double, double* %477, i64 544
  store double %476, double* %478, align 8
  %479 = load double*, double** %12, align 8
  %480 = getelementptr inbounds double, double* %479, i64 2
  %481 = load double, double* %480, align 8
  %482 = load double*, double** %12, align 8
  %483 = getelementptr inbounds double, double* %482, i64 10
  %484 = load double, double* %483, align 8
  %485 = fsub double %481, %484
  %486 = load double*, double** %12, align 8
  %487 = getelementptr inbounds double, double* %486, i64 14
  %488 = load double, double* %487, align 8
  %489 = fsub double %485, %488
  %490 = load double*, double** %13, align 8
  %491 = getelementptr inbounds double, double* %490, i64 3
  %492 = load double, double* %491, align 8
  %493 = fmul double %489, %492
  store double %493, double* %32, align 8
  %494 = load double*, double** %12, align 8
  %495 = getelementptr inbounds double, double* %494, i64 3
  %496 = load double, double* %495, align 8
  %497 = load double*, double** %12, align 8
  %498 = getelementptr inbounds double, double* %497, i64 11
  %499 = load double, double* %498, align 8
  %500 = fsub double %496, %499
  %501 = load double*, double** %12, align 8
  %502 = getelementptr inbounds double, double* %501, i64 15
  %503 = load double, double* %502, align 8
  %504 = fsub double %500, %503
  %505 = load double*, double** %13, align 8
  %506 = getelementptr inbounds double, double* %505, i64 3
  %507 = load double, double* %506, align 8
  %508 = fmul double %504, %507
  store double %508, double* %34, align 8
  %509 = load double*, double** %12, align 8
  %510 = getelementptr inbounds double, double* %509, i64 4
  %511 = load double, double* %510, align 8
  %512 = load double*, double** %12, align 8
  %513 = getelementptr inbounds double, double* %512, i64 8
  %514 = load double, double* %513, align 8
  %515 = fsub double %511, %514
  %516 = load double*, double** %12, align 8
  %517 = getelementptr inbounds double, double* %516, i64 16
  %518 = load double, double* %517, align 8
  %519 = fsub double %515, %518
  %520 = load double*, double** %13, align 8
  %521 = getelementptr inbounds double, double* %520, i64 6
  %522 = load double, double* %521, align 8
  %523 = fmul double %519, %522
  %524 = load double*, double** %12, align 8
  %525 = getelementptr inbounds double, double* %524, i64 12
  %526 = load double, double* %525, align 8
  %527 = fsub double %523, %526
  %528 = load double*, double** %12, align 8
  %529 = getelementptr inbounds double, double* %528, i64 0
  %530 = load double, double* %529, align 8
  %531 = fadd double %527, %530
  store double %531, double* %33, align 8
  %532 = load double*, double** %12, align 8
  %533 = getelementptr inbounds double, double* %532, i64 5
  %534 = load double, double* %533, align 8
  %535 = load double*, double** %12, align 8
  %536 = getelementptr inbounds double, double* %535, i64 9
  %537 = load double, double* %536, align 8
  %538 = fsub double %534, %537
  %539 = load double*, double** %12, align 8
  %540 = getelementptr inbounds double, double* %539, i64 17
  %541 = load double, double* %540, align 8
  %542 = fsub double %538, %541
  %543 = load double*, double** %13, align 8
  %544 = getelementptr inbounds double, double* %543, i64 6
  %545 = load double, double* %544, align 8
  %546 = fmul double %542, %545
  %547 = load double*, double** %12, align 8
  %548 = getelementptr inbounds double, double* %547, i64 13
  %549 = load double, double* %548, align 8
  %550 = fsub double %546, %549
  %551 = load double*, double** %12, align 8
  %552 = getelementptr inbounds double, double* %551, i64 1
  %553 = load double, double* %552, align 8
  %554 = fadd double %550, %553
  store double %554, double* %35, align 8
  %555 = load double, double* %32, align 8
  %556 = load double, double* %33, align 8
  %557 = fadd double %555, %556
  store double %557, double* %36, align 8
  %558 = load double, double* %34, align 8
  %559 = load double, double* %35, align 8
  %560 = fadd double %558, %559
  %561 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @tfcos36, i64 0, i64 1), align 8
  %562 = fmul double %560, %561
  store double %562, double* %37, align 8
  %563 = load double, double* %36, align 8
  %564 = load double, double* %37, align 8
  %565 = fadd double %563, %564
  store double %565, double* %38, align 8
  %566 = load double*, double** %15, align 8
  %567 = getelementptr inbounds double, double* %566, i64 28
  %568 = load double, double* %567, align 8
  %569 = fmul double %565, %568
  %570 = load double*, double** %14, align 8
  %571 = getelementptr inbounds double, double* %570, i64 10
  store double %569, double* %571, align 8
  %572 = load double, double* %38, align 8
  %573 = load double*, double** %15, align 8
  %574 = getelementptr inbounds double, double* %573, i64 25
  %575 = load double, double* %574, align 8
  %576 = fmul double %572, %575
  %577 = load double*, double** %14, align 8
  %578 = getelementptr inbounds double, double* %577, i64 7
  store double %576, double* %578, align 8
  %579 = load double, double* %37, align 8
  %580 = load double, double* %36, align 8
  %581 = fsub double %580, %579
  store double %581, double* %36, align 8
  %582 = load double*, double** %16, align 8
  %583 = getelementptr inbounds double, double* %582, i64 7
  %584 = load double, double* %583, align 8
  %585 = load double, double* %36, align 8
  %586 = load double*, double** %15, align 8
  %587 = getelementptr inbounds double, double* %586, i64 7
  %588 = load double, double* %587, align 8
  %589 = fmul double %585, %588
  %590 = fadd double %584, %589
  %591 = load double*, double** %17, align 8
  %592 = getelementptr inbounds double, double* %591, i64 224
  store double %590, double* %592, align 8
  %593 = load double*, double** %16, align 8
  %594 = getelementptr inbounds double, double* %593, i64 10
  %595 = load double, double* %594, align 8
  %596 = load double, double* %36, align 8
  %597 = load double*, double** %15, align 8
  %598 = getelementptr inbounds double, double* %597, i64 10
  %599 = load double, double* %598, align 8
  %600 = fmul double %596, %599
  %601 = fadd double %595, %600
  %602 = load double*, double** %17, align 8
  %603 = getelementptr inbounds double, double* %602, i64 320
  store double %601, double* %603, align 8
  %604 = load double, double* %33, align 8
  %605 = load double, double* %32, align 8
  %606 = fsub double %604, %605
  store double %606, double* %39, align 8
  %607 = load double, double* %35, align 8
  %608 = load double, double* %34, align 8
  %609 = fsub double %607, %608
  %610 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @tfcos36, i64 0, i64 7), align 8
  %611 = fmul double %609, %610
  store double %611, double* %40, align 8
  %612 = load double, double* %39, align 8
  %613 = load double, double* %40, align 8
  %614 = fadd double %612, %613
  store double %614, double* %41, align 8
  %615 = load double*, double** %15, align 8
  %616 = getelementptr inbounds double, double* %615, i64 34
  %617 = load double, double* %616, align 8
  %618 = fmul double %614, %617
  %619 = load double*, double** %14, align 8
  %620 = getelementptr inbounds double, double* %619, i64 16
  store double %618, double* %620, align 8
  %621 = load double, double* %41, align 8
  %622 = load double*, double** %15, align 8
  %623 = getelementptr inbounds double, double* %622, i64 19
  %624 = load double, double* %623, align 8
  %625 = fmul double %621, %624
  %626 = load double*, double** %14, align 8
  %627 = getelementptr inbounds double, double* %626, i64 1
  store double %625, double* %627, align 8
  %628 = load double, double* %40, align 8
  %629 = load double, double* %39, align 8
  %630 = fsub double %629, %628
  store double %630, double* %39, align 8
  %631 = load double*, double** %16, align 8
  %632 = getelementptr inbounds double, double* %631, i64 1
  %633 = load double, double* %632, align 8
  %634 = load double, double* %39, align 8
  %635 = load double*, double** %15, align 8
  %636 = getelementptr inbounds double, double* %635, i64 1
  %637 = load double, double* %636, align 8
  %638 = fmul double %634, %637
  %639 = fadd double %633, %638
  %640 = load double*, double** %17, align 8
  %641 = getelementptr inbounds double, double* %640, i64 32
  store double %639, double* %641, align 8
  %642 = load double*, double** %16, align 8
  %643 = getelementptr inbounds double, double* %642, i64 16
  %644 = load double, double* %643, align 8
  %645 = load double, double* %39, align 8
  %646 = load double*, double** %15, align 8
  %647 = getelementptr inbounds double, double* %646, i64 16
  %648 = load double, double* %647, align 8
  %649 = fmul double %645, %648
  %650 = fadd double %644, %649
  %651 = load double*, double** %17, align 8
  %652 = getelementptr inbounds double, double* %651, i64 512
  store double %650, double* %652, align 8
  %653 = load double*, double** %12, align 8
  %654 = getelementptr inbounds double, double* %653, i64 2
  %655 = load double, double* %654, align 8
  %656 = load double*, double** %13, align 8
  %657 = getelementptr inbounds double, double* %656, i64 5
  %658 = load double, double* %657, align 8
  %659 = fmul double %655, %658
  %660 = load double, double* %18, align 8
  %661 = fsub double %659, %660
  %662 = load double*, double** %12, align 8
  %663 = getelementptr inbounds double, double* %662, i64 10
  %664 = load double, double* %663, align 8
  %665 = load double*, double** %13, align 8
  %666 = getelementptr inbounds double, double* %665, i64 7
  %667 = load double, double* %666, align 8
  %668 = fmul double %664, %667
  %669 = fsub double %661, %668
  %670 = load double*, double** %12, align 8
  %671 = getelementptr inbounds double, double* %670, i64 14
  %672 = load double, double* %671, align 8
  %673 = load double*, double** %13, align 8
  %674 = getelementptr inbounds double, double* %673, i64 1
  %675 = load double, double* %674, align 8
  %676 = fmul double %672, %675
  %677 = fadd double %669, %676
  store double %677, double* %42, align 8
  %678 = load double*, double** %12, align 8
  %679 = getelementptr inbounds double, double* %678, i64 3
  %680 = load double, double* %679, align 8
  %681 = load double*, double** %13, align 8
  %682 = getelementptr inbounds double, double* %681, i64 5
  %683 = load double, double* %682, align 8
  %684 = fmul double %680, %683
  %685 = load double, double* %20, align 8
  %686 = fsub double %684, %685
  %687 = load double*, double** %12, align 8
  %688 = getelementptr inbounds double, double* %687, i64 11
  %689 = load double, double* %688, align 8
  %690 = load double*, double** %13, align 8
  %691 = getelementptr inbounds double, double* %690, i64 7
  %692 = load double, double* %691, align 8
  %693 = fmul double %689, %692
  %694 = fsub double %686, %693
  %695 = load double*, double** %12, align 8
  %696 = getelementptr inbounds double, double* %695, i64 15
  %697 = load double, double* %696, align 8
  %698 = load double*, double** %13, align 8
  %699 = getelementptr inbounds double, double* %698, i64 1
  %700 = load double, double* %699, align 8
  %701 = fmul double %697, %700
  %702 = fadd double %694, %701
  store double %702, double* %44, align 8
  %703 = load double*, double** %12, align 8
  %704 = getelementptr inbounds double, double* %703, i64 0
  %705 = load double, double* %704, align 8
  %706 = load double*, double** %12, align 8
  %707 = getelementptr inbounds double, double* %706, i64 4
  %708 = load double, double* %707, align 8
  %709 = load double*, double** %13, align 8
  %710 = getelementptr inbounds double, double* %709, i64 8
  %711 = load double, double* %710, align 8
  %712 = fmul double %708, %711
  %713 = fsub double %705, %712
  %714 = load double*, double** %12, align 8
  %715 = getelementptr inbounds double, double* %714, i64 8
  %716 = load double, double* %715, align 8
  %717 = load double*, double** %13, align 8
  %718 = getelementptr inbounds double, double* %717, i64 2
  %719 = load double, double* %718, align 8
  %720 = fmul double %716, %719
  %721 = fsub double %713, %720
  %722 = load double, double* %19, align 8
  %723 = fadd double %721, %722
  %724 = load double*, double** %12, align 8
  %725 = getelementptr inbounds double, double* %724, i64 16
  %726 = load double, double* %725, align 8
  %727 = load double*, double** %13, align 8
  %728 = getelementptr inbounds double, double* %727, i64 4
  %729 = load double, double* %728, align 8
  %730 = fmul double %726, %729
  %731 = fadd double %723, %730
  store double %731, double* %43, align 8
  %732 = load double*, double** %12, align 8
  %733 = getelementptr inbounds double, double* %732, i64 1
  %734 = load double, double* %733, align 8
  %735 = load double*, double** %12, align 8
  %736 = getelementptr inbounds double, double* %735, i64 5
  %737 = load double, double* %736, align 8
  %738 = load double*, double** %13, align 8
  %739 = getelementptr inbounds double, double* %738, i64 8
  %740 = load double, double* %739, align 8
  %741 = fmul double %737, %740
  %742 = fsub double %734, %741
  %743 = load double*, double** %12, align 8
  %744 = getelementptr inbounds double, double* %743, i64 9
  %745 = load double, double* %744, align 8
  %746 = load double*, double** %13, align 8
  %747 = getelementptr inbounds double, double* %746, i64 2
  %748 = load double, double* %747, align 8
  %749 = fmul double %745, %748
  %750 = fsub double %742, %749
  %751 = load double, double* %21, align 8
  %752 = fadd double %750, %751
  %753 = load double*, double** %12, align 8
  %754 = getelementptr inbounds double, double* %753, i64 17
  %755 = load double, double* %754, align 8
  %756 = load double*, double** %13, align 8
  %757 = getelementptr inbounds double, double* %756, i64 4
  %758 = load double, double* %757, align 8
  %759 = fmul double %755, %758
  %760 = fadd double %752, %759
  store double %760, double* %45, align 8
  %761 = load double, double* %42, align 8
  %762 = load double, double* %43, align 8
  %763 = fadd double %761, %762
  store double %763, double* %46, align 8
  %764 = load double, double* %44, align 8
  %765 = load double, double* %45, align 8
  %766 = fadd double %764, %765
  %767 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @tfcos36, i64 0, i64 2), align 16
  %768 = fmul double %766, %767
  store double %768, double* %47, align 8
  %769 = load double, double* %46, align 8
  %770 = load double, double* %47, align 8
  %771 = fadd double %769, %770
  store double %771, double* %48, align 8
  %772 = load double*, double** %15, align 8
  %773 = getelementptr inbounds double, double* %772, i64 29
  %774 = load double, double* %773, align 8
  %775 = fmul double %771, %774
  %776 = load double*, double** %14, align 8
  %777 = getelementptr inbounds double, double* %776, i64 11
  store double %775, double* %777, align 8
  %778 = load double, double* %48, align 8
  %779 = load double*, double** %15, align 8
  %780 = getelementptr inbounds double, double* %779, i64 24
  %781 = load double, double* %780, align 8
  %782 = fmul double %778, %781
  %783 = load double*, double** %14, align 8
  %784 = getelementptr inbounds double, double* %783, i64 6
  store double %782, double* %784, align 8
  %785 = load double, double* %47, align 8
  %786 = load double, double* %46, align 8
  %787 = fsub double %786, %785
  store double %787, double* %46, align 8
  %788 = load double*, double** %16, align 8
  %789 = getelementptr inbounds double, double* %788, i64 6
  %790 = load double, double* %789, align 8
  %791 = load double, double* %46, align 8
  %792 = load double*, double** %15, align 8
  %793 = getelementptr inbounds double, double* %792, i64 6
  %794 = load double, double* %793, align 8
  %795 = fmul double %791, %794
  %796 = fadd double %790, %795
  %797 = load double*, double** %17, align 8
  %798 = getelementptr inbounds double, double* %797, i64 192
  store double %796, double* %798, align 8
  %799 = load double*, double** %16, align 8
  %800 = getelementptr inbounds double, double* %799, i64 11
  %801 = load double, double* %800, align 8
  %802 = load double, double* %46, align 8
  %803 = load double*, double** %15, align 8
  %804 = getelementptr inbounds double, double* %803, i64 11
  %805 = load double, double* %804, align 8
  %806 = fmul double %802, %805
  %807 = fadd double %801, %806
  %808 = load double*, double** %17, align 8
  %809 = getelementptr inbounds double, double* %808, i64 352
  store double %807, double* %809, align 8
  %810 = load double, double* %43, align 8
  %811 = load double, double* %42, align 8
  %812 = fsub double %810, %811
  store double %812, double* %49, align 8
  %813 = load double, double* %45, align 8
  %814 = load double, double* %44, align 8
  %815 = fsub double %813, %814
  %816 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @tfcos36, i64 0, i64 6), align 16
  %817 = fmul double %815, %816
  store double %817, double* %50, align 8
  %818 = load double, double* %49, align 8
  %819 = load double, double* %50, align 8
  %820 = fadd double %818, %819
  store double %820, double* %51, align 8
  %821 = load double*, double** %15, align 8
  %822 = getelementptr inbounds double, double* %821, i64 33
  %823 = load double, double* %822, align 8
  %824 = fmul double %820, %823
  %825 = load double*, double** %14, align 8
  %826 = getelementptr inbounds double, double* %825, i64 15
  store double %824, double* %826, align 8
  %827 = load double, double* %51, align 8
  %828 = load double*, double** %15, align 8
  %829 = getelementptr inbounds double, double* %828, i64 20
  %830 = load double, double* %829, align 8
  %831 = fmul double %827, %830
  %832 = load double*, double** %14, align 8
  %833 = getelementptr inbounds double, double* %832, i64 2
  store double %831, double* %833, align 8
  %834 = load double, double* %50, align 8
  %835 = load double, double* %49, align 8
  %836 = fsub double %835, %834
  store double %836, double* %49, align 8
  %837 = load double*, double** %16, align 8
  %838 = getelementptr inbounds double, double* %837, i64 2
  %839 = load double, double* %838, align 8
  %840 = load double, double* %49, align 8
  %841 = load double*, double** %15, align 8
  %842 = getelementptr inbounds double, double* %841, i64 2
  %843 = load double, double* %842, align 8
  %844 = fmul double %840, %843
  %845 = fadd double %839, %844
  %846 = load double*, double** %17, align 8
  %847 = getelementptr inbounds double, double* %846, i64 64
  store double %845, double* %847, align 8
  %848 = load double*, double** %16, align 8
  %849 = getelementptr inbounds double, double* %848, i64 15
  %850 = load double, double* %849, align 8
  %851 = load double, double* %49, align 8
  %852 = load double*, double** %15, align 8
  %853 = getelementptr inbounds double, double* %852, i64 15
  %854 = load double, double* %853, align 8
  %855 = fmul double %851, %854
  %856 = fadd double %850, %855
  %857 = load double*, double** %17, align 8
  %858 = getelementptr inbounds double, double* %857, i64 480
  store double %856, double* %858, align 8
  %859 = load double*, double** %12, align 8
  %860 = getelementptr inbounds double, double* %859, i64 2
  %861 = load double, double* %860, align 8
  %862 = load double*, double** %13, align 8
  %863 = getelementptr inbounds double, double* %862, i64 7
  %864 = load double, double* %863, align 8
  %865 = fmul double %861, %864
  %866 = load double, double* %18, align 8
  %867 = fsub double %865, %866
  %868 = load double*, double** %12, align 8
  %869 = getelementptr inbounds double, double* %868, i64 10
  %870 = load double, double* %869, align 8
  %871 = load double*, double** %13, align 8
  %872 = getelementptr inbounds double, double* %871, i64 1
  %873 = load double, double* %872, align 8
  %874 = fmul double %870, %873
  %875 = fadd double %867, %874
  %876 = load double*, double** %12, align 8
  %877 = getelementptr inbounds double, double* %876, i64 14
  %878 = load double, double* %877, align 8
  %879 = load double*, double** %13, align 8
  %880 = getelementptr inbounds double, double* %879, i64 5
  %881 = load double, double* %880, align 8
  %882 = fmul double %878, %881
  %883 = fsub double %875, %882
  store double %883, double* %52, align 8
  %884 = load double*, double** %12, align 8
  %885 = getelementptr inbounds double, double* %884, i64 3
  %886 = load double, double* %885, align 8
  %887 = load double*, double** %13, align 8
  %888 = getelementptr inbounds double, double* %887, i64 7
  %889 = load double, double* %888, align 8
  %890 = fmul double %886, %889
  %891 = load double, double* %20, align 8
  %892 = fsub double %890, %891
  %893 = load double*, double** %12, align 8
  %894 = getelementptr inbounds double, double* %893, i64 11
  %895 = load double, double* %894, align 8
  %896 = load double*, double** %13, align 8
  %897 = getelementptr inbounds double, double* %896, i64 1
  %898 = load double, double* %897, align 8
  %899 = fmul double %895, %898
  %900 = fadd double %892, %899
  %901 = load double*, double** %12, align 8
  %902 = getelementptr inbounds double, double* %901, i64 15
  %903 = load double, double* %902, align 8
  %904 = load double*, double** %13, align 8
  %905 = getelementptr inbounds double, double* %904, i64 5
  %906 = load double, double* %905, align 8
  %907 = fmul double %903, %906
  %908 = fsub double %900, %907
  store double %908, double* %54, align 8
  %909 = load double*, double** %12, align 8
  %910 = getelementptr inbounds double, double* %909, i64 0
  %911 = load double, double* %910, align 8
  %912 = load double*, double** %12, align 8
  %913 = getelementptr inbounds double, double* %912, i64 4
  %914 = load double, double* %913, align 8
  %915 = load double*, double** %13, align 8
  %916 = getelementptr inbounds double, double* %915, i64 4
  %917 = load double, double* %916, align 8
  %918 = fmul double %914, %917
  %919 = fsub double %911, %918
  %920 = load double*, double** %12, align 8
  %921 = getelementptr inbounds double, double* %920, i64 8
  %922 = load double, double* %921, align 8
  %923 = load double*, double** %13, align 8
  %924 = getelementptr inbounds double, double* %923, i64 8
  %925 = load double, double* %924, align 8
  %926 = fmul double %922, %925
  %927 = fadd double %919, %926
  %928 = load double, double* %19, align 8
  %929 = fadd double %927, %928
  %930 = load double*, double** %12, align 8
  %931 = getelementptr inbounds double, double* %930, i64 16
  %932 = load double, double* %931, align 8
  %933 = load double*, double** %13, align 8
  %934 = getelementptr inbounds double, double* %933, i64 2
  %935 = load double, double* %934, align 8
  %936 = fmul double %932, %935
  %937 = fsub double %929, %936
  store double %937, double* %53, align 8
  %938 = load double*, double** %12, align 8
  %939 = getelementptr inbounds double, double* %938, i64 1
  %940 = load double, double* %939, align 8
  %941 = load double*, double** %12, align 8
  %942 = getelementptr inbounds double, double* %941, i64 5
  %943 = load double, double* %942, align 8
  %944 = load double*, double** %13, align 8
  %945 = getelementptr inbounds double, double* %944, i64 4
  %946 = load double, double* %945, align 8
  %947 = fmul double %943, %946
  %948 = fsub double %940, %947
  %949 = load double*, double** %12, align 8
  %950 = getelementptr inbounds double, double* %949, i64 9
  %951 = load double, double* %950, align 8
  %952 = load double*, double** %13, align 8
  %953 = getelementptr inbounds double, double* %952, i64 8
  %954 = load double, double* %953, align 8
  %955 = fmul double %951, %954
  %956 = fadd double %948, %955
  %957 = load double, double* %21, align 8
  %958 = fadd double %956, %957
  %959 = load double*, double** %12, align 8
  %960 = getelementptr inbounds double, double* %959, i64 17
  %961 = load double, double* %960, align 8
  %962 = load double*, double** %13, align 8
  %963 = getelementptr inbounds double, double* %962, i64 2
  %964 = load double, double* %963, align 8
  %965 = fmul double %961, %964
  %966 = fsub double %958, %965
  store double %966, double* %55, align 8
  %967 = load double, double* %52, align 8
  %968 = load double, double* %53, align 8
  %969 = fadd double %967, %968
  store double %969, double* %56, align 8
  %970 = load double, double* %54, align 8
  %971 = load double, double* %55, align 8
  %972 = fadd double %970, %971
  %973 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @tfcos36, i64 0, i64 3), align 8
  %974 = fmul double %972, %973
  store double %974, double* %57, align 8
  %975 = load double, double* %56, align 8
  %976 = load double, double* %57, align 8
  %977 = fadd double %975, %976
  store double %977, double* %58, align 8
  %978 = load double*, double** %15, align 8
  %979 = getelementptr inbounds double, double* %978, i64 30
  %980 = load double, double* %979, align 8
  %981 = fmul double %977, %980
  %982 = load double*, double** %14, align 8
  %983 = getelementptr inbounds double, double* %982, i64 12
  store double %981, double* %983, align 8
  %984 = load double, double* %58, align 8
  %985 = load double*, double** %15, align 8
  %986 = getelementptr inbounds double, double* %985, i64 23
  %987 = load double, double* %986, align 8
  %988 = fmul double %984, %987
  %989 = load double*, double** %14, align 8
  %990 = getelementptr inbounds double, double* %989, i64 5
  store double %988, double* %990, align 8
  %991 = load double, double* %57, align 8
  %992 = load double, double* %56, align 8
  %993 = fsub double %992, %991
  store double %993, double* %56, align 8
  %994 = load double*, double** %16, align 8
  %995 = getelementptr inbounds double, double* %994, i64 5
  %996 = load double, double* %995, align 8
  %997 = load double, double* %56, align 8
  %998 = load double*, double** %15, align 8
  %999 = getelementptr inbounds double, double* %998, i64 5
  %1000 = load double, double* %999, align 8
  %1001 = fmul double %997, %1000
  %1002 = fadd double %996, %1001
  %1003 = load double*, double** %17, align 8
  %1004 = getelementptr inbounds double, double* %1003, i64 160
  store double %1002, double* %1004, align 8
  %1005 = load double*, double** %16, align 8
  %1006 = getelementptr inbounds double, double* %1005, i64 12
  %1007 = load double, double* %1006, align 8
  %1008 = load double, double* %56, align 8
  %1009 = load double*, double** %15, align 8
  %1010 = getelementptr inbounds double, double* %1009, i64 12
  %1011 = load double, double* %1010, align 8
  %1012 = fmul double %1008, %1011
  %1013 = fadd double %1007, %1012
  %1014 = load double*, double** %17, align 8
  %1015 = getelementptr inbounds double, double* %1014, i64 384
  store double %1013, double* %1015, align 8
  %1016 = load double, double* %53, align 8
  %1017 = load double, double* %52, align 8
  %1018 = fsub double %1016, %1017
  store double %1018, double* %59, align 8
  %1019 = load double, double* %55, align 8
  %1020 = load double, double* %54, align 8
  %1021 = fsub double %1019, %1020
  %1022 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @tfcos36, i64 0, i64 5), align 8
  %1023 = fmul double %1021, %1022
  store double %1023, double* %60, align 8
  %1024 = load double, double* %59, align 8
  %1025 = load double, double* %60, align 8
  %1026 = fadd double %1024, %1025
  store double %1026, double* %61, align 8
  %1027 = load double*, double** %15, align 8
  %1028 = getelementptr inbounds double, double* %1027, i64 32
  %1029 = load double, double* %1028, align 8
  %1030 = fmul double %1026, %1029
  %1031 = load double*, double** %14, align 8
  %1032 = getelementptr inbounds double, double* %1031, i64 14
  store double %1030, double* %1032, align 8
  %1033 = load double, double* %61, align 8
  %1034 = load double*, double** %15, align 8
  %1035 = getelementptr inbounds double, double* %1034, i64 21
  %1036 = load double, double* %1035, align 8
  %1037 = fmul double %1033, %1036
  %1038 = load double*, double** %14, align 8
  %1039 = getelementptr inbounds double, double* %1038, i64 3
  store double %1037, double* %1039, align 8
  %1040 = load double, double* %60, align 8
  %1041 = load double, double* %59, align 8
  %1042 = fsub double %1041, %1040
  store double %1042, double* %59, align 8
  %1043 = load double*, double** %16, align 8
  %1044 = getelementptr inbounds double, double* %1043, i64 3
  %1045 = load double, double* %1044, align 8
  %1046 = load double, double* %59, align 8
  %1047 = load double*, double** %15, align 8
  %1048 = getelementptr inbounds double, double* %1047, i64 3
  %1049 = load double, double* %1048, align 8
  %1050 = fmul double %1046, %1049
  %1051 = fadd double %1045, %1050
  %1052 = load double*, double** %17, align 8
  %1053 = getelementptr inbounds double, double* %1052, i64 96
  store double %1051, double* %1053, align 8
  %1054 = load double*, double** %16, align 8
  %1055 = getelementptr inbounds double, double* %1054, i64 14
  %1056 = load double, double* %1055, align 8
  %1057 = load double, double* %59, align 8
  %1058 = load double*, double** %15, align 8
  %1059 = getelementptr inbounds double, double* %1058, i64 14
  %1060 = load double, double* %1059, align 8
  %1061 = fmul double %1057, %1060
  %1062 = fadd double %1056, %1061
  %1063 = load double*, double** %17, align 8
  %1064 = getelementptr inbounds double, double* %1063, i64 448
  store double %1062, double* %1064, align 8
  %1065 = load double*, double** %12, align 8
  %1066 = getelementptr inbounds double, double* %1065, i64 0
  %1067 = load double, double* %1066, align 8
  %1068 = load double*, double** %12, align 8
  %1069 = getelementptr inbounds double, double* %1068, i64 4
  %1070 = load double, double* %1069, align 8
  %1071 = fsub double %1067, %1070
  %1072 = load double*, double** %12, align 8
  %1073 = getelementptr inbounds double, double* %1072, i64 8
  %1074 = load double, double* %1073, align 8
  %1075 = fadd double %1071, %1074
  %1076 = load double*, double** %12, align 8
  %1077 = getelementptr inbounds double, double* %1076, i64 12
  %1078 = load double, double* %1077, align 8
  %1079 = fsub double %1075, %1078
  %1080 = load double*, double** %12, align 8
  %1081 = getelementptr inbounds double, double* %1080, i64 16
  %1082 = load double, double* %1081, align 8
  %1083 = fadd double %1079, %1082
  store double %1083, double* %62, align 8
  %1084 = load double*, double** %12, align 8
  %1085 = getelementptr inbounds double, double* %1084, i64 1
  %1086 = load double, double* %1085, align 8
  %1087 = load double*, double** %12, align 8
  %1088 = getelementptr inbounds double, double* %1087, i64 5
  %1089 = load double, double* %1088, align 8
  %1090 = fsub double %1086, %1089
  %1091 = load double*, double** %12, align 8
  %1092 = getelementptr inbounds double, double* %1091, i64 9
  %1093 = load double, double* %1092, align 8
  %1094 = fadd double %1090, %1093
  %1095 = load double*, double** %12, align 8
  %1096 = getelementptr inbounds double, double* %1095, i64 13
  %1097 = load double, double* %1096, align 8
  %1098 = fsub double %1094, %1097
  %1099 = load double*, double** %12, align 8
  %1100 = getelementptr inbounds double, double* %1099, i64 17
  %1101 = load double, double* %1100, align 8
  %1102 = fadd double %1098, %1101
  %1103 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @tfcos36, i64 0, i64 4), align 16
  %1104 = fmul double %1102, %1103
  store double %1104, double* %63, align 8
  %1105 = load double, double* %62, align 8
  %1106 = load double, double* %63, align 8
  %1107 = fadd double %1105, %1106
  store double %1107, double* %64, align 8
  %1108 = load double*, double** %15, align 8
  %1109 = getelementptr inbounds double, double* %1108, i64 31
  %1110 = load double, double* %1109, align 8
  %1111 = fmul double %1107, %1110
  %1112 = load double*, double** %14, align 8
  %1113 = getelementptr inbounds double, double* %1112, i64 13
  store double %1111, double* %1113, align 8
  %1114 = load double, double* %64, align 8
  %1115 = load double*, double** %15, align 8
  %1116 = getelementptr inbounds double, double* %1115, i64 22
  %1117 = load double, double* %1116, align 8
  %1118 = fmul double %1114, %1117
  %1119 = load double*, double** %14, align 8
  %1120 = getelementptr inbounds double, double* %1119, i64 4
  store double %1118, double* %1120, align 8
  %1121 = load double, double* %63, align 8
  %1122 = load double, double* %62, align 8
  %1123 = fsub double %1122, %1121
  store double %1123, double* %62, align 8
  %1124 = load double*, double** %16, align 8
  %1125 = getelementptr inbounds double, double* %1124, i64 4
  %1126 = load double, double* %1125, align 8
  %1127 = load double, double* %62, align 8
  %1128 = load double*, double** %15, align 8
  %1129 = getelementptr inbounds double, double* %1128, i64 4
  %1130 = load double, double* %1129, align 8
  %1131 = fmul double %1127, %1130
  %1132 = fadd double %1126, %1131
  %1133 = load double*, double** %17, align 8
  %1134 = getelementptr inbounds double, double* %1133, i64 128
  store double %1132, double* %1134, align 8
  %1135 = load double*, double** %16, align 8
  %1136 = getelementptr inbounds double, double* %1135, i64 13
  %1137 = load double, double* %1136, align 8
  %1138 = load double, double* %62, align 8
  %1139 = load double*, double** %15, align 8
  %1140 = getelementptr inbounds double, double* %1139, i64 13
  %1141 = load double, double* %1140, align 8
  %1142 = fmul double %1138, %1141
  %1143 = fadd double %1137, %1142
  %1144 = load double*, double** %17, align 8
  %1145 = getelementptr inbounds double, double* %1144, i64 416
  store double %1143, double* %1145, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dct12(double*, double*, double*, double*, double*) #0 {
  %pgocount = load i64, i64* getelementptr inbounds ([1 x i64], [1 x i64]* @__profc_tmp1.ll_dct12, i64 0, i64 0)
  %6 = add i64 %pgocount, 1
  store i64 %6, i64* getelementptr inbounds ([1 x i64], [1 x i64]* @__profc_tmp1.ll_dct12, i64 0, i64 0)
  %7 = alloca double*, align 8
  %8 = alloca double*, align 8
  %9 = alloca double*, align 8
  %10 = alloca double*, align 8
  %11 = alloca double*, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  %18 = alloca double*, align 8
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  %21 = alloca double, align 8
  %22 = alloca double, align 8
  %23 = alloca double, align 8
  %24 = alloca double, align 8
  %25 = alloca double, align 8
  %26 = alloca double, align 8
  %27 = alloca double, align 8
  %28 = alloca double*, align 8
  %29 = alloca double, align 8
  %30 = alloca double, align 8
  %31 = alloca double, align 8
  %32 = alloca double, align 8
  %33 = alloca double, align 8
  %34 = alloca double, align 8
  %35 = alloca double, align 8
  %36 = alloca double, align 8
  %37 = alloca double, align 8
  %38 = alloca double*, align 8
  %39 = alloca double, align 8
  %40 = alloca double, align 8
  %41 = alloca double, align 8
  store double* %0, double** %7, align 8
  store double* %1, double** %8, align 8
  store double* %2, double** %9, align 8
  store double* %3, double** %10, align 8
  store double* %4, double** %11, align 8
  %42 = load double*, double** %8, align 8
  store double* %42, double** %18, align 8
  %43 = load double*, double** %18, align 8
  %44 = getelementptr inbounds double, double* %43, i64 0
  %45 = load double, double* %44, align 8
  %46 = load double*, double** %11, align 8
  %47 = getelementptr inbounds double, double* %46, i64 0
  store double %45, double* %47, align 8
  %48 = load double*, double** %18, align 8
  %49 = getelementptr inbounds double, double* %48, i64 1
  %50 = load double, double* %49, align 8
  %51 = load double*, double** %11, align 8
  %52 = getelementptr inbounds double, double* %51, i64 32
  store double %50, double* %52, align 8
  %53 = load double*, double** %18, align 8
  %54 = getelementptr inbounds double, double* %53, i64 2
  %55 = load double, double* %54, align 8
  %56 = load double*, double** %11, align 8
  %57 = getelementptr inbounds double, double* %56, i64 64
  store double %55, double* %57, align 8
  %58 = load double*, double** %18, align 8
  %59 = getelementptr inbounds double, double* %58, i64 3
  %60 = load double, double* %59, align 8
  %61 = load double*, double** %11, align 8
  %62 = getelementptr inbounds double, double* %61, i64 96
  store double %60, double* %62, align 8
  %63 = load double*, double** %18, align 8
  %64 = getelementptr inbounds double, double* %63, i64 4
  %65 = load double, double* %64, align 8
  %66 = load double*, double** %11, align 8
  %67 = getelementptr inbounds double, double* %66, i64 128
  store double %65, double* %67, align 8
  %68 = load double*, double** %18, align 8
  %69 = getelementptr inbounds double, double* %68, i64 5
  %70 = load double, double* %69, align 8
  %71 = load double*, double** %11, align 8
  %72 = getelementptr inbounds double, double* %71, i64 160
  store double %70, double* %72, align 8
  %73 = load double*, double** %7, align 8
  %74 = getelementptr inbounds double, double* %73, i64 15
  %75 = load double, double* %74, align 8
  store double %75, double* %17, align 8
  %76 = load double*, double** %7, align 8
  %77 = getelementptr inbounds double, double* %76, i64 12
  %78 = load double, double* %77, align 8
  store double %78, double* %16, align 8
  %79 = load double, double* %17, align 8
  %80 = fadd double %79, %78
  store double %80, double* %17, align 8
  %81 = load double*, double** %7, align 8
  %82 = getelementptr inbounds double, double* %81, i64 9
  %83 = load double, double* %82, align 8
  store double %83, double* %15, align 8
  %84 = load double, double* %16, align 8
  %85 = fadd double %84, %83
  store double %85, double* %16, align 8
  %86 = load double*, double** %7, align 8
  %87 = getelementptr inbounds double, double* %86, i64 6
  %88 = load double, double* %87, align 8
  store double %88, double* %14, align 8
  %89 = load double, double* %15, align 8
  %90 = fadd double %89, %88
  store double %90, double* %15, align 8
  %91 = load double*, double** %7, align 8
  %92 = getelementptr inbounds double, double* %91, i64 3
  %93 = load double, double* %92, align 8
  store double %93, double* %13, align 8
  %94 = load double, double* %14, align 8
  %95 = fadd double %94, %93
  store double %95, double* %14, align 8
  %96 = load double*, double** %7, align 8
  %97 = getelementptr inbounds double, double* %96, i64 0
  %98 = load double, double* %97, align 8
  store double %98, double* %12, align 8
  %99 = load double, double* %13, align 8
  %100 = fadd double %99, %98
  store double %100, double* %13, align 8
  %101 = load double, double* %15, align 8
  %102 = load double, double* %17, align 8
  %103 = fadd double %102, %101
  store double %103, double* %17, align 8
  %104 = load double, double* %13, align 8
  %105 = load double, double* %15, align 8
  %106 = fadd double %105, %104
  store double %106, double* %15, align 8
  %107 = load double, double* @COS6_1, align 8
  %108 = load double, double* %14, align 8
  %109 = fmul double %108, %107
  store double %109, double* %14, align 8
  %110 = load double, double* @COS6_1, align 8
  %111 = load double, double* %15, align 8
  %112 = fmul double %111, %110
  store double %112, double* %15, align 8
  %113 = load double, double* %12, align 8
  %114 = load double, double* %16, align 8
  %115 = fsub double %113, %114
  store double %115, double* %20, align 8
  %116 = load double, double* %13, align 8
  %117 = load double, double* %17, align 8
  %118 = fsub double %116, %117
  %119 = load double, double* getelementptr inbounds ([3 x double], [3 x double]* @tfcos12, i64 0, i64 1), align 8
  %120 = fmul double %118, %119
  store double %120, double* %21, align 8
  %121 = load double, double* %20, align 8
  %122 = load double, double* %21, align 8
  %123 = fadd double %121, %122
  store double %123, double* %19, align 8
  %124 = load double, double* %21, align 8
  %125 = load double, double* %20, align 8
  %126 = fsub double %125, %124
  store double %126, double* %20, align 8
  %127 = load double*, double** %18, align 8
  %128 = getelementptr inbounds double, double* %127, i64 16
  %129 = load double, double* %128, align 8
  %130 = load double, double* %19, align 8
  %131 = load double*, double** %10, align 8
  %132 = getelementptr inbounds double, double* %131, i64 10
  %133 = load double, double* %132, align 8
  %134 = fmul double %130, %133
  %135 = fadd double %129, %134
  %136 = load double*, double** %11, align 8
  %137 = getelementptr inbounds double, double* %136, i64 512
  store double %135, double* %137, align 8
  %138 = load double*, double** %18, align 8
  %139 = getelementptr inbounds double, double* %138, i64 13
  %140 = load double, double* %139, align 8
  %141 = load double, double* %19, align 8
  %142 = load double*, double** %10, align 8
  %143 = getelementptr inbounds double, double* %142, i64 7
  %144 = load double, double* %143, align 8
  %145 = fmul double %141, %144
  %146 = fadd double %140, %145
  %147 = load double*, double** %11, align 8
  %148 = getelementptr inbounds double, double* %147, i64 416
  store double %146, double* %148, align 8
  %149 = load double*, double** %18, align 8
  %150 = getelementptr inbounds double, double* %149, i64 7
  %151 = load double, double* %150, align 8
  %152 = load double, double* %20, align 8
  %153 = load double*, double** %10, align 8
  %154 = getelementptr inbounds double, double* %153, i64 1
  %155 = load double, double* %154, align 8
  %156 = fmul double %152, %155
  %157 = fadd double %151, %156
  %158 = load double*, double** %11, align 8
  %159 = getelementptr inbounds double, double* %158, i64 224
  store double %157, double* %159, align 8
  %160 = load double*, double** %18, align 8
  %161 = getelementptr inbounds double, double* %160, i64 10
  %162 = load double, double* %161, align 8
  %163 = load double, double* %20, align 8
  %164 = load double*, double** %10, align 8
  %165 = getelementptr inbounds double, double* %164, i64 4
  %166 = load double, double* %165, align 8
  %167 = fmul double %163, %166
  %168 = fadd double %162, %167
  %169 = load double*, double** %11, align 8
  %170 = getelementptr inbounds double, double* %169, i64 320
  store double %168, double* %170, align 8
  %171 = load double, double* %16, align 8
  %172 = load double, double* @COS6_2, align 8
  %173 = fmul double %171, %172
  %174 = load double, double* %12, align 8
  %175 = fadd double %174, %173
  store double %175, double* %12, align 8
  %176 = load double, double* %12, align 8
  %177 = load double, double* %14, align 8
  %178 = fadd double %176, %177
  store double %178, double* %16, align 8
  %179 = load double, double* %14, align 8
  %180 = load double, double* %12, align 8
  %181 = fsub double %180, %179
  store double %181, double* %12, align 8
  %182 = load double, double* %17, align 8
  %183 = load double, double* @COS6_2, align 8
  %184 = fmul double %182, %183
  %185 = load double, double* %13, align 8
  %186 = fadd double %185, %184
  store double %186, double* %13, align 8
  %187 = load double, double* %13, align 8
  %188 = load double, double* %15, align 8
  %189 = fadd double %187, %188
  %190 = load double, double* getelementptr inbounds ([3 x double], [3 x double]* @tfcos12, i64 0, i64 0), align 16
  %191 = fmul double %189, %190
  store double %191, double* %17, align 8
  %192 = load double, double* %13, align 8
  %193 = load double, double* %15, align 8
  %194 = fsub double %192, %193
  %195 = load double, double* getelementptr inbounds ([3 x double], [3 x double]* @tfcos12, i64 0, i64 2), align 16
  %196 = fmul double %194, %195
  store double %196, double* %13, align 8
  %197 = load double, double* %16, align 8
  %198 = load double, double* %17, align 8
  %199 = fadd double %197, %198
  store double %199, double* %15, align 8
  %200 = load double, double* %17, align 8
  %201 = load double, double* %16, align 8
  %202 = fsub double %201, %200
  store double %202, double* %16, align 8
  %203 = load double, double* %12, align 8
  %204 = load double, double* %13, align 8
  %205 = fadd double %203, %204
  store double %205, double* %14, align 8
  %206 = load double, double* %13, align 8
  %207 = load double, double* %12, align 8
  %208 = fsub double %207, %206
  store double %208, double* %12, align 8
  %209 = load double*, double** %18, align 8
  %210 = getelementptr inbounds double, double* %209, i64 17
  %211 = load double, double* %210, align 8
  %212 = load double, double* %14, align 8
  %213 = load double*, double** %10, align 8
  %214 = getelementptr inbounds double, double* %213, i64 11
  %215 = load double, double* %214, align 8
  %216 = fmul double %212, %215
  %217 = fadd double %211, %216
  %218 = load double*, double** %11, align 8
  %219 = getelementptr inbounds double, double* %218, i64 544
  store double %217, double* %219, align 8
  %220 = load double*, double** %18, align 8
  %221 = getelementptr inbounds double, double* %220, i64 12
  %222 = load double, double* %221, align 8
  %223 = load double, double* %14, align 8
  %224 = load double*, double** %10, align 8
  %225 = getelementptr inbounds double, double* %224, i64 6
  %226 = load double, double* %225, align 8
  %227 = fmul double %223, %226
  %228 = fadd double %222, %227
  %229 = load double*, double** %11, align 8
  %230 = getelementptr inbounds double, double* %229, i64 384
  store double %228, double* %230, align 8
  %231 = load double*, double** %18, align 8
  %232 = getelementptr inbounds double, double* %231, i64 14
  %233 = load double, double* %232, align 8
  %234 = load double, double* %15, align 8
  %235 = load double*, double** %10, align 8
  %236 = getelementptr inbounds double, double* %235, i64 8
  %237 = load double, double* %236, align 8
  %238 = fmul double %234, %237
  %239 = fadd double %233, %238
  %240 = load double*, double** %11, align 8
  %241 = getelementptr inbounds double, double* %240, i64 448
  store double %239, double* %241, align 8
  %242 = load double*, double** %18, align 8
  %243 = getelementptr inbounds double, double* %242, i64 15
  %244 = load double, double* %243, align 8
  %245 = load double, double* %15, align 8
  %246 = load double*, double** %10, align 8
  %247 = getelementptr inbounds double, double* %246, i64 9
  %248 = load double, double* %247, align 8
  %249 = fmul double %245, %248
  %250 = fadd double %244, %249
  %251 = load double*, double** %11, align 8
  %252 = getelementptr inbounds double, double* %251, i64 480
  store double %250, double* %252, align 8
  %253 = load double*, double** %18, align 8
  %254 = getelementptr inbounds double, double* %253, i64 6
  %255 = load double, double* %254, align 8
  %256 = load double, double* %12, align 8
  %257 = load double*, double** %10, align 8
  %258 = getelementptr inbounds double, double* %257, i64 0
  %259 = load double, double* %258, align 8
  %260 = fmul double %256, %259
  %261 = fadd double %255, %260
  %262 = load double*, double** %11, align 8
  %263 = getelementptr inbounds double, double* %262, i64 192
  store double %261, double* %263, align 8
  %264 = load double*, double** %18, align 8
  %265 = getelementptr inbounds double, double* %264, i64 11
  %266 = load double, double* %265, align 8
  %267 = load double, double* %12, align 8
  %268 = load double*, double** %10, align 8
  %269 = getelementptr inbounds double, double* %268, i64 5
  %270 = load double, double* %269, align 8
  %271 = fmul double %267, %270
  %272 = fadd double %266, %271
  %273 = load double*, double** %11, align 8
  %274 = getelementptr inbounds double, double* %273, i64 352
  store double %272, double* %274, align 8
  %275 = load double*, double** %18, align 8
  %276 = getelementptr inbounds double, double* %275, i64 8
  %277 = load double, double* %276, align 8
  %278 = load double, double* %16, align 8
  %279 = load double*, double** %10, align 8
  %280 = getelementptr inbounds double, double* %279, i64 2
  %281 = load double, double* %280, align 8
  %282 = fmul double %278, %281
  %283 = fadd double %277, %282
  %284 = load double*, double** %11, align 8
  %285 = getelementptr inbounds double, double* %284, i64 256
  store double %283, double* %285, align 8
  %286 = load double*, double** %18, align 8
  %287 = getelementptr inbounds double, double* %286, i64 9
  %288 = load double, double* %287, align 8
  %289 = load double, double* %16, align 8
  %290 = load double*, double** %10, align 8
  %291 = getelementptr inbounds double, double* %290, i64 3
  %292 = load double, double* %291, align 8
  %293 = fmul double %289, %292
  %294 = fadd double %288, %293
  %295 = load double*, double** %11, align 8
  %296 = getelementptr inbounds double, double* %295, i64 288
  store double %294, double* %296, align 8
  %297 = load double*, double** %7, align 8
  %298 = getelementptr inbounds double, double* %297, i32 1
  store double* %298, double** %7, align 8
  %299 = load double*, double** %9, align 8
  store double* %299, double** %28, align 8
  %300 = load double*, double** %7, align 8
  %301 = getelementptr inbounds double, double* %300, i64 15
  %302 = load double, double* %301, align 8
  store double %302, double* %27, align 8
  %303 = load double*, double** %7, align 8
  %304 = getelementptr inbounds double, double* %303, i64 12
  %305 = load double, double* %304, align 8
  store double %305, double* %26, align 8
  %306 = load double, double* %27, align 8
  %307 = fadd double %306, %305
  store double %307, double* %27, align 8
  %308 = load double*, double** %7, align 8
  %309 = getelementptr inbounds double, double* %308, i64 9
  %310 = load double, double* %309, align 8
  store double %310, double* %25, align 8
  %311 = load double, double* %26, align 8
  %312 = fadd double %311, %310
  store double %312, double* %26, align 8
  %313 = load double*, double** %7, align 8
  %314 = getelementptr inbounds double, double* %313, i64 6
  %315 = load double, double* %314, align 8
  store double %315, double* %24, align 8
  %316 = load double, double* %25, align 8
  %317 = fadd double %316, %315
  store double %317, double* %25, align 8
  %318 = load double*, double** %7, align 8
  %319 = getelementptr inbounds double, double* %318, i64 3
  %320 = load double, double* %319, align 8
  store double %320, double* %23, align 8
  %321 = load double, double* %24, align 8
  %322 = fadd double %321, %320
  store double %322, double* %24, align 8
  %323 = load double*, double** %7, align 8
  %324 = getelementptr inbounds double, double* %323, i64 0
  %325 = load double, double* %324, align 8
  store double %325, double* %22, align 8
  %326 = load double, double* %23, align 8
  %327 = fadd double %326, %325
  store double %327, double* %23, align 8
  %328 = load double, double* %25, align 8
  %329 = load double, double* %27, align 8
  %330 = fadd double %329, %328
  store double %330, double* %27, align 8
  %331 = load double, double* %23, align 8
  %332 = load double, double* %25, align 8
  %333 = fadd double %332, %331
  store double %333, double* %25, align 8
  %334 = load double, double* @COS6_1, align 8
  %335 = load double, double* %24, align 8
  %336 = fmul double %335, %334
  store double %336, double* %24, align 8
  %337 = load double, double* @COS6_1, align 8
  %338 = load double, double* %25, align 8
  %339 = fmul double %338, %337
  store double %339, double* %25, align 8
  %340 = load double, double* %22, align 8
  %341 = load double, double* %26, align 8
  %342 = fsub double %340, %341
  store double %342, double* %30, align 8
  %343 = load double, double* %23, align 8
  %344 = load double, double* %27, align 8
  %345 = fsub double %343, %344
  %346 = load double, double* getelementptr inbounds ([3 x double], [3 x double]* @tfcos12, i64 0, i64 1), align 8
  %347 = fmul double %345, %346
  store double %347, double* %31, align 8
  %348 = load double, double* %30, align 8
  %349 = load double, double* %31, align 8
  %350 = fadd double %348, %349
  store double %350, double* %29, align 8
  %351 = load double, double* %31, align 8
  %352 = load double, double* %30, align 8
  %353 = fsub double %352, %351
  store double %353, double* %30, align 8
  %354 = load double, double* %29, align 8
  %355 = load double*, double** %10, align 8
  %356 = getelementptr inbounds double, double* %355, i64 10
  %357 = load double, double* %356, align 8
  %358 = fmul double %354, %357
  %359 = load double*, double** %28, align 8
  %360 = getelementptr inbounds double, double* %359, i64 4
  store double %358, double* %360, align 8
  %361 = load double, double* %29, align 8
  %362 = load double*, double** %10, align 8
  %363 = getelementptr inbounds double, double* %362, i64 7
  %364 = load double, double* %363, align 8
  %365 = fmul double %361, %364
  %366 = load double*, double** %28, align 8
  %367 = getelementptr inbounds double, double* %366, i64 1
  store double %365, double* %367, align 8
  %368 = load double, double* %30, align 8
  %369 = load double*, double** %10, align 8
  %370 = getelementptr inbounds double, double* %369, i64 1
  %371 = load double, double* %370, align 8
  %372 = fmul double %368, %371
  %373 = load double*, double** %11, align 8
  %374 = getelementptr inbounds double, double* %373, i64 416
  %375 = load double, double* %374, align 8
  %376 = fadd double %375, %372
  store double %376, double* %374, align 8
  %377 = load double, double* %30, align 8
  %378 = load double*, double** %10, align 8
  %379 = getelementptr inbounds double, double* %378, i64 4
  %380 = load double, double* %379, align 8
  %381 = fmul double %377, %380
  %382 = load double*, double** %11, align 8
  %383 = getelementptr inbounds double, double* %382, i64 512
  %384 = load double, double* %383, align 8
  %385 = fadd double %384, %381
  store double %385, double* %383, align 8
  %386 = load double, double* %26, align 8
  %387 = load double, double* @COS6_2, align 8
  %388 = fmul double %386, %387
  %389 = load double, double* %22, align 8
  %390 = fadd double %389, %388
  store double %390, double* %22, align 8
  %391 = load double, double* %22, align 8
  %392 = load double, double* %24, align 8
  %393 = fadd double %391, %392
  store double %393, double* %26, align 8
  %394 = load double, double* %24, align 8
  %395 = load double, double* %22, align 8
  %396 = fsub double %395, %394
  store double %396, double* %22, align 8
  %397 = load double, double* %27, align 8
  %398 = load double, double* @COS6_2, align 8
  %399 = fmul double %397, %398
  %400 = load double, double* %23, align 8
  %401 = fadd double %400, %399
  store double %401, double* %23, align 8
  %402 = load double, double* %23, align 8
  %403 = load double, double* %25, align 8
  %404 = fadd double %402, %403
  %405 = load double, double* getelementptr inbounds ([3 x double], [3 x double]* @tfcos12, i64 0, i64 0), align 16
  %406 = fmul double %404, %405
  store double %406, double* %27, align 8
  %407 = load double, double* %23, align 8
  %408 = load double, double* %25, align 8
  %409 = fsub double %407, %408
  %410 = load double, double* getelementptr inbounds ([3 x double], [3 x double]* @tfcos12, i64 0, i64 2), align 16
  %411 = fmul double %409, %410
  store double %411, double* %23, align 8
  %412 = load double, double* %26, align 8
  %413 = load double, double* %27, align 8
  %414 = fadd double %412, %413
  store double %414, double* %25, align 8
  %415 = load double, double* %27, align 8
  %416 = load double, double* %26, align 8
  %417 = fsub double %416, %415
  store double %417, double* %26, align 8
  %418 = load double, double* %22, align 8
  %419 = load double, double* %23, align 8
  %420 = fadd double %418, %419
  store double %420, double* %24, align 8
  %421 = load double, double* %23, align 8
  %422 = load double, double* %22, align 8
  %423 = fsub double %422, %421
  store double %423, double* %22, align 8
  %424 = load double, double* %24, align 8
  %425 = load double*, double** %10, align 8
  %426 = getelementptr inbounds double, double* %425, i64 11
  %427 = load double, double* %426, align 8
  %428 = fmul double %424, %427
  %429 = load double*, double** %28, align 8
  %430 = getelementptr inbounds double, double* %429, i64 5
  store double %428, double* %430, align 8
  %431 = load double, double* %24, align 8
  %432 = load double*, double** %10, align 8
  %433 = getelementptr inbounds double, double* %432, i64 6
  %434 = load double, double* %433, align 8
  %435 = fmul double %431, %434
  %436 = load double*, double** %28, align 8
  %437 = getelementptr inbounds double, double* %436, i64 0
  store double %435, double* %437, align 8
  %438 = load double, double* %25, align 8
  %439 = load double*, double** %10, align 8
  %440 = getelementptr inbounds double, double* %439, i64 8
  %441 = load double, double* %440, align 8
  %442 = fmul double %438, %441
  %443 = load double*, double** %28, align 8
  %444 = getelementptr inbounds double, double* %443, i64 2
  store double %442, double* %444, align 8
  %445 = load double, double* %25, align 8
  %446 = load double*, double** %10, align 8
  %447 = getelementptr inbounds double, double* %446, i64 9
  %448 = load double, double* %447, align 8
  %449 = fmul double %445, %448
  %450 = load double*, double** %28, align 8
  %451 = getelementptr inbounds double, double* %450, i64 3
  store double %449, double* %451, align 8
  %452 = load double, double* %22, align 8
  %453 = load double*, double** %10, align 8
  %454 = getelementptr inbounds double, double* %453, i64 0
  %455 = load double, double* %454, align 8
  %456 = fmul double %452, %455
  %457 = load double*, double** %11, align 8
  %458 = getelementptr inbounds double, double* %457, i64 384
  %459 = load double, double* %458, align 8
  %460 = fadd double %459, %456
  store double %460, double* %458, align 8
  %461 = load double, double* %22, align 8
  %462 = load double*, double** %10, align 8
  %463 = getelementptr inbounds double, double* %462, i64 5
  %464 = load double, double* %463, align 8
  %465 = fmul double %461, %464
  %466 = load double*, double** %11, align 8
  %467 = getelementptr inbounds double, double* %466, i64 544
  %468 = load double, double* %467, align 8
  %469 = fadd double %468, %465
  store double %469, double* %467, align 8
  %470 = load double, double* %26, align 8
  %471 = load double*, double** %10, align 8
  %472 = getelementptr inbounds double, double* %471, i64 2
  %473 = load double, double* %472, align 8
  %474 = fmul double %470, %473
  %475 = load double*, double** %11, align 8
  %476 = getelementptr inbounds double, double* %475, i64 448
  %477 = load double, double* %476, align 8
  %478 = fadd double %477, %474
  store double %478, double* %476, align 8
  %479 = load double, double* %26, align 8
  %480 = load double*, double** %10, align 8
  %481 = getelementptr inbounds double, double* %480, i64 3
  %482 = load double, double* %481, align 8
  %483 = fmul double %479, %482
  %484 = load double*, double** %11, align 8
  %485 = getelementptr inbounds double, double* %484, i64 480
  %486 = load double, double* %485, align 8
  %487 = fadd double %486, %483
  store double %487, double* %485, align 8
  %488 = load double*, double** %7, align 8
  %489 = getelementptr inbounds double, double* %488, i32 1
  store double* %489, double** %7, align 8
  %490 = load double*, double** %9, align 8
  store double* %490, double** %38, align 8
  %491 = load double*, double** %38, align 8
  %492 = getelementptr inbounds double, double* %491, i64 17
  store double 0.000000e+00, double* %492, align 8
  %493 = load double*, double** %38, align 8
  %494 = getelementptr inbounds double, double* %493, i64 16
  store double 0.000000e+00, double* %494, align 8
  %495 = load double*, double** %38, align 8
  %496 = getelementptr inbounds double, double* %495, i64 15
  store double 0.000000e+00, double* %496, align 8
  %497 = load double*, double** %38, align 8
  %498 = getelementptr inbounds double, double* %497, i64 14
  store double 0.000000e+00, double* %498, align 8
  %499 = load double*, double** %38, align 8
  %500 = getelementptr inbounds double, double* %499, i64 13
  store double 0.000000e+00, double* %500, align 8
  %501 = load double*, double** %38, align 8
  %502 = getelementptr inbounds double, double* %501, i64 12
  store double 0.000000e+00, double* %502, align 8
  %503 = load double*, double** %7, align 8
  %504 = getelementptr inbounds double, double* %503, i64 15
  %505 = load double, double* %504, align 8
  store double %505, double* %37, align 8
  %506 = load double*, double** %7, align 8
  %507 = getelementptr inbounds double, double* %506, i64 12
  %508 = load double, double* %507, align 8
  store double %508, double* %36, align 8
  %509 = load double, double* %37, align 8
  %510 = fadd double %509, %508
  store double %510, double* %37, align 8
  %511 = load double*, double** %7, align 8
  %512 = getelementptr inbounds double, double* %511, i64 9
  %513 = load double, double* %512, align 8
  store double %513, double* %35, align 8
  %514 = load double, double* %36, align 8
  %515 = fadd double %514, %513
  store double %515, double* %36, align 8
  %516 = load double*, double** %7, align 8
  %517 = getelementptr inbounds double, double* %516, i64 6
  %518 = load double, double* %517, align 8
  store double %518, double* %34, align 8
  %519 = load double, double* %35, align 8
  %520 = fadd double %519, %518
  store double %520, double* %35, align 8
  %521 = load double*, double** %7, align 8
  %522 = getelementptr inbounds double, double* %521, i64 3
  %523 = load double, double* %522, align 8
  store double %523, double* %33, align 8
  %524 = load double, double* %34, align 8
  %525 = fadd double %524, %523
  store double %525, double* %34, align 8
  %526 = load double*, double** %7, align 8
  %527 = getelementptr inbounds double, double* %526, i64 0
  %528 = load double, double* %527, align 8
  store double %528, double* %32, align 8
  %529 = load double, double* %33, align 8
  %530 = fadd double %529, %528
  store double %530, double* %33, align 8
  %531 = load double, double* %35, align 8
  %532 = load double, double* %37, align 8
  %533 = fadd double %532, %531
  store double %533, double* %37, align 8
  %534 = load double, double* %33, align 8
  %535 = load double, double* %35, align 8
  %536 = fadd double %535, %534
  store double %536, double* %35, align 8
  %537 = load double, double* @COS6_1, align 8
  %538 = load double, double* %34, align 8
  %539 = fmul double %538, %537
  store double %539, double* %34, align 8
  %540 = load double, double* @COS6_1, align 8
  %541 = load double, double* %35, align 8
  %542 = fmul double %541, %540
  store double %542, double* %35, align 8
  %543 = load double, double* %32, align 8
  %544 = load double, double* %36, align 8
  %545 = fsub double %543, %544
  store double %545, double* %40, align 8
  %546 = load double, double* %33, align 8
  %547 = load double, double* %37, align 8
  %548 = fsub double %546, %547
  %549 = load double, double* getelementptr inbounds ([3 x double], [3 x double]* @tfcos12, i64 0, i64 1), align 8
  %550 = fmul double %548, %549
  store double %550, double* %41, align 8
  %551 = load double, double* %40, align 8
  %552 = load double, double* %41, align 8
  %553 = fadd double %551, %552
  store double %553, double* %39, align 8
  %554 = load double, double* %41, align 8
  %555 = load double, double* %40, align 8
  %556 = fsub double %555, %554
  store double %556, double* %40, align 8
  %557 = load double, double* %39, align 8
  %558 = load double*, double** %10, align 8
  %559 = getelementptr inbounds double, double* %558, i64 10
  %560 = load double, double* %559, align 8
  %561 = fmul double %557, %560
  %562 = load double*, double** %38, align 8
  %563 = getelementptr inbounds double, double* %562, i64 10
  store double %561, double* %563, align 8
  %564 = load double, double* %39, align 8
  %565 = load double*, double** %10, align 8
  %566 = getelementptr inbounds double, double* %565, i64 7
  %567 = load double, double* %566, align 8
  %568 = fmul double %564, %567
  %569 = load double*, double** %38, align 8
  %570 = getelementptr inbounds double, double* %569, i64 7
  store double %568, double* %570, align 8
  %571 = load double, double* %40, align 8
  %572 = load double*, double** %10, align 8
  %573 = getelementptr inbounds double, double* %572, i64 1
  %574 = load double, double* %573, align 8
  %575 = fmul double %571, %574
  %576 = load double*, double** %38, align 8
  %577 = getelementptr inbounds double, double* %576, i64 1
  %578 = load double, double* %577, align 8
  %579 = fadd double %578, %575
  store double %579, double* %577, align 8
  %580 = load double, double* %40, align 8
  %581 = load double*, double** %10, align 8
  %582 = getelementptr inbounds double, double* %581, i64 4
  %583 = load double, double* %582, align 8
  %584 = fmul double %580, %583
  %585 = load double*, double** %38, align 8
  %586 = getelementptr inbounds double, double* %585, i64 4
  %587 = load double, double* %586, align 8
  %588 = fadd double %587, %584
  store double %588, double* %586, align 8
  %589 = load double, double* %36, align 8
  %590 = load double, double* @COS6_2, align 8
  %591 = fmul double %589, %590
  %592 = load double, double* %32, align 8
  %593 = fadd double %592, %591
  store double %593, double* %32, align 8
  %594 = load double, double* %32, align 8
  %595 = load double, double* %34, align 8
  %596 = fadd double %594, %595
  store double %596, double* %36, align 8
  %597 = load double, double* %34, align 8
  %598 = load double, double* %32, align 8
  %599 = fsub double %598, %597
  store double %599, double* %32, align 8
  %600 = load double, double* %37, align 8
  %601 = load double, double* @COS6_2, align 8
  %602 = fmul double %600, %601
  %603 = load double, double* %33, align 8
  %604 = fadd double %603, %602
  store double %604, double* %33, align 8
  %605 = load double, double* %33, align 8
  %606 = load double, double* %35, align 8
  %607 = fadd double %605, %606
  %608 = load double, double* getelementptr inbounds ([3 x double], [3 x double]* @tfcos12, i64 0, i64 0), align 16
  %609 = fmul double %607, %608
  store double %609, double* %37, align 8
  %610 = load double, double* %33, align 8
  %611 = load double, double* %35, align 8
  %612 = fsub double %610, %611
  %613 = load double, double* getelementptr inbounds ([3 x double], [3 x double]* @tfcos12, i64 0, i64 2), align 16
  %614 = fmul double %612, %613
  store double %614, double* %33, align 8
  %615 = load double, double* %36, align 8
  %616 = load double, double* %37, align 8
  %617 = fadd double %615, %616
  store double %617, double* %35, align 8
  %618 = load double, double* %37, align 8
  %619 = load double, double* %36, align 8
  %620 = fsub double %619, %618
  store double %620, double* %36, align 8
  %621 = load double, double* %32, align 8
  %622 = load double, double* %33, align 8
  %623 = fadd double %621, %622
  store double %623, double* %34, align 8
  %624 = load double, double* %33, align 8
  %625 = load double, double* %32, align 8
  %626 = fsub double %625, %624
  store double %626, double* %32, align 8
  %627 = load double, double* %34, align 8
  %628 = load double*, double** %10, align 8
  %629 = getelementptr inbounds double, double* %628, i64 11
  %630 = load double, double* %629, align 8
  %631 = fmul double %627, %630
  %632 = load double*, double** %38, align 8
  %633 = getelementptr inbounds double, double* %632, i64 11
  store double %631, double* %633, align 8
  %634 = load double, double* %34, align 8
  %635 = load double*, double** %10, align 8
  %636 = getelementptr inbounds double, double* %635, i64 6
  %637 = load double, double* %636, align 8
  %638 = fmul double %634, %637
  %639 = load double*, double** %38, align 8
  %640 = getelementptr inbounds double, double* %639, i64 6
  store double %638, double* %640, align 8
  %641 = load double, double* %35, align 8
  %642 = load double*, double** %10, align 8
  %643 = getelementptr inbounds double, double* %642, i64 8
  %644 = load double, double* %643, align 8
  %645 = fmul double %641, %644
  %646 = load double*, double** %38, align 8
  %647 = getelementptr inbounds double, double* %646, i64 8
  store double %645, double* %647, align 8
  %648 = load double, double* %35, align 8
  %649 = load double*, double** %10, align 8
  %650 = getelementptr inbounds double, double* %649, i64 9
  %651 = load double, double* %650, align 8
  %652 = fmul double %648, %651
  %653 = load double*, double** %38, align 8
  %654 = getelementptr inbounds double, double* %653, i64 9
  store double %652, double* %654, align 8
  %655 = load double, double* %32, align 8
  %656 = load double*, double** %10, align 8
  %657 = getelementptr inbounds double, double* %656, i64 0
  %658 = load double, double* %657, align 8
  %659 = fmul double %655, %658
  %660 = load double*, double** %38, align 8
  %661 = getelementptr inbounds double, double* %660, i64 0
  %662 = load double, double* %661, align 8
  %663 = fadd double %662, %659
  store double %663, double* %661, align 8
  %664 = load double, double* %32, align 8
  %665 = load double*, double** %10, align 8
  %666 = getelementptr inbounds double, double* %665, i64 5
  %667 = load double, double* %666, align 8
  %668 = fmul double %664, %667
  %669 = load double*, double** %38, align 8
  %670 = getelementptr inbounds double, double* %669, i64 5
  %671 = load double, double* %670, align 8
  %672 = fadd double %671, %668
  store double %672, double* %670, align 8
  %673 = load double, double* %36, align 8
  %674 = load double*, double** %10, align 8
  %675 = getelementptr inbounds double, double* %674, i64 2
  %676 = load double, double* %675, align 8
  %677 = fmul double %673, %676
  %678 = load double*, double** %38, align 8
  %679 = getelementptr inbounds double, double* %678, i64 2
  %680 = load double, double* %679, align 8
  %681 = fadd double %680, %677
  store double %681, double* %679, align 8
  %682 = load double, double* %36, align 8
  %683 = load double*, double** %10, align 8
  %684 = getelementptr inbounds double, double* %683, i64 3
  %685 = load double, double* %684, align 8
  %686 = fmul double %682, %685
  %687 = load double*, double** %38, align 8
  %688 = getelementptr inbounds double, double* %687, i64 3
  %689 = load double, double* %688, align 8
  %690 = fadd double %689, %686
  store double %690, double* %688, align 8
  ret void
}

; Function Attrs: nounwind
declare void @llvm.instrprof.increment(i8*, i64, i32, i32) #4

; Function Attrs: nounwind
declare void @llvm.instrprof.increment.step(i8*, i64, i32, i32, i64) #4

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 4.0.0 (trunk 288896)"}
