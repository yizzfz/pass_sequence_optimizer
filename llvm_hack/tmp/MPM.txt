MPM.add(createPromoteMemoryToRegisterPass());
MPM.add(createSpeculativeExecutionIfHasBranchDivergencePass());
MPM.add(createGCOVProfilerPass(Options));
MPM.add(createArgumentPromotionPass());
MPM.add(createLibCallsShrinkWrapPass());
MPM.add(Inliner);
MPM.add(createLoopUnswitchPass(SizeLevel || OptLevel < 3));
MPM.add(createInstructionSimplifierPass());
MPM.add(createCorrelatedValuePropagationPass());
MPM.add(createLICMPass());
MPM.add(createMergedLoadStoreMotionPass());
MPM.add(createPGOInstrumentationUseLegacyPass(PGOInstrUse));
MPM.add(createLoopInterchangePass());
MPM.add(createFloat2IntPass());
MPM.add(createLoopSinkPass());
MPM.add(createLoopVectorizePass(0, 1));
MPM.add(createSCCPPass());
MPM.add(createLoopRotatePass(-1));
MPM.add(createPruneEHPass());
MPM.add(createLoopRerollPass());
MPM.add(createInstructionCombiningPass());
MPM.add(createEarlyCSEPass());
MPM.add(createCFGSimplificationPass());
MPM.add(createLoopLoadEliminationPass());
MPM.add(createBBVectorizePass());
MPM.add(createSLPVectorizerPass());
MPM.add(createMergeFunctionsPass());
MPM.add(createEarlyCSEPass());
MPM.add(createJumpThreadingPass());
MPM.add(createIndVarSimplifyPass());
MPM.add(createGlobalOptimizerPass());
MPM.add(createLoopUnswitchPass(SizeLevel || OptLevel < 3));
MPM.add(createMemCpyOptPass());
MPM.add(createInferFunctionAttrsLegacyPass());
MPM.add(createForceFunctionAttrsLegacyPass());
MPM.add(createLibCallsShrinkWrapPass());
MPM.add(createGlobalsAAWrapperPass());
MPM.add(createStripDeadPrototypesPass());
MPM.add(createPGOIndirectCallPromotionLegacyPass());
MPM.add(createSimpleLoopUnrollPass());
MPM.add(createLoopVectorizePass(DisableUnrollLoops, LoopVectorize));
MPM.add(createDeadArgEliminationPass());
MPM.add(createLoopUnswitchPass(0));
MPM.add(createLoopIdiomPass());
MPM.add(createGlobalOptimizerPass());
MPM.add(createLoopVersioningLICMPass());
MPM.add(createLoopLoadEliminationPass());
MPM.add(createPGOIndirectCallPromotionLegacyPass(/*InLTO = */ true));
MPM.add(createPostOrderFunctionAttrsLegacyPass());
MPM.add(createIPSCCPPass());
MPM.add(createArgumentPromotionPass());
MPM.add(createBitTrackingDCEPass());
MPM.add(createGVNPass(0));
MPM.add(createConstantMergePass());
MPM.add(createCFGSimplificationPass());
MPM.add(createCorrelatedValuePropagationPass());
MPM.add(createIPSCCPPass());
MPM.add(createGlobalDCEPass());
MPM.add(createInferFunctionAttrsLegacyPass());
MPM.add(createPGOInstrumentationGenLegacyPass());
MPM.add(createConstantMergePass());
MPM.add(createNameAnonGlobalPass());
MPM.add(createAggressiveDCEPass());
MPM.add(createSimpleLoopUnrollPass());
MPM.add(createReversePostOrderFunctionAttrsPass());
MPM.add(createSampleProfileLoaderPass(PGOSampleUse));
MPM.add(createPromoteMemoryToRegisterPass());
MPM.add(createEarlyCSEPass());
MPM.add(createEliminateAvailableExternallyPass());
MPM.add(createFunctionInliningPass(IP));
MPM.add(createMergeFunctionsPass());
MPM.add(createPostOrderFunctionAttrsLegacyPass());
MPM.add(createMergedLoadStoreMotionPass());
MPM.add(createLoadCombinePass());
MPM.add(createPruneEHPass());
MPM.add(createLoopDistributePass());
MPM.add(createInstructionCombiningPass(1));
MPM.add(createGlobalsAAWrapperPass());
MPM.add(createSROAPass());
MPM.add(createLoopUnrollPass());
MPM.add(createSROAPass());
MPM.add(createLoopDeletionPass());
MPM.add(createNameAnonGlobalPass());
MPM.add(createSLPVectorizerPass());
MPM.add(createLoopUnrollPass());
MPM.add(createBarrierNoopPass());
MPM.add(Inliner);
MPM.add(createStripSymbolsPass(true));
MPM.add(createPGOIndirectCallPromotionLegacyPass());
MPM.add(createGlobalDCEPass());
MPM.add(createEliminateAvailableExternallyPass());
MPM.add(createDeadStoreEliminationPass());
MPM.add(createStripDeadPrototypesPass());
MPM.add(createLoopUnrollPass());
MPM.add(createInstrProfilingLegacyPass(Options));
MPM.add(createBarrierNoopPass());
MPM.add(Builder->Inliner);
MPM.add(createReassociatePass());
MPM.add(createAlignmentFromAssumptionsPass());
MPM.add(createLoopRotatePass(SizeLevel == 2 ? 0 : -1));
MPM.add(createLICMPass());
MPM.add(createTailCallEliminationPass());
MPM.add(Inliner);
MPM.add(createReversePostOrderFunctionAttrsPass());
MPM.add(new TargetLibraryInfoWrapperPass(*TLII));
MPM.add(createDeadArgEliminationPass());
MPM.add(new TargetLibraryInfoWrapperPass(*LibraryInfo));
