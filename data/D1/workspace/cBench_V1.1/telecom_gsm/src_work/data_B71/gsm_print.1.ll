; ModuleID = 'gsm_print.ll'
source_filename = "gsm_print.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.gsm_state = type { [280 x i16], i16, i64, i32, [8 x i16], [2 x [8 x i16]], i16, i16, [9 x i16], i16, i8, i8 }

@.str = private unnamed_addr constant [62 x i8] c"LARc:\09%2.2d  %2.2d  %2.2d  %2.2d  %2.2d  %2.2d  %2.2d  %2.2d\0A\00", align 1
@.str.1 = private unnamed_addr constant [45 x i8] c"#1: \09Nc %4.4d    bc %d    Mc %d    xmaxc %d\0A\00", align 1
@.str.2 = private unnamed_addr constant [67 x i8] c"\09%.2d %.2d %.2d %.2d %.2d %.2d %.2d %.2d %.2d %.2d %.2d %.2d %.2d\0A\00", align 1
@.str.3 = private unnamed_addr constant [45 x i8] c"#2: \09Nc %4.4d    bc %d    Mc %d    xmaxc %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [45 x i8] c"#3: \09Nc %4.4d    bc %d    Mc %d    xmaxc %d\0A\00", align 1
@.str.5 = private unnamed_addr constant [45 x i8] c"#4: \09Nc %4.4d    bc %d    Mc %d    xmaxc %d\0A\00", align 1

; Function Attrs: noinline nounwind uwtable
define i32 @gsm_print(%struct._IO_FILE* nocapture, %struct.gsm_state* nocapture readnone, i8* readonly) local_unnamed_addr #0 {
  %4 = load i8, i8* %2, align 1
  %5 = and i8 %4, -16
  %6 = icmp eq i8 %5, -48
  br i1 %6, label %7, label %385

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds i8, i8* %2, i64 1
  %9 = shl i8 %4, 2
  %10 = and i8 %9, 60
  %11 = load i8, i8* %8, align 1
  %12 = zext i8 %11 to i32
  %13 = lshr i32 %12, 6
  %14 = zext i8 %10 to i32
  %15 = or i32 %13, %14
  %16 = getelementptr inbounds i8, i8* %2, i64 2
  %17 = and i8 %11, 63
  %18 = load i8, i8* %16, align 1
  %19 = zext i8 %18 to i32
  %20 = lshr i32 %19, 3
  %21 = getelementptr inbounds i8, i8* %2, i64 3
  %22 = shl i8 %18, 2
  %23 = and i8 %22, 28
  %24 = load i8, i8* %21, align 1
  %25 = zext i8 %24 to i16
  %26 = lshr i16 %25, 6
  %27 = zext i8 %23 to i16
  %28 = or i16 %27, %26
  %29 = lshr i16 %25, 2
  %30 = and i16 %29, 15
  %31 = getelementptr inbounds i8, i8* %2, i64 4
  %32 = shl i8 %24, 2
  %33 = and i8 %32, 12
  %34 = load i8, i8* %31, align 1
  %35 = zext i8 %34 to i16
  %36 = lshr i16 %35, 6
  %37 = zext i8 %33 to i16
  %38 = or i16 %37, %36
  %39 = lshr i16 %35, 3
  %40 = and i16 %39, 7
  %41 = getelementptr inbounds i8, i8* %2, i64 5
  %42 = and i8 %34, 7
  %43 = load i8, i8* %41, align 1
  %44 = zext i8 %43 to i32
  %45 = lshr i32 %44, 1
  %46 = getelementptr inbounds i8, i8* %2, i64 6
  %47 = shl i8 %43, 1
  %48 = and i8 %47, 2
  %49 = load i8, i8* %46, align 1
  %50 = zext i8 %49 to i16
  %51 = lshr i16 %50, 7
  %52 = zext i8 %48 to i16
  %53 = or i16 %52, %51
  %54 = lshr i16 %50, 5
  %55 = and i16 %54, 3
  %56 = getelementptr inbounds i8, i8* %2, i64 7
  %57 = shl i8 %49, 1
  %58 = and i8 %57, 62
  %59 = load i8, i8* %56, align 1
  %60 = zext i8 %59 to i16
  %61 = lshr i16 %60, 7
  %62 = zext i8 %58 to i16
  %63 = or i16 %62, %61
  %64 = lshr i16 %60, 4
  %65 = and i16 %64, 7
  %66 = lshr i16 %60, 1
  %67 = and i16 %66, 7
  %68 = getelementptr inbounds i8, i8* %2, i64 8
  %69 = shl i8 %59, 2
  %70 = and i8 %69, 4
  %71 = load i8, i8* %68, align 1
  %72 = zext i8 %71 to i16
  %73 = lshr i16 %72, 6
  %74 = zext i8 %70 to i16
  %75 = or i16 %74, %73
  %76 = lshr i16 %72, 3
  %77 = and i16 %76, 7
  %78 = getelementptr inbounds i8, i8* %2, i64 9
  %79 = and i8 %71, 7
  %80 = load i8, i8* %78, align 1
  %81 = zext i8 %80 to i16
  %82 = lshr i16 %81, 5
  %83 = lshr i16 %81, 2
  %84 = and i16 %83, 7
  %85 = getelementptr inbounds i8, i8* %2, i64 10
  %86 = shl i8 %80, 1
  %87 = and i8 %86, 6
  %88 = load i8, i8* %85, align 1
  %89 = zext i8 %88 to i16
  %90 = lshr i16 %89, 7
  %91 = zext i8 %87 to i16
  %92 = or i16 %91, %90
  %93 = lshr i16 %89, 4
  %94 = and i16 %93, 7
  %95 = lshr i16 %89, 1
  %96 = and i16 %95, 7
  %97 = getelementptr inbounds i8, i8* %2, i64 11
  %98 = shl i8 %88, 2
  %99 = and i8 %98, 4
  %100 = load i8, i8* %97, align 1
  %101 = zext i8 %100 to i16
  %102 = lshr i16 %101, 6
  %103 = zext i8 %99 to i16
  %104 = or i16 %103, %102
  %105 = lshr i16 %101, 3
  %106 = and i16 %105, 7
  %107 = getelementptr inbounds i8, i8* %2, i64 12
  %108 = and i8 %100, 7
  %109 = load i8, i8* %107, align 1
  %110 = zext i8 %109 to i32
  %111 = lshr i32 %110, 1
  %112 = getelementptr inbounds i8, i8* %2, i64 13
  %113 = shl i8 %109, 1
  %114 = and i8 %113, 2
  %115 = load i8, i8* %112, align 1
  %116 = zext i8 %115 to i16
  %117 = lshr i16 %116, 7
  %118 = zext i8 %114 to i16
  %119 = or i16 %118, %117
  %120 = lshr i16 %116, 5
  %121 = and i16 %120, 3
  %122 = getelementptr inbounds i8, i8* %2, i64 14
  %123 = shl i8 %115, 1
  %124 = and i8 %123, 62
  %125 = load i8, i8* %122, align 1
  %126 = zext i8 %125 to i16
  %127 = lshr i16 %126, 7
  %128 = zext i8 %124 to i16
  %129 = or i16 %128, %127
  %130 = lshr i16 %126, 4
  %131 = and i16 %130, 7
  %132 = lshr i16 %126, 1
  %133 = and i16 %132, 7
  %134 = getelementptr inbounds i8, i8* %2, i64 15
  %135 = shl i8 %125, 2
  %136 = and i8 %135, 4
  %137 = load i8, i8* %134, align 1
  %138 = zext i8 %137 to i16
  %139 = lshr i16 %138, 6
  %140 = zext i8 %136 to i16
  %141 = or i16 %140, %139
  %142 = lshr i16 %138, 3
  %143 = and i16 %142, 7
  %144 = getelementptr inbounds i8, i8* %2, i64 16
  %145 = and i8 %137, 7
  %146 = load i8, i8* %144, align 1
  %147 = zext i8 %146 to i16
  %148 = lshr i16 %147, 5
  %149 = lshr i16 %147, 2
  %150 = and i16 %149, 7
  %151 = getelementptr inbounds i8, i8* %2, i64 17
  %152 = shl i8 %146, 1
  %153 = and i8 %152, 6
  %154 = load i8, i8* %151, align 1
  %155 = zext i8 %154 to i16
  %156 = lshr i16 %155, 7
  %157 = zext i8 %153 to i16
  %158 = or i16 %157, %156
  %159 = lshr i16 %155, 4
  %160 = and i16 %159, 7
  %161 = lshr i16 %155, 1
  %162 = and i16 %161, 7
  %163 = getelementptr inbounds i8, i8* %2, i64 18
  %164 = shl i8 %154, 2
  %165 = and i8 %164, 4
  %166 = load i8, i8* %163, align 1
  %167 = zext i8 %166 to i16
  %168 = lshr i16 %167, 6
  %169 = zext i8 %165 to i16
  %170 = or i16 %169, %168
  %171 = lshr i16 %167, 3
  %172 = and i16 %171, 7
  %173 = getelementptr inbounds i8, i8* %2, i64 19
  %174 = and i8 %166, 7
  %175 = load i8, i8* %173, align 1
  %176 = zext i8 %175 to i32
  %177 = lshr i32 %176, 1
  %178 = getelementptr inbounds i8, i8* %2, i64 20
  %179 = shl i8 %175, 1
  %180 = and i8 %179, 2
  %181 = load i8, i8* %178, align 1
  %182 = zext i8 %181 to i16
  %183 = lshr i16 %182, 7
  %184 = zext i8 %180 to i16
  %185 = or i16 %184, %183
  %186 = lshr i16 %182, 5
  %187 = and i16 %186, 3
  %188 = getelementptr inbounds i8, i8* %2, i64 21
  %189 = shl i8 %181, 1
  %190 = and i8 %189, 62
  %191 = load i8, i8* %188, align 1
  %192 = zext i8 %191 to i16
  %193 = lshr i16 %192, 7
  %194 = zext i8 %190 to i16
  %195 = or i16 %194, %193
  %196 = lshr i16 %192, 4
  %197 = and i16 %196, 7
  %198 = lshr i16 %192, 1
  %199 = and i16 %198, 7
  %200 = getelementptr inbounds i8, i8* %2, i64 22
  %201 = shl i8 %191, 2
  %202 = and i8 %201, 4
  %203 = load i8, i8* %200, align 1
  %204 = zext i8 %203 to i16
  %205 = lshr i16 %204, 6
  %206 = zext i8 %202 to i16
  %207 = or i16 %206, %205
  %208 = lshr i16 %204, 3
  %209 = and i16 %208, 7
  %210 = getelementptr inbounds i8, i8* %2, i64 23
  %211 = and i8 %203, 7
  %212 = load i8, i8* %210, align 1
  %213 = zext i8 %212 to i16
  %214 = lshr i16 %213, 5
  %215 = lshr i16 %213, 2
  %216 = and i16 %215, 7
  %217 = getelementptr inbounds i8, i8* %2, i64 24
  %218 = shl i8 %212, 1
  %219 = and i8 %218, 6
  %220 = load i8, i8* %217, align 1
  %221 = zext i8 %220 to i16
  %222 = lshr i16 %221, 7
  %223 = zext i8 %219 to i16
  %224 = or i16 %223, %222
  %225 = lshr i16 %221, 4
  %226 = and i16 %225, 7
  %227 = lshr i16 %221, 1
  %228 = and i16 %227, 7
  %229 = getelementptr inbounds i8, i8* %2, i64 25
  %230 = shl i8 %220, 2
  %231 = and i8 %230, 4
  %232 = load i8, i8* %229, align 1
  %233 = zext i8 %232 to i16
  %234 = lshr i16 %233, 6
  %235 = zext i8 %231 to i16
  %236 = or i16 %235, %234
  %237 = lshr i16 %233, 3
  %238 = and i16 %237, 7
  %239 = getelementptr inbounds i8, i8* %2, i64 26
  %240 = and i8 %232, 7
  %241 = load i8, i8* %239, align 1
  %242 = zext i8 %241 to i32
  %243 = lshr i32 %242, 1
  %244 = getelementptr inbounds i8, i8* %2, i64 27
  %245 = shl i8 %241, 1
  %246 = and i8 %245, 2
  %247 = load i8, i8* %244, align 1
  %248 = zext i8 %247 to i16
  %249 = lshr i16 %248, 7
  %250 = zext i8 %246 to i16
  %251 = or i16 %250, %249
  %252 = lshr i16 %248, 5
  %253 = and i16 %252, 3
  %254 = getelementptr inbounds i8, i8* %2, i64 28
  %255 = shl i8 %247, 1
  %256 = and i8 %255, 62
  %257 = load i8, i8* %254, align 1
  %258 = zext i8 %257 to i16
  %259 = lshr i16 %258, 7
  %260 = zext i8 %256 to i16
  %261 = or i16 %260, %259
  %262 = lshr i16 %258, 4
  %263 = and i16 %262, 7
  %264 = lshr i16 %258, 1
  %265 = and i16 %264, 7
  %266 = getelementptr inbounds i8, i8* %2, i64 29
  %267 = shl i8 %257, 2
  %268 = and i8 %267, 4
  %269 = load i8, i8* %266, align 1
  %270 = zext i8 %269 to i16
  %271 = lshr i16 %270, 6
  %272 = zext i8 %268 to i16
  %273 = or i16 %272, %271
  %274 = lshr i16 %270, 3
  %275 = and i16 %274, 7
  %276 = getelementptr inbounds i8, i8* %2, i64 30
  %277 = and i8 %269, 7
  %278 = load i8, i8* %276, align 1
  %279 = zext i8 %278 to i16
  %280 = lshr i16 %279, 5
  %281 = lshr i16 %279, 2
  %282 = and i16 %281, 7
  %283 = getelementptr inbounds i8, i8* %2, i64 31
  %284 = shl i8 %278, 1
  %285 = and i8 %284, 6
  %286 = load i8, i8* %283, align 1
  %287 = zext i8 %286 to i16
  %288 = lshr i16 %287, 7
  %289 = zext i8 %285 to i16
  %290 = or i16 %289, %288
  %291 = lshr i16 %287, 4
  %292 = and i16 %291, 7
  %293 = lshr i16 %287, 1
  %294 = and i16 %293, 7
  %295 = getelementptr inbounds i8, i8* %2, i64 32
  %296 = shl i8 %286, 2
  %297 = and i8 %296, 4
  %298 = load i8, i8* %295, align 1
  %299 = zext i8 %298 to i16
  %300 = lshr i16 %299, 6
  %301 = zext i8 %297 to i16
  %302 = or i16 %301, %300
  %303 = lshr i16 %299, 3
  %304 = and i16 %303, 7
  %305 = and i8 %298, 7
  %306 = zext i8 %17 to i32
  %307 = zext i16 %28 to i32
  %308 = zext i16 %30 to i32
  %309 = zext i16 %38 to i32
  %310 = zext i16 %40 to i32
  %311 = zext i8 %42 to i32
  %312 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i32 %15, i32 %306, i32 %20, i32 %307, i32 %308, i32 %309, i32 %310, i32 %311)
  %313 = zext i16 %53 to i32
  %314 = zext i16 %55 to i32
  %315 = zext i16 %63 to i32
  %316 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0), i32 %45, i32 %313, i32 %314, i32 %315)
  %317 = zext i16 %65 to i32
  %318 = zext i16 %67 to i32
  %319 = zext i16 %75 to i32
  %320 = zext i16 %77 to i32
  %321 = zext i8 %79 to i32
  %322 = zext i16 %82 to i32
  %323 = zext i16 %84 to i32
  %324 = zext i16 %92 to i32
  %325 = zext i16 %94 to i32
  %326 = zext i16 %96 to i32
  %327 = zext i16 %104 to i32
  %328 = zext i16 %106 to i32
  %329 = zext i8 %108 to i32
  %330 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.2, i64 0, i64 0), i32 %317, i32 %318, i32 %319, i32 %320, i32 %321, i32 %322, i32 %323, i32 %324, i32 %325, i32 %326, i32 %327, i32 %328, i32 %329)
  %331 = zext i16 %119 to i32
  %332 = zext i16 %121 to i32
  %333 = zext i16 %129 to i32
  %334 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i32 %111, i32 %331, i32 %332, i32 %333)
  %335 = zext i16 %131 to i32
  %336 = zext i16 %133 to i32
  %337 = zext i16 %141 to i32
  %338 = zext i16 %143 to i32
  %339 = zext i8 %145 to i32
  %340 = zext i16 %148 to i32
  %341 = zext i16 %150 to i32
  %342 = zext i16 %158 to i32
  %343 = zext i16 %160 to i32
  %344 = zext i16 %162 to i32
  %345 = zext i16 %170 to i32
  %346 = zext i16 %172 to i32
  %347 = zext i8 %174 to i32
  %348 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.2, i64 0, i64 0), i32 %335, i32 %336, i32 %337, i32 %338, i32 %339, i32 %340, i32 %341, i32 %342, i32 %343, i32 %344, i32 %345, i32 %346, i32 %347)
  %349 = zext i16 %185 to i32
  %350 = zext i16 %187 to i32
  %351 = zext i16 %195 to i32
  %352 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4, i64 0, i64 0), i32 %177, i32 %349, i32 %350, i32 %351)
  %353 = zext i16 %197 to i32
  %354 = zext i16 %199 to i32
  %355 = zext i16 %207 to i32
  %356 = zext i16 %209 to i32
  %357 = zext i8 %211 to i32
  %358 = zext i16 %214 to i32
  %359 = zext i16 %216 to i32
  %360 = zext i16 %224 to i32
  %361 = zext i16 %226 to i32
  %362 = zext i16 %228 to i32
  %363 = zext i16 %236 to i32
  %364 = zext i16 %238 to i32
  %365 = zext i8 %240 to i32
  %366 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.2, i64 0, i64 0), i32 %353, i32 %354, i32 %355, i32 %356, i32 %357, i32 %358, i32 %359, i32 %360, i32 %361, i32 %362, i32 %363, i32 %364, i32 %365)
  %367 = zext i16 %251 to i32
  %368 = zext i16 %253 to i32
  %369 = zext i16 %261 to i32
  %370 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0), i32 %243, i32 %367, i32 %368, i32 %369)
  %371 = zext i16 %263 to i32
  %372 = zext i16 %265 to i32
  %373 = zext i16 %273 to i32
  %374 = zext i16 %275 to i32
  %375 = zext i8 %277 to i32
  %376 = zext i16 %280 to i32
  %377 = zext i16 %282 to i32
  %378 = zext i16 %290 to i32
  %379 = zext i16 %292 to i32
  %380 = zext i16 %294 to i32
  %381 = zext i16 %302 to i32
  %382 = zext i16 %304 to i32
  %383 = zext i8 %305 to i32
  %384 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.2, i64 0, i64 0), i32 %371, i32 %372, i32 %373, i32 %374, i32 %375, i32 %376, i32 %377, i32 %378, i32 %379, i32 %380, i32 %381, i32 %382, i32 %383)
  br label %385

; <label>:385:                                    ; preds = %3, %7
  %.0 = phi i32 [ 0, %7 ], [ -1, %3 ]
  ret i32 %.0
}

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"clang version 4.0.0 (tags/RELEASE_400/final)"}
