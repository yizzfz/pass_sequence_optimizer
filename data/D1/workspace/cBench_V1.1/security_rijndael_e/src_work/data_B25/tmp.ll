; ModuleID = 'aes.1.ll'
source_filename = "aes.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.aes = type { i64, i64, [64 x i64], [64 x i64], i8 }

@s_box = local_unnamed_addr constant [256 x i8] c"c|w{\F2ko\C50\01g+\FE\D7\ABv\CA\82\C9}\FAYG\F0\AD\D4\A2\AF\9C\A4r\C0\B7\FD\93&6?\F7\CC4\A5\E5\F1q\D81\15\04\C7#\C3\18\96\05\9A\07\12\80\E2\EB'\B2u\09\83,\1A\1BnZ\A0R;\D6\B3)\E3/\84S\D1\00\ED \FC\B1[j\CB\BE9JLX\CF\D0\EF\AA\FBCM3\85E\F9\02\7FP<\9F\A8Q\A3@\8F\92\9D8\F5\BC\B6\DA!\10\FF\F3\D2\CD\0C\13\EC_\97D\17\C4\A7~=d]\19s`\81O\DC\22*\90\88F\EE\B8\14\DE^\0B\DB\E02:\0AI\06$\5C\C2\D3\ACb\91\95\E4y\E7\C87m\8D\D5N\A9lV\F4\EAez\AE\08\BAx%.\1C\A6\B4\C6\E8\DDt\1FK\BD\8B\8Ap>\B5fH\03\F6\0Ea5W\B9\86\C1\1D\9E\E1\F8\98\11i\D9\8E\94\9B\1E\87\E9\CEU(\DF\8C\A1\89\0D\BF\E6BhA\99-\0F\B0T\BB\16", align 16
@inv_s_box = local_unnamed_addr constant [256 x i8] c"R\09j\D506\A58\BF@\A3\9E\81\F3\D7\FB|\E39\82\9B/\FF\874\8ECD\C4\DE\E9\CBT{\942\A6\C2#=\EEL\95\0BB\FA\C3N\08.\A1f(\D9$\B2v[\A2Im\8B\D1%r\F8\F6d\86h\98\16\D4\A4\5C\CC]e\B6\92lpHP\FD\ED\B9\DA^\15FW\A7\8D\9D\84\90\D8\AB\00\8C\BC\D3\0A\F7\E4X\05\B8\B3E\06\D0,\1E\8F\CA?\0F\02\C1\AF\BD\03\01\13\8Ak:\91\11AOg\DC\EA\97\F2\CF\CE\F0\B4\E6s\96\ACt\22\E7\AD5\85\E2\F97\E8\1Cu\DFnG\F1\1Aq\1D)\C5\89o\B7b\0E\AA\18\BE\1B\FCV>K\C6\D2y \9A\DB\C0\FEx\CDZ\F4\1F\DD\A83\88\07\C71\B1\12\10Y'\80\EC_`Q\7F\A9\19\B5J\0D-\E5z\9F\93\C9\9C\EF\A0\E0;M\AE*\F5\B0\C8\EB\BB<\83S\99a\17+\04~\BAw\D6&\E1i\14cU!\0C}", align 16
@rcon_tab = local_unnamed_addr constant [29 x i64] [i64 1, i64 2, i64 4, i64 8, i64 16, i64 32, i64 64, i64 128, i64 27, i64 54, i64 108, i64 216, i64 171, i64 77, i64 154, i64 47, i64 94, i64 188, i64 99, i64 198, i64 151, i64 53, i64 106, i64 212, i64 179, i64 125, i64 250, i64 239, i64 197], align 16
@ft_tab = local_unnamed_addr constant [4 x [256 x i64]] [[256 x i64] [i64 2774754246, i64 2222750968, i64 2574743534, i64 2373680118, i64 234025727, i64 3177933782, i64 2976870366, i64 1422247313, i64 1345335392, i64 50397442, i64 2842126286, i64 2099981142, i64 436141799, i64 1658312629, i64 3870010189, i64 2591454956, i64 1170918031, i64 2642575903, i64 1086966153, i64 2273148410, i64 368769775, i64 3948501426, i64 3376891790, i64 200339707, i64 3970805057, i64 1742001331, i64 4255294047, i64 3937382213, i64 3214711843, i64 4154762323, i64 2524082916, i64 1539358875, i64 3266819957, i64 486407649, i64 2928907069, i64 1780885068, i64 1513502316, i64 1094664062, i64 49805301, i64 1338821763, i64 1546925160, i64 4104496465, i64 887481809, i64 150073849, i64 2473685474, i64 1943591083, i64 1395732834, i64 1058346282, i64 201589768, i64 1388824469, i64 1696801606, i64 1589887901, i64 672667696, i64 2711000631, i64 251987210, i64 3046808111, i64 151455502, i64 907153956, i64 2608889883, i64 1038279391, i64 652995533, i64 1764173646, i64 3451040383, i64 2675275242, i64 453576978, i64 2659418909, i64 1949051992, i64 773462580, i64 756751158, i64 2993581788, i64 3998898868, i64 4221608027, i64 4132590244, i64 1295727478, i64 1641469623, i64 3467883389, i64 2066295122, i64 1055122397, i64 1898917726, i64 2542044179, i64 4115878822, i64 1758581177, i64 0, i64 753790401, i64 1612718144, i64 536673507, i64 3367088505, i64 3982187446, i64 3194645204, i64 1187761037, i64 3653156455, i64 1262041458, i64 3729410708, i64 3561770136, i64 3898103984, i64 1255133061, i64 1808847035, i64 720367557, i64 3853167183, i64 385612781, i64 3309519750, i64 3612167578, i64 1429418854, i64 2491778321, i64 3477423498, i64 284817897, i64 100794884, i64 2172616702, i64 4031795360, i64 1144798328, i64 3131023141, i64 3819481163, i64 4082192802, i64 4272137053, i64 3225436288, i64 2324664069, i64 2912064063, i64 3164445985, i64 1211644016, i64 83228145, i64 3753688163, i64 3249976951, i64 1977277103, i64 1663115586, i64 806359072, i64 452984805, i64 250868733, i64 1842533055, i64 1288555905, i64 336333848, i64 890442534, i64 804056259, i64 3781124030, i64 2727843637, i64 3427026056, i64 957814574, i64 1472513171, i64 4071073621, i64 2189328124, i64 1195195770, i64 2892260552, i64 3881655738, i64 723065138, i64 2507371494, i64 2690670784, i64 2558624025, i64 3511635870, i64 2145180835, i64 1713513028, i64 2116692564, i64 2878378043, i64 2206763019, i64 3393603212, i64 703524551, i64 3552098411, i64 1007948840, i64 2044649127, i64 3797835452, i64 487262998, i64 1994120109, i64 1004593371, i64 1446130276, i64 1312438900, i64 503974420, i64 3679013266, i64 168166924, i64 1814307912, i64 3831258296, i64 1573044895, i64 1859376061, i64 4021070915, i64 2791465668, i64 2828112185, i64 2761266481, i64 937747667, i64 2339994098, i64 854058965, i64 1137232011, i64 1496790894, i64 3077402074, i64 2358086913, i64 1691735473, i64 3528347292, i64 3769215305, i64 3027004632, i64 4199962284, i64 133494003, i64 636152527, i64 2942657994, i64 2390391540, i64 3920539207, i64 403179536, i64 3585784431, i64 2289596656, i64 1864705354, i64 1915629148, i64 605822008, i64 4054230615, i64 3350508659, i64 1371981463, i64 602466507, i64 2094914977, i64 2624877800, i64 555687742, i64 3712699286, i64 3703422305, i64 2257292045, i64 2240449039, i64 2423288032, i64 1111375484, i64 3300242801, i64 2858837708, i64 3628615824, i64 84083462, i64 32962295, i64 302911004, i64 2741068226, i64 1597322602, i64 4183250862, i64 3501832553, i64 2441512471, i64 1489093017, i64 656219450, i64 3114180135, i64 954327513, i64 335083755, i64 3013122091, i64 856756514, i64 3144247762, i64 1893325225, i64 2307821063, i64 2811532339, i64 3063651117, i64 572399164, i64 2458355477, i64 552200649, i64 1238290055, i64 4283782570, i64 2015897680, i64 2061492133, i64 2408352771, i64 4171342169, i64 2156497161, i64 386731290, i64 3669999461, i64 837215959, i64 3326231172, i64 3093850320, i64 3275833730, i64 2962856233, i64 1999449434, i64 286199582, i64 3417354363, i64 4233385128, i64 3602627437, i64 974525996], [256 x i64] [i64 1667483301, i64 2088564868, i64 2004348569, i64 2071721613, i64 4076011277, i64 1802229437, i64 1869602481, i64 3318059348, i64 808476752, i64 16843267, i64 1734856361, i64 724260477, i64 4278118169, i64 3621238114, i64 2880130534, i64 1987505306, i64 3402272581, i64 2189565853, i64 3385428288, i64 2105408135, i64 4210749205, i64 1499050731, i64 1195871945, i64 4042324747, i64 2913812972, i64 3570709351, i64 2728550397, i64 2947499498, i64 2627478463, i64 2762232823, i64 1920132246, i64 3233848155, i64 3082253762, i64 4261273884, i64 2475900334, i64 640044138, i64 909536346, i64 1061125697, i64 4160222466, i64 3435955023, i64 875849820, i64 2779075060, i64 3857043764, i64 4059166984, i64 1903288979, i64 3638078323, i64 825320019, i64 353708607, i64 67373068, i64 3351745874, i64 589514341, i64 3284376926, i64 404238376, i64 2526427041, i64 84216335, i64 2593796021, i64 117902857, i64 303178806, i64 2155879323, i64 3806519101, i64 3958099238, i64 656887401, i64 2998042573, i64 1970662047, i64 151589403, i64 2206408094, i64 741103732, i64 437924910, i64 454768173, i64 1852759218, i64 1515893998, i64 2694863867, i64 1381147894, i64 993752653, i64 3604395873, i64 3014884814, i64 690573947, i64 3823361342, i64 791633521, i64 2223248279, i64 1397991157, i64 3520182632, i64 0, i64 3991781676, i64 538984544, i64 4244431647, i64 2981198280, i64 1532737261, i64 1785386174, i64 3419114822, i64 3200149465, i64 960066123, i64 1246401758, i64 1280088276, i64 1482207464, i64 3486483786, i64 3503340395, i64 4025468202, i64 2863288293, i64 4227591446, i64 1128498885, i64 1296931543, i64 859006549, i64 2240090516, i64 1162185423, i64 4193904912, i64 33686534, i64 2139094657, i64 1347461360, i64 1010595908, i64 2678007226, i64 2829601763, i64 1364304627, i64 2745392638, i64 1077969088, i64 2408514954, i64 2459058093, i64 2644320700, i64 943222856, i64 4126535940, i64 3166462943, i64 3065411521, i64 3671764853, i64 555827811, i64 269492272, i64 4294960410, i64 4092853518, i64 3537026925, i64 3452797260, i64 202119188, i64 320022069, i64 3974939439, i64 1600110305, i64 2543269282, i64 1145342156, i64 387395129, i64 3301217111, i64 2812761586, i64 2122251394, i64 1027439175, i64 1684326572, i64 1566423783, i64 421081643, i64 1936975509, i64 1616953504, i64 2172721560, i64 1330618065, i64 3705447295, i64 572671078, i64 707417214, i64 2425371563, i64 2290617219, i64 1179028682, i64 4008625961, i64 3099093971, i64 336865340, i64 3739133817, i64 1583267042, i64 185275933, i64 3688607094, i64 3772832571, i64 842163286, i64 976909390, i64 168432670, i64 1229558491, i64 101059594, i64 606357612, i64 1549580516, i64 3267534685, i64 3553869166, i64 2896970735, i64 1650640038, i64 2442213800, i64 2509582756, i64 3840201527, i64 2038035083, i64 3890730290, i64 3368586051, i64 926379609, i64 1835915959, i64 2374828428, i64 3587551588, i64 1313774802, i64 2846444000, i64 1819072692, i64 1448520954, i64 4109693703, i64 3941256997, i64 1701169839, i64 2054878350, i64 2930657257, i64 134746136, i64 3132780501, i64 2021191816, i64 623200879, i64 774790258, i64 471611428, i64 2795919345, i64 3031724999, i64 3334903633, i64 3907570467, i64 3722289532, i64 1953818780, i64 522141217, i64 1263245021, i64 3183305180, i64 2341145990, i64 2324303749, i64 1886445712, i64 1044282434, i64 3048567236, i64 1718013098, i64 1212715224, i64 50529797, i64 4143380225, i64 235805714, i64 1633796771, i64 892693087, i64 1465364217, i64 3115936208, i64 2256934801, i64 3250690392, i64 488454695, i64 2661164985, i64 3789674808, i64 4177062675, i64 2560109491, i64 286335539, i64 1768542907, i64 3654920560, i64 2391672713, i64 2492740519, i64 2610638262, i64 505297954, i64 2273777042, i64 3924412704, i64 3469641545, i64 1431677695, i64 673730680, i64 3755976058, i64 2357986191, i64 2711706104, i64 2307459456, i64 218962455, i64 3216991706, i64 3873888049, i64 1111655622, i64 1751699640, i64 1094812355, i64 2576951728, i64 757946999, i64 252648977, i64 2964356043, i64 1414834428, i64 3149622742, i64 370551866], [256 x i64] [i64 1673962851, i64 2096661628, i64 2012125559, i64 2079755643, i64 4076801522, i64 1809235307, i64 1876865391, i64 3314635973, i64 811618352, i64 16909057, i64 1741597031, i64 727088427, i64 4276558334, i64 3618988759, i64 2874009259, i64 1995217526, i64 3398387146, i64 2183110018, i64 3381215433, i64 2113570685, i64 4209972730, i64 1504897881, i64 1200539975, i64 4042984432, i64 2906778797, i64 3568527316, i64 2724199842, i64 2940594863, i64 2619588508, i64 2756966308, i64 1927583346, i64 3231407040, i64 3077948087, i64 4259388669, i64 2470293139, i64 642542118, i64 913070646, i64 1065238847, i64 4160029431, i64 3431157708, i64 879254580, i64 2773611685, i64 3855693029, i64 4059629809, i64 1910674289, i64 3635114968, i64 828527409, i64 355090197, i64 67636228, i64 3348452039, i64 591815971, i64 3281870531, i64 405809176, i64 2520228246, i64 84545285, i64 2586817946, i64 118360327, i64 304363026, i64 2149292928, i64 3806281186, i64 3956090603, i64 659450151, i64 2994720178, i64 1978310517, i64 152181513, i64 2199756419, i64 743994412, i64 439627290, i64 456535323, i64 1859957358, i64 1521806938, i64 2690382752, i64 1386542674, i64 997608763, i64 3602342358, i64 3011366579, i64 693271337, i64 3822927587, i64 794718511, i64 2215876484, i64 1403450707, i64 3518589137, i64 0, i64 3988860141, i64 541089824, i64 4242743292, i64 2977548465, i64 1538714971, i64 1792327274, i64 3415033547, i64 3194476990, i64 963791673, i64 1251270218, i64 1285084236, i64 1487988824, i64 3481619151, i64 3501943760, i64 4022676207, i64 2857362858, i64 4226619131, i64 1132905795, i64 1301993293, i64 862344499, i64 2232521861, i64 1166724933, i64 4192801017, i64 33818114, i64 2147385727, i64 1352724560, i64 1014514748, i64 2670049951, i64 2823545768, i64 1369633617, i64 2740846243, i64 1082179648, i64 2399505039, i64 2453646738, i64 2636233885, i64 946882616, i64 4126213365, i64 3160661948, i64 3061301686, i64 3668932058, i64 557998881, i64 270544912, i64 4293204735, i64 4093447923, i64 3535760850, i64 3447803085, i64 202904588, i64 321271059, i64 3972214764, i64 1606345055, i64 2536874647, i64 1149815876, i64 388905239, i64 3297990596, i64 2807427751, i64 2130477694, i64 1031423805, i64 1690872932, i64 1572530013, i64 422718233, i64 1944491379, i64 1623236704, i64 2165938305, i64 1335808335, i64 3701702620, i64 574907938, i64 710180394, i64 2419829648, i64 2282455944, i64 1183631942, i64 4006029806, i64 3094074296, i64 338181140, i64 3735517662, i64 1589437022, i64 185998603, i64 3685578459, i64 3772464096, i64 845436466, i64 980700730, i64 169090570, i64 1234361161, i64 101452294, i64 608726052, i64 1555620956, i64 3265224130, i64 3552407251, i64 2890133420, i64 1657054818, i64 2436475025, i64 2503058581, i64 3839047652, i64 2045938553, i64 3889509095, i64 3364570056, i64 929978679, i64 1843050349, i64 2365688973, i64 3585172693, i64 1318900302, i64 2840191145, i64 1826141292, i64 1454176854, i64 4109567988, i64 3939444202, i64 1707781989, i64 2062847610, i64 2923948462, i64 135272456, i64 3127891386, i64 2029029496, i64 625635109, i64 777810478, i64 473441308, i64 2790781350, i64 3027486644, i64 3331805638, i64 3905627112, i64 3718347997, i64 1961401460, i64 524165407, i64 1268178251, i64 3177307325, i64 2332919435, i64 2316273034, i64 1893765232, i64 1048330814, i64 3044132021, i64 1724688998, i64 1217452104, i64 50726147, i64 4143383030, i64 236720654, i64 1640145761, i64 896163637, i64 1471084887, i64 3110719673, i64 2249691526, i64 3248052417, i64 490350365, i64 2653403550, i64 3789109473, i64 4176155640, i64 2553000856, i64 287453969, i64 1775418217, i64 3651760345, i64 2382858638, i64 2486413204, i64 2603464347, i64 507257374, i64 2266337927, i64 3922272489, i64 3464972750, i64 1437269845, i64 676362280, i64 3752164063, i64 2349043596, i64 2707028129, i64 2299101321, i64 219813645, i64 3211123391, i64 3872862694, i64 1115997762, i64 1758509160, i64 1099088705, i64 2569646233, i64 760903469, i64 253628687, i64 2960903088, i64 1420360788, i64 3144537787, i64 371997206], [256 x i64] [i64 3332727651, i64 4169432188, i64 4003034999, i64 4136467323, i64 4279104242, i64 3602738027, i64 3736170351, i64 2438251973, i64 1615867952, i64 33751297, i64 3467208551, i64 1451043627, i64 3877240574, i64 3043153879, i64 1306962859, i64 3969545846, i64 2403715786, i64 530416258, i64 2302724553, i64 4203183485, i64 4011195130, i64 3001768281, i64 2395555655, i64 4211863792, i64 1106029997, i64 3009926356, i64 1610457762, i64 1173008303, i64 599760028, i64 1408738468, i64 3835064946, i64 2606481600, i64 1975695287, i64 3776773629, i64 1034851219, i64 1282024998, i64 1817851446, i64 2118205247, i64 4110612471, i64 2203045068, i64 1750873140, i64 1374987685, i64 3509904869, i64 4178113009, i64 3801313649, i64 2876496088, i64 1649619249, i64 708777237, i64 135005188, i64 2505230279, i64 1181033251, i64 2640233411, i64 807933976, i64 933336726, i64 168756485, i64 800430746, i64 235472647, i64 607523346, i64 463175808, i64 3745374946, i64 3441880043, i64 1315514151, i64 2144187058, i64 3936318837, i64 303761673, i64 496927619, i64 1484008492, i64 875436570, i64 908925723, i64 3702681198, i64 3035519578, i64 1543217312, i64 2767606354, i64 1984772923, i64 3076642518, i64 2110698419, i64 1383803177, i64 3711886307, i64 1584475951, i64 328696964, i64 2801095507, i64 3110654417, i64 0, i64 3240947181, i64 1080041504, i64 3810524412, i64 2043195825, i64 3069008731, i64 3569248874, i64 2370227147, i64 1742323390, i64 1917532473, i64 2497595978, i64 2564049996, i64 2968016984, i64 2236272591, i64 3144405200, i64 3307925487, i64 1340451498, i64 3977706491, i64 2261074755, i64 2597801293, i64 1716859699, i64 294946181, i64 2328839493, i64 3910203897, i64 67502594, i64 4269899647, i64 2700103760, i64 2017737788, i64 632987551, i64 1273211048, i64 2733855057, i64 1576969123, i64 2160083008, i64 92966799, i64 1068339858, i64 566009245, i64 1883781176, i64 4043634165, i64 1675607228, i64 2009183926, i64 2943736538, i64 1113792801, i64 540020752, i64 3843751935, i64 4245615603, i64 3211645650, i64 2169294285, i64 403966988, i64 641012499, i64 3274697964, i64 3202441055, i64 899848087, i64 2295088196, i64 775493399, i64 2472002756, i64 1441965991, i64 4236410494, i64 2051489085, i64 3366741092, i64 3135724893, i64 841685273, i64 3868554099, i64 3231735904, i64 429425025, i64 2664517455, i64 2743065820, i64 1147544098, i64 1417554474, i64 1001099408, i64 193169544, i64 2362066502, i64 3341414126, i64 1809037496, i64 675025940, i64 2809781982, i64 3168951902, i64 371002123, i64 2910247899, i64 3678134496, i64 1683370546, i64 1951283770, i64 337512970, i64 2463844681, i64 201983494, i64 1215046692, i64 3101973596, i64 2673722050, i64 3178157011, i64 1139780780, i64 3299238498, i64 967348625, i64 832869781, i64 3543655652, i64 4069226873, i64 3576883175, i64 2336475336, i64 1851340599, i64 3669454189, i64 25988493, i64 2976175573, i64 2631028302, i64 1239460265, i64 3635702892, i64 2902087254, i64 4077384948, i64 3475368682, i64 3400492389, i64 4102978170, i64 1206496942, i64 270010376, i64 1876277946, i64 4035475576, i64 1248797989, i64 1550986798, i64 941890588, i64 1475454630, i64 1942467764, i64 2538718918, i64 3408128232, i64 2709315037, i64 3902567540, i64 1042358047, i64 2531085131, i64 1641856445, i64 226921355, i64 260409994, i64 3767562352, i64 2084716094, i64 1908716981, i64 3433719398, i64 2430093384, i64 100991747, i64 4144101110, i64 470945294, i64 3265487201, i64 1784624437, i64 2935576407, i64 1775286713, i64 395413126, i64 2572730817, i64 975641885, i64 666476190, i64 3644383713, i64 3943954680, i64 733190296, i64 573772049, i64 3535497577, i64 2842745305, i64 126455438, i64 866620564, i64 766942107, i64 1008868894, i64 361924487, i64 3374377449, i64 2269761230, i64 2868860245, i64 1350051880, i64 2776293343, i64 59739276, i64 1509466529, i64 159418761, i64 437718285, i64 1708834751, i64 3610371814, i64 2227585602, i64 3501746280, i64 2193834305, i64 699439513, i64 1517759789, i64 504434447, i64 2076946608, i64 2835108948, i64 1842789307, i64 742004246]], align 16
@it_tab = local_unnamed_addr constant [4 x [256 x i64]] [[256 x i64] [i64 1353184337, i64 1399144830, i64 3282310938, i64 2522752826, i64 3412831035, i64 4047871263, i64 2874735276, i64 2466505547, i64 1442459680, i64 4134368941, i64 2440481928, i64 625738485, i64 4242007375, i64 3620416197, i64 2151953702, i64 2409849525, i64 1230680542, i64 1729870373, i64 2551114309, i64 3787521629, i64 41234371, i64 317738113, i64 2744600205, i64 3338261355, i64 3881799427, i64 2510066197, i64 3950669247, i64 3663286933, i64 763608788, i64 3542185048, i64 694804553, i64 1154009486, i64 1787413109, i64 2021232372, i64 1799248025, i64 3715217703, i64 3058688446, i64 397248752, i64 1722556617, i64 3023752829, i64 407560035, i64 2184256229, i64 1613975959, i64 1165972322, i64 3765920945, i64 2226023355, i64 480281086, i64 2485848313, i64 1483229296, i64 436028815, i64 2272059028, i64 3086515026, i64 601060267, i64 3791801202, i64 1468997603, i64 715871590, i64 120122290, i64 63092015, i64 2591802758, i64 2768779219, i64 4068943920, i64 2997206819, i64 3127509762, i64 1552029421, i64 723308426, i64 2461301159, i64 4042393587, i64 2715969870, i64 3455375973, i64 3586000134, i64 526529745, i64 2331944644, i64 2639474228, i64 2689987490, i64 853641733, i64 1978398372, i64 971801355, i64 2867814464, i64 111112542, i64 1360031421, i64 4186579262, i64 1023860118, i64 2919579357, i64 1186850381, i64 3045938321, i64 90031217, i64 1876166148, i64 4279586912, i64 620468249, i64 2548678102, i64 3426959497, i64 2006899047, i64 3175278768, i64 2290845959, i64 945494503, i64 3689859193, i64 1191869601, i64 3910091388, i64 3374220536, i64 0, i64 2206629897, i64 1223502642, i64 2893025566, i64 1316117100, i64 4227796733, i64 1446544655, i64 517320253, i64 658058550, i64 1691946762, i64 564550760, i64 3511966619, i64 976107044, i64 2976320012, i64 266819475, i64 3533106868, i64 2660342555, i64 1338359936, i64 2720062561, i64 1766553434, i64 370807324, i64 179999714, i64 3844776128, i64 1138762300, i64 488053522, i64 185403662, i64 2915535858, i64 3114841645, i64 3366526484, i64 2233069911, i64 1275557295, i64 3151862254, i64 4250959779, i64 2670068215, i64 3170202204, i64 3309004356, i64 880737115, i64 1982415755, i64 3703972811, i64 1761406390, i64 1676797112, i64 3403428311, i64 277177154, i64 1076008723, i64 538035844, i64 2099530373, i64 4164795346, i64 288553390, i64 1839278535, i64 1261411869, i64 4080055004, i64 3964831245, i64 3504587127, i64 1813426987, i64 2579067049, i64 4199060497, i64 577038663, i64 3297574056, i64 440397984, i64 3626794326, i64 4019204898, i64 3343796615, i64 3251714265, i64 4272081548, i64 906744984, i64 3481400742, i64 685669029, i64 646887386, i64 2764025151, i64 3835509292, i64 227702864, i64 2613862250, i64 1648787028, i64 3256061430, i64 3904428176, i64 1593260334, i64 4121936770, i64 3196083615, i64 2090061929, i64 2838353263, i64 3004310991, i64 999926984, i64 2809993232, i64 1852021992, i64 2075868123, i64 158869197, i64 4095236462, i64 28809964, i64 2828685187, i64 1701746150, i64 2129067946, i64 147831841, i64 3873969647, i64 3650873274, i64 3459673930, i64 3557400554, i64 3598495785, i64 2947720241, i64 824393514, i64 815048134, i64 3227951669, i64 935087732, i64 2798289660, i64 2966458592, i64 366520115, i64 1251476721, i64 4158319681, i64 240176511, i64 804688151, i64 2379631990, i64 1303441219, i64 1414376140, i64 3741619940, i64 3820343710, i64 461924940, i64 3089050817, i64 2136040774, i64 82468509, i64 1563790337, i64 1937016826, i64 776014843, i64 1511876531, i64 1389550482, i64 861278441, i64 323475053, i64 2355222426, i64 2047648055, i64 2383738969, i64 2302415851, i64 3995576782, i64 902390199, i64 3991215329, i64 1018251130, i64 1507840668, i64 1064563285, i64 2043548696, i64 3208103795, i64 3939366739, i64 1537932639, i64 342834655, i64 2262516856, i64 2180231114, i64 1053059257, i64 741614648, i64 1598071746, i64 1925389590, i64 203809468, i64 2336832552, i64 1100287487, i64 1895934009, i64 3736275976, i64 2632234200, i64 2428589668, i64 1636092795, i64 1890988757, i64 1952214088, i64 1113045200], [256 x i64] [i64 2817806672, i64 1698790995, i64 2752977603, i64 1579629206, i64 1806384075, i64 1167925233, i64 1492823211, i64 65227667, i64 4197458005, i64 1836494326, i64 1993115793, i64 1275262245, i64 3622129660, i64 3408578007, i64 1144333952, i64 2741155215, i64 1521606217, i64 465184103, i64 250234264, i64 3237895649, i64 1966064386, i64 4031545618, i64 2537983395, i64 4191382470, i64 1603208167, i64 2626819477, i64 2054012907, i64 1498584538, i64 2210321453, i64 561273043, i64 1776306473, i64 3368652356, i64 2311222634, i64 2039411832, i64 1045993835, i64 1907959773, i64 1340194486, i64 2911432727, i64 2887829862, i64 986611124, i64 1256153880, i64 823846274, i64 860985184, i64 2136171077, i64 2003087840, i64 2926295940, i64 2692873756, i64 722008468, i64 1749577816, i64 4249194265, i64 1826526343, i64 4168831671, i64 3547573027, i64 38499042, i64 2401231703, i64 2874500650, i64 686535175, i64 3266653955, i64 2076542618, i64 137876389, i64 2267558130, i64 2780767154, i64 1778582202, i64 2182540636, i64 483363371, i64 3027871634, i64 4060607472, i64 3798552225, i64 4107953613, i64 3188000469, i64 1647628575, i64 4272342154, i64 1395537053, i64 1442030240, i64 3783918898, i64 3958809717, i64 3968011065, i64 4016062634, i64 2675006982, i64 275692881, i64 2317434617, i64 115185213, i64 88006062, i64 3185986886, i64 2371129781, i64 1573155077, i64 3557164143, i64 357589247, i64 4221049124, i64 3921532567, i64 1128303052, i64 2665047927, i64 1122545853, i64 2341013384, i64 1528424248, i64 4006115803, i64 175939911, i64 256015593, i64 512030921, i64 0, i64 2256537987, i64 3979031112, i64 1880170156, i64 1918528590, i64 4279172603, i64 948244310, i64 3584965918, i64 959264295, i64 3641641572, i64 2791073825, i64 1415289809, i64 775300154, i64 1728711857, i64 3881276175, i64 2532226258, i64 2442861470, i64 3317727311, i64 551313826, i64 1266113129, i64 437394454, i64 3130253834, i64 715178213, i64 3760340035, i64 387650077, i64 218697227, i64 3347837613, i64 2830511545, i64 2837320904, i64 435246981, i64 125153100, i64 3717852859, i64 1618977789, i64 637663135, i64 4117912764, i64 996558021, i64 2130402100, i64 692292470, i64 3324234716, i64 4243437160, i64 4058298467, i64 3694254026, i64 2237874704, i64 580326208, i64 298222624, i64 608863613, i64 1035719416, i64 855223825, i64 2703869805, i64 798891339, i64 817028339, i64 1384517100, i64 3821107152, i64 380840812, i64 3111168409, i64 1217663482, i64 1693009698, i64 2365368516, i64 1072734234, i64 746411736, i64 2419270383, i64 1313441735, i64 3510163905, i64 2731183358, i64 198481974, i64 2180359887, i64 3732579624, i64 2394413606, i64 3215802276, i64 2637835492, i64 2457358349, i64 3428805275, i64 1182684258, i64 328070850, i64 3101200616, i64 4147719774, i64 2948825845, i64 2153619390, i64 2479909244, i64 768962473, i64 304467891, i64 2578237499, i64 2098729127, i64 1671227502, i64 3141262203, i64 2015808777, i64 408514292, i64 3080383489, i64 2588902312, i64 1855317605, i64 3875515006, i64 3485212936, i64 3893751782, i64 2615655129, i64 913263310, i64 161475284, i64 2091919830, i64 2997105071, i64 591342129, i64 2493892144, i64 1721906624, i64 3159258167, i64 3397581990, i64 3499155632, i64 3634836245, i64 2550460746, i64 3672916471, i64 1355644686, i64 4136703791, i64 3595400845, i64 2968470349, i64 1303039060, i64 76997855, i64 3050413795, i64 2288667675, i64 523026872, i64 1365591679, i64 3932069124, i64 898367837, i64 1955068531, i64 1091304238, i64 493335386, i64 3537605202, i64 1443948851, i64 1205234963, i64 1641519756, i64 211892090, i64 351820174, i64 1007938441, i64 665439982, i64 3378624309, i64 3843875309, i64 2974251580, i64 3755121753, i64 1945261375, i64 3457423481, i64 935818175, i64 3455538154, i64 2868731739, i64 1866325780, i64 3678697606, i64 4088384129, i64 3295197502, i64 874788908, i64 1084473951, i64 3273463410, i64 635616268, i64 1228679307, i64 2500722497, i64 27801969, i64 3003910366, i64 3837057180, i64 3243664528, i64 2227927905, i64 3056784752, i64 1550600308, i64 1471729730], [256 x i64] [i64 4098969767, i64 1098797925, i64 387629988, i64 658151006, i64 2872822635, i64 2636116293, i64 4205620056, i64 3813380867, i64 807425530, i64 1991112301, i64 3431502198, i64 49620300, i64 3847224535, i64 717608907, i64 891715652, i64 1656065955, i64 2984135002, i64 3123013403, i64 3930429454, i64 4267565504, i64 801309301, i64 1283527408, i64 1183687575, i64 3547055865, i64 2399397727, i64 2450888092, i64 1841294202, i64 1385552473, i64 3201576323, i64 1951978273, i64 3762891113, i64 3381544136, i64 3262474889, i64 2398386297, i64 1486449470, i64 3106397553, i64 3787372111, i64 2297436077, i64 550069932, i64 3464344634, i64 3747813450, i64 451248689, i64 1368875059, i64 1398949247, i64 1689378935, i64 1807451310, i64 2180914336, i64 150574123, i64 1215322216, i64 1167006205, i64 3734275948, i64 2069018616, i64 1940595667, i64 1265820162, i64 534992783, i64 1432758955, i64 3954313000, i64 3039757250, i64 3313932923, i64 936617224, i64 674296455, i64 3206787749, i64 50510442, i64 384654466, i64 3481938716, i64 2041025204, i64 133427442, i64 1766760930, i64 3664104948, i64 84334014, i64 886120290, i64 2797898494, i64 775200083, i64 4087521365, i64 2315596513, i64 4137973227, i64 2198551020, i64 1614850799, i64 1901987487, i64 1857900816, i64 557775242, i64 3717610758, i64 1054715397, i64 3863824061, i64 1418835341, i64 3295741277, i64 100954068, i64 1348534037, i64 2551784699, i64 3184957417, i64 1082772547, i64 3647436702, i64 3903896898, i64 2298972299, i64 434583643, i64 3363429358, i64 2090944266, i64 1115482383, i64 2230896926, i64 0, i64 2148107142, i64 724715757, i64 287222896, i64 1517047410, i64 251526143, i64 2232374840, i64 2923241173, i64 758523705, i64 252339417, i64 1550328230, i64 1536938324, i64 908343854, i64 168604007, i64 1469255655, i64 4004827798, i64 2602278545, i64 3229634501, i64 3697386016, i64 2002413899, i64 303830554, i64 2481064634, i64 2696996138, i64 574374880, i64 454171927, i64 151915277, i64 2347937223, i64 3056449960, i64 504678569, i64 4049044761, i64 1974422535, i64 2582559709, i64 2141453664, i64 33005350, i64 1918680309, i64 1715782971, i64 4217058430, i64 1133213225, i64 600562886, i64 3988154620, i64 3837289457, i64 836225756, i64 1665273989, i64 2534621218, i64 3330547729, i64 1250262308, i64 3151165501, i64 4188934450, i64 700935585, i64 2652719919, i64 3000824624, i64 2249059410, i64 3245854947, i64 3005967382, i64 1890163129, i64 2484206152, i64 3913753188, i64 4238918796, i64 4037024319, i64 2102843436, i64 857927568, i64 1233635150, i64 953795025, i64 3398237858, i64 3566745099, i64 4121350017, i64 2057644254, i64 3084527246, i64 2906629311, i64 976020637, i64 2018512274, i64 1600822220, i64 2119459398, i64 2381758995, i64 3633375416, i64 959340279, i64 3280139695, i64 1570750080, i64 3496574099, i64 3580864813, i64 634368786, i64 2898803609, i64 403744637, i64 2632478307, i64 1004239803, i64 650971512, i64 1500443672, i64 2599158199, i64 1334028442, i64 2514904430, i64 4289363686, i64 3156281551, i64 368043752, i64 3887782299, i64 1867173430, i64 2682967049, i64 2955531900, i64 2754719666, i64 1059729699, i64 2781229204, i64 2721431654, i64 1316239292, i64 2197595850, i64 2430644432, i64 2805143000, i64 82922136, i64 3963746266, i64 3447656016, i64 2434215926, i64 1299615190, i64 4014165424, i64 2865517645, i64 2531581700, i64 3516851125, i64 1783372680, i64 750893087, i64 1699118929, i64 1587348714, i64 2348899637, i64 2281337716, i64 201010753, i64 1739807261, i64 3683799762, i64 283718486, i64 3597472583, i64 3617229921, i64 2704767500, i64 4166618644, i64 334203196, i64 2848910887, i64 1639396809, i64 484568549, i64 1199193265, i64 3533461983, i64 4065673075, i64 337148366, i64 3346251575, i64 4149471949, i64 4250885034, i64 1038029935, i64 1148749531, i64 2949284339, i64 1756970692, i64 607661108, i64 2747424576, i64 488010435, i64 3803974693, i64 1009290057, i64 234832277, i64 2822336769, i64 201907891, i64 3034094820, i64 1449431233, i64 3413860740, i64 852848822, i64 1816687708, i64 3100656215], [256 x i64] [i64 1364240372, i64 2119394625, i64 449029143, i64 982933031, i64 1003187115, i64 535905693, i64 2896910586, i64 1267925987, i64 542505520, i64 2918608246, i64 2291234508, i64 4112862210, i64 1341970405, i64 3319253802, i64 645940277, i64 3046089570, i64 3729349297, i64 627514298, i64 1167593194, i64 1575076094, i64 3271718191, i64 2165502028, i64 2376308550, i64 1808202195, i64 65494927, i64 362126482, i64 3219880557, i64 2514114898, i64 3559752638, i64 1490231668, i64 1227450848, i64 2386872521, i64 1969916354, i64 4101536142, i64 2573942360, i64 668823993, i64 3199619041, i64 4028083592, i64 3378949152, i64 2108963534, i64 1662536415, i64 3850514714, i64 2539664209, i64 1648721747, i64 2984277860, i64 3146034795, i64 4263288961, i64 4187237128, i64 1884842056, i64 2400845125, i64 2491903198, i64 1387788411, i64 2871251827, i64 1927414347, i64 3814166303, i64 1714072405, i64 2986813675, i64 788775605, i64 2258271173, i64 3550808119, i64 821200680, i64 598910399, i64 45771267, i64 3982262806, i64 2318081231, i64 2811409529, i64 4092654087, i64 1319232105, i64 1707996378, i64 114671109, i64 3508494900, i64 3297443494, i64 882725678, i64 2728416755, i64 87220618, i64 2759191542, i64 188345475, i64 1084944224, i64 1577492337, i64 3176206446, i64 1056541217, i64 2520581853, i64 3719169342, i64 1296481766, i64 2444594516, i64 1896177092, i64 74437638, i64 1627329872, i64 421854104, i64 3600279997, i64 2311865152, i64 1735892697, i64 2965193448, i64 126389129, i64 3879230233, i64 2044456648, i64 2705787516, i64 2095648578, i64 4173930116, i64 0, i64 159614592, i64 843640107, i64 514617361, i64 1817080410, i64 4261150478, i64 257308805, i64 1025430958, i64 908540205, i64 174381327, i64 1747035740, i64 2614187099, i64 607792694, i64 212952842, i64 2467293015, i64 3033700078, i64 463376795, i64 2152711616, i64 1638015196, i64 1516850039, i64 471210514, i64 3792353939, i64 3236244128, i64 1011081250, i64 303896347, i64 235605257, i64 4071475083, i64 767142070, i64 348694814, i64 1468340721, i64 2940995445, i64 4005289369, i64 2751291519, i64 4154402305, i64 1555887474, i64 1153776486, i64 1530167035, i64 2339776835, i64 3420243491, i64 3060333805, i64 3093557732, i64 3620396081, i64 1108378979, i64 322970263, i64 2216694214, i64 2239571018, i64 3539484091, i64 2920362745, i64 3345850665, i64 491466654, i64 3706925234, i64 233591430, i64 2010178497, i64 728503987, i64 2845423984, i64 301615252, i64 1193436393, i64 2831453436, i64 2686074864, i64 1457007741, i64 586125363, i64 2277985865, i64 3653357880, i64 2365498058, i64 2553678804, i64 2798617077, i64 2770919034, i64 3659959991, i64 1067761581, i64 753179962, i64 1343066744, i64 1788595295, i64 1415726718, i64 4139914125, i64 2431170776, i64 777975609, i64 2197139395, i64 2680062045, i64 1769771984, i64 1873358293, i64 3484619301, i64 3359349164, i64 279411992, i64 3899548572, i64 3682319163, i64 3439949862, i64 1861490777, i64 3959535514, i64 2208864847, i64 3865407125, i64 2860443391, i64 554225596, i64 4024887317, i64 3134823399, i64 1255028335, i64 3939764639, i64 701922480, i64 833598116, i64 707863359, i64 3325072549, i64 901801634, i64 1949809742, i64 4238789250, i64 3769684112, i64 857069735, i64 4048197636, i64 1106762476, i64 2131644621, i64 389019281, i64 1989006925, i64 1129165039, i64 3428076970, i64 3839820950, i64 2665723345, i64 1276872810, i64 3250069292, i64 1182749029, i64 2634345054, i64 22885772, i64 4201870471, i64 4214112523, i64 3009027431, i64 2454901467, i64 3912455696, i64 1829980118, i64 2592891351, i64 930745505, i64 1502483704, i64 3951639571, i64 3471714217, i64 3073755489, i64 3790464284, i64 2050797895, i64 2623135698, i64 1430221810, i64 410635796, i64 1941911495, i64 1407897079, i64 1599843069, i64 3742658365, i64 2022103876, i64 3397514159, i64 3107898472, i64 942421028, i64 3261022371, i64 376619805, i64 3154912738, i64 680216892, i64 4282488077, i64 963707304, i64 148812556, i64 3634160820, i64 1687208278, i64 2069988555, i64 3580933682, i64 1215585388, i64 3494008760]], align 16
@fl_tab = local_unnamed_addr constant [4 x [256 x i64]] [[256 x i64] [i64 99, i64 124, i64 119, i64 123, i64 242, i64 107, i64 111, i64 197, i64 48, i64 1, i64 103, i64 43, i64 254, i64 215, i64 171, i64 118, i64 202, i64 130, i64 201, i64 125, i64 250, i64 89, i64 71, i64 240, i64 173, i64 212, i64 162, i64 175, i64 156, i64 164, i64 114, i64 192, i64 183, i64 253, i64 147, i64 38, i64 54, i64 63, i64 247, i64 204, i64 52, i64 165, i64 229, i64 241, i64 113, i64 216, i64 49, i64 21, i64 4, i64 199, i64 35, i64 195, i64 24, i64 150, i64 5, i64 154, i64 7, i64 18, i64 128, i64 226, i64 235, i64 39, i64 178, i64 117, i64 9, i64 131, i64 44, i64 26, i64 27, i64 110, i64 90, i64 160, i64 82, i64 59, i64 214, i64 179, i64 41, i64 227, i64 47, i64 132, i64 83, i64 209, i64 0, i64 237, i64 32, i64 252, i64 177, i64 91, i64 106, i64 203, i64 190, i64 57, i64 74, i64 76, i64 88, i64 207, i64 208, i64 239, i64 170, i64 251, i64 67, i64 77, i64 51, i64 133, i64 69, i64 249, i64 2, i64 127, i64 80, i64 60, i64 159, i64 168, i64 81, i64 163, i64 64, i64 143, i64 146, i64 157, i64 56, i64 245, i64 188, i64 182, i64 218, i64 33, i64 16, i64 255, i64 243, i64 210, i64 205, i64 12, i64 19, i64 236, i64 95, i64 151, i64 68, i64 23, i64 196, i64 167, i64 126, i64 61, i64 100, i64 93, i64 25, i64 115, i64 96, i64 129, i64 79, i64 220, i64 34, i64 42, i64 144, i64 136, i64 70, i64 238, i64 184, i64 20, i64 222, i64 94, i64 11, i64 219, i64 224, i64 50, i64 58, i64 10, i64 73, i64 6, i64 36, i64 92, i64 194, i64 211, i64 172, i64 98, i64 145, i64 149, i64 228, i64 121, i64 231, i64 200, i64 55, i64 109, i64 141, i64 213, i64 78, i64 169, i64 108, i64 86, i64 244, i64 234, i64 101, i64 122, i64 174, i64 8, i64 186, i64 120, i64 37, i64 46, i64 28, i64 166, i64 180, i64 198, i64 232, i64 221, i64 116, i64 31, i64 75, i64 189, i64 139, i64 138, i64 112, i64 62, i64 181, i64 102, i64 72, i64 3, i64 246, i64 14, i64 97, i64 53, i64 87, i64 185, i64 134, i64 193, i64 29, i64 158, i64 225, i64 248, i64 152, i64 17, i64 105, i64 217, i64 142, i64 148, i64 155, i64 30, i64 135, i64 233, i64 206, i64 85, i64 40, i64 223, i64 140, i64 161, i64 137, i64 13, i64 191, i64 230, i64 66, i64 104, i64 65, i64 153, i64 45, i64 15, i64 176, i64 84, i64 187, i64 22], [256 x i64] [i64 25344, i64 31744, i64 30464, i64 31488, i64 61952, i64 27392, i64 28416, i64 50432, i64 12288, i64 256, i64 26368, i64 11008, i64 65024, i64 55040, i64 43776, i64 30208, i64 51712, i64 33280, i64 51456, i64 32000, i64 64000, i64 22784, i64 18176, i64 61440, i64 44288, i64 54272, i64 41472, i64 44800, i64 39936, i64 41984, i64 29184, i64 49152, i64 46848, i64 64768, i64 37632, i64 9728, i64 13824, i64 16128, i64 63232, i64 52224, i64 13312, i64 42240, i64 58624, i64 61696, i64 28928, i64 55296, i64 12544, i64 5376, i64 1024, i64 50944, i64 8960, i64 49920, i64 6144, i64 38400, i64 1280, i64 39424, i64 1792, i64 4608, i64 32768, i64 57856, i64 60160, i64 9984, i64 45568, i64 29952, i64 2304, i64 33536, i64 11264, i64 6656, i64 6912, i64 28160, i64 23040, i64 40960, i64 20992, i64 15104, i64 54784, i64 45824, i64 10496, i64 58112, i64 12032, i64 33792, i64 21248, i64 53504, i64 0, i64 60672, i64 8192, i64 64512, i64 45312, i64 23296, i64 27136, i64 51968, i64 48640, i64 14592, i64 18944, i64 19456, i64 22528, i64 52992, i64 53248, i64 61184, i64 43520, i64 64256, i64 17152, i64 19712, i64 13056, i64 34048, i64 17664, i64 63744, i64 512, i64 32512, i64 20480, i64 15360, i64 40704, i64 43008, i64 20736, i64 41728, i64 16384, i64 36608, i64 37376, i64 40192, i64 14336, i64 62720, i64 48128, i64 46592, i64 55808, i64 8448, i64 4096, i64 65280, i64 62208, i64 53760, i64 52480, i64 3072, i64 4864, i64 60416, i64 24320, i64 38656, i64 17408, i64 5888, i64 50176, i64 42752, i64 32256, i64 15616, i64 25600, i64 23808, i64 6400, i64 29440, i64 24576, i64 33024, i64 20224, i64 56320, i64 8704, i64 10752, i64 36864, i64 34816, i64 17920, i64 60928, i64 47104, i64 5120, i64 56832, i64 24064, i64 2816, i64 56064, i64 57344, i64 12800, i64 14848, i64 2560, i64 18688, i64 1536, i64 9216, i64 23552, i64 49664, i64 54016, i64 44032, i64 25088, i64 37120, i64 38144, i64 58368, i64 30976, i64 59136, i64 51200, i64 14080, i64 27904, i64 36096, i64 54528, i64 19968, i64 43264, i64 27648, i64 22016, i64 62464, i64 59904, i64 25856, i64 31232, i64 44544, i64 2048, i64 47616, i64 30720, i64 9472, i64 11776, i64 7168, i64 42496, i64 46080, i64 50688, i64 59392, i64 56576, i64 29696, i64 7936, i64 19200, i64 48384, i64 35584, i64 35328, i64 28672, i64 15872, i64 46336, i64 26112, i64 18432, i64 768, i64 62976, i64 3584, i64 24832, i64 13568, i64 22272, i64 47360, i64 34304, i64 49408, i64 7424, i64 40448, i64 57600, i64 63488, i64 38912, i64 4352, i64 26880, i64 55552, i64 36352, i64 37888, i64 39680, i64 7680, i64 34560, i64 59648, i64 52736, i64 21760, i64 10240, i64 57088, i64 35840, i64 41216, i64 35072, i64 3328, i64 48896, i64 58880, i64 16896, i64 26624, i64 16640, i64 39168, i64 11520, i64 3840, i64 45056, i64 21504, i64 47872, i64 5632], [256 x i64] [i64 6488064, i64 8126464, i64 7798784, i64 8060928, i64 15859712, i64 7012352, i64 7274496, i64 12910592, i64 3145728, i64 65536, i64 6750208, i64 2818048, i64 16646144, i64 14090240, i64 11206656, i64 7733248, i64 13238272, i64 8519680, i64 13172736, i64 8192000, i64 16384000, i64 5832704, i64 4653056, i64 15728640, i64 11337728, i64 13893632, i64 10616832, i64 11468800, i64 10223616, i64 10747904, i64 7471104, i64 12582912, i64 11993088, i64 16580608, i64 9633792, i64 2490368, i64 3538944, i64 4128768, i64 16187392, i64 13369344, i64 3407872, i64 10813440, i64 15007744, i64 15794176, i64 7405568, i64 14155776, i64 3211264, i64 1376256, i64 262144, i64 13041664, i64 2293760, i64 12779520, i64 1572864, i64 9830400, i64 327680, i64 10092544, i64 458752, i64 1179648, i64 8388608, i64 14811136, i64 15400960, i64 2555904, i64 11665408, i64 7667712, i64 589824, i64 8585216, i64 2883584, i64 1703936, i64 1769472, i64 7208960, i64 5898240, i64 10485760, i64 5373952, i64 3866624, i64 14024704, i64 11730944, i64 2686976, i64 14876672, i64 3080192, i64 8650752, i64 5439488, i64 13697024, i64 0, i64 15532032, i64 2097152, i64 16515072, i64 11599872, i64 5963776, i64 6946816, i64 13303808, i64 12451840, i64 3735552, i64 4849664, i64 4980736, i64 5767168, i64 13565952, i64 13631488, i64 15663104, i64 11141120, i64 16449536, i64 4390912, i64 5046272, i64 3342336, i64 8716288, i64 4521984, i64 16318464, i64 131072, i64 8323072, i64 5242880, i64 3932160, i64 10420224, i64 11010048, i64 5308416, i64 10682368, i64 4194304, i64 9371648, i64 9568256, i64 10289152, i64 3670016, i64 16056320, i64 12320768, i64 11927552, i64 14286848, i64 2162688, i64 1048576, i64 16711680, i64 15925248, i64 13762560, i64 13434880, i64 786432, i64 1245184, i64 15466496, i64 6225920, i64 9895936, i64 4456448, i64 1507328, i64 12845056, i64 10944512, i64 8257536, i64 3997696, i64 6553600, i64 6094848, i64 1638400, i64 7536640, i64 6291456, i64 8454144, i64 5177344, i64 14417920, i64 2228224, i64 2752512, i64 9437184, i64 8912896, i64 4587520, i64 15597568, i64 12058624, i64 1310720, i64 14548992, i64 6160384, i64 720896, i64 14352384, i64 14680064, i64 3276800, i64 3801088, i64 655360, i64 4784128, i64 393216, i64 2359296, i64 6029312, i64 12713984, i64 13828096, i64 11272192, i64 6422528, i64 9502720, i64 9764864, i64 14942208, i64 7929856, i64 15138816, i64 13107200, i64 3604480, i64 7143424, i64 9240576, i64 13959168, i64 5111808, i64 11075584, i64 7077888, i64 5636096, i64 15990784, i64 15335424, i64 6619136, i64 7995392, i64 11403264, i64 524288, i64 12189696, i64 7864320, i64 2424832, i64 3014656, i64 1835008, i64 10878976, i64 11796480, i64 12976128, i64 15204352, i64 14483456, i64 7602176, i64 2031616, i64 4915200, i64 12386304, i64 9109504, i64 9043968, i64 7340032, i64 4063232, i64 11862016, i64 6684672, i64 4718592, i64 196608, i64 16121856, i64 917504, i64 6356992, i64 3473408, i64 5701632, i64 12124160, i64 8781824, i64 12648448, i64 1900544, i64 10354688, i64 14745600, i64 16252928, i64 9961472, i64 1114112, i64 6881280, i64 14221312, i64 9306112, i64 9699328, i64 10158080, i64 1966080, i64 8847360, i64 15269888, i64 13500416, i64 5570560, i64 2621440, i64 14614528, i64 9175040, i64 10551296, i64 8978432, i64 851968, i64 12517376, i64 15073280, i64 4325376, i64 6815744, i64 4259840, i64 10027008, i64 2949120, i64 983040, i64 11534336, i64 5505024, i64 12255232, i64 1441792], [256 x i64] [i64 1660944384, i64 2080374784, i64 1996488704, i64 2063597568, i64 4060086272, i64 1795162112, i64 1862270976, i64 3305111552, i64 805306368, i64 16777216, i64 1728053248, i64 721420288, i64 4261412864, i64 3607101440, i64 2868903936, i64 1979711488, i64 3388997632, i64 2181038080, i64 3372220416, i64 2097152000, i64 4194304000, i64 1493172224, i64 1191182336, i64 4026531840, i64 2902458368, i64 3556769792, i64 2717908992, i64 2936012800, i64 2617245696, i64 2751463424, i64 1912602624, i64 3221225472, i64 3070230528, i64 4244635648, i64 2466250752, i64 637534208, i64 905969664, i64 1056964608, i64 4143972352, i64 3422552064, i64 872415232, i64 2768240640, i64 3841982464, i64 4043309056, i64 1895825408, i64 3623878656, i64 822083584, i64 352321536, i64 67108864, i64 3338665984, i64 587202560, i64 3271557120, i64 402653184, i64 2516582400, i64 83886080, i64 2583691264, i64 117440512, i64 301989888, i64 2147483648, i64 3791650816, i64 3942645760, i64 654311424, i64 2986344448, i64 1962934272, i64 150994944, i64 2197815296, i64 738197504, i64 436207616, i64 452984832, i64 1845493760, i64 1509949440, i64 2684354560, i64 1375731712, i64 989855744, i64 3590324224, i64 3003121664, i64 687865856, i64 3808428032, i64 788529152, i64 2214592512, i64 1392508928, i64 3506438144, i64 0, i64 3976200192, i64 536870912, i64 4227858432, i64 2969567232, i64 1526726656, i64 1778384896, i64 3405774848, i64 3187671040, i64 956301312, i64 1241513984, i64 1275068416, i64 1476395008, i64 3472883712, i64 3489660928, i64 4009754624, i64 2852126720, i64 4211081216, i64 1124073472, i64 1291845632, i64 855638016, i64 2231369728, i64 1157627904, i64 4177526784, i64 33554432, i64 2130706432, i64 1342177280, i64 1006632960, i64 2667577344, i64 2818572288, i64 1358954496, i64 2734686208, i64 1073741824, i64 2399141888, i64 2449473536, i64 2634022912, i64 939524096, i64 4110417920, i64 3154116608, i64 3053453312, i64 3657433088, i64 553648128, i64 268435456, i64 4278190080, i64 4076863488, i64 3523215360, i64 3439329280, i64 201326592, i64 318767104, i64 3959422976, i64 1593835520, i64 2533359616, i64 1140850688, i64 385875968, i64 3288334336, i64 2801795072, i64 2113929216, i64 1023410176, i64 1677721600, i64 1560281088, i64 419430400, i64 1929379840, i64 1610612736, i64 2164260864, i64 1325400064, i64 3690987520, i64 570425344, i64 704643072, i64 2415919104, i64 2281701376, i64 1174405120, i64 3992977408, i64 3087007744, i64 335544320, i64 3724541952, i64 1577058304, i64 184549376, i64 3674210304, i64 3758096384, i64 838860800, i64 973078528, i64 167772160, i64 1224736768, i64 100663296, i64 603979776, i64 1543503872, i64 3254779904, i64 3539992576, i64 2885681152, i64 1644167168, i64 2432696320, i64 2499805184, i64 3825205248, i64 2030043136, i64 3875536896, i64 3355443200, i64 922746880, i64 1828716544, i64 2365587456, i64 3573547008, i64 1308622848, i64 2835349504, i64 1811939328, i64 1442840576, i64 4093640704, i64 3925868544, i64 1694498816, i64 2046820352, i64 2919235584, i64 134217728, i64 3120562176, i64 2013265920, i64 620756992, i64 771751936, i64 469762048, i64 2785017856, i64 3019898880, i64 3321888768, i64 3892314112, i64 3707764736, i64 1946157056, i64 520093696, i64 1258291200, i64 3170893824, i64 2332033024, i64 2315255808, i64 1879048192, i64 1040187392, i64 3036676096, i64 1711276032, i64 1207959552, i64 50331648, i64 4127195136, i64 234881024, i64 1627389952, i64 889192448, i64 1459617792, i64 3103784960, i64 2248146944, i64 3238002688, i64 486539264, i64 2650800128, i64 3774873600, i64 4160749568, i64 2550136832, i64 285212672, i64 1761607680, i64 3640655872, i64 2382364672, i64 2483027968, i64 2600468480, i64 503316480, i64 2264924160, i64 3909091328, i64 3456106496, i64 1426063360, i64 671088640, i64 3741319168, i64 2348810240, i64 2701131776, i64 2298478592, i64 218103808, i64 3204448256, i64 3858759680, i64 1107296256, i64 1744830464, i64 1090519040, i64 2566914048, i64 754974720, i64 251658240, i64 2952790016, i64 1409286144, i64 3137339392, i64 369098752]], align 16
@il_tab = local_unnamed_addr constant [4 x [256 x i64]] [[256 x i64] [i64 82, i64 9, i64 106, i64 213, i64 48, i64 54, i64 165, i64 56, i64 191, i64 64, i64 163, i64 158, i64 129, i64 243, i64 215, i64 251, i64 124, i64 227, i64 57, i64 130, i64 155, i64 47, i64 255, i64 135, i64 52, i64 142, i64 67, i64 68, i64 196, i64 222, i64 233, i64 203, i64 84, i64 123, i64 148, i64 50, i64 166, i64 194, i64 35, i64 61, i64 238, i64 76, i64 149, i64 11, i64 66, i64 250, i64 195, i64 78, i64 8, i64 46, i64 161, i64 102, i64 40, i64 217, i64 36, i64 178, i64 118, i64 91, i64 162, i64 73, i64 109, i64 139, i64 209, i64 37, i64 114, i64 248, i64 246, i64 100, i64 134, i64 104, i64 152, i64 22, i64 212, i64 164, i64 92, i64 204, i64 93, i64 101, i64 182, i64 146, i64 108, i64 112, i64 72, i64 80, i64 253, i64 237, i64 185, i64 218, i64 94, i64 21, i64 70, i64 87, i64 167, i64 141, i64 157, i64 132, i64 144, i64 216, i64 171, i64 0, i64 140, i64 188, i64 211, i64 10, i64 247, i64 228, i64 88, i64 5, i64 184, i64 179, i64 69, i64 6, i64 208, i64 44, i64 30, i64 143, i64 202, i64 63, i64 15, i64 2, i64 193, i64 175, i64 189, i64 3, i64 1, i64 19, i64 138, i64 107, i64 58, i64 145, i64 17, i64 65, i64 79, i64 103, i64 220, i64 234, i64 151, i64 242, i64 207, i64 206, i64 240, i64 180, i64 230, i64 115, i64 150, i64 172, i64 116, i64 34, i64 231, i64 173, i64 53, i64 133, i64 226, i64 249, i64 55, i64 232, i64 28, i64 117, i64 223, i64 110, i64 71, i64 241, i64 26, i64 113, i64 29, i64 41, i64 197, i64 137, i64 111, i64 183, i64 98, i64 14, i64 170, i64 24, i64 190, i64 27, i64 252, i64 86, i64 62, i64 75, i64 198, i64 210, i64 121, i64 32, i64 154, i64 219, i64 192, i64 254, i64 120, i64 205, i64 90, i64 244, i64 31, i64 221, i64 168, i64 51, i64 136, i64 7, i64 199, i64 49, i64 177, i64 18, i64 16, i64 89, i64 39, i64 128, i64 236, i64 95, i64 96, i64 81, i64 127, i64 169, i64 25, i64 181, i64 74, i64 13, i64 45, i64 229, i64 122, i64 159, i64 147, i64 201, i64 156, i64 239, i64 160, i64 224, i64 59, i64 77, i64 174, i64 42, i64 245, i64 176, i64 200, i64 235, i64 187, i64 60, i64 131, i64 83, i64 153, i64 97, i64 23, i64 43, i64 4, i64 126, i64 186, i64 119, i64 214, i64 38, i64 225, i64 105, i64 20, i64 99, i64 85, i64 33, i64 12, i64 125], [256 x i64] [i64 20992, i64 2304, i64 27136, i64 54528, i64 12288, i64 13824, i64 42240, i64 14336, i64 48896, i64 16384, i64 41728, i64 40448, i64 33024, i64 62208, i64 55040, i64 64256, i64 31744, i64 58112, i64 14592, i64 33280, i64 39680, i64 12032, i64 65280, i64 34560, i64 13312, i64 36352, i64 17152, i64 17408, i64 50176, i64 56832, i64 59648, i64 51968, i64 21504, i64 31488, i64 37888, i64 12800, i64 42496, i64 49664, i64 8960, i64 15616, i64 60928, i64 19456, i64 38144, i64 2816, i64 16896, i64 64000, i64 49920, i64 19968, i64 2048, i64 11776, i64 41216, i64 26112, i64 10240, i64 55552, i64 9216, i64 45568, i64 30208, i64 23296, i64 41472, i64 18688, i64 27904, i64 35584, i64 53504, i64 9472, i64 29184, i64 63488, i64 62976, i64 25600, i64 34304, i64 26624, i64 38912, i64 5632, i64 54272, i64 41984, i64 23552, i64 52224, i64 23808, i64 25856, i64 46592, i64 37376, i64 27648, i64 28672, i64 18432, i64 20480, i64 64768, i64 60672, i64 47360, i64 55808, i64 24064, i64 5376, i64 17920, i64 22272, i64 42752, i64 36096, i64 40192, i64 33792, i64 36864, i64 55296, i64 43776, i64 0, i64 35840, i64 48128, i64 54016, i64 2560, i64 63232, i64 58368, i64 22528, i64 1280, i64 47104, i64 45824, i64 17664, i64 1536, i64 53248, i64 11264, i64 7680, i64 36608, i64 51712, i64 16128, i64 3840, i64 512, i64 49408, i64 44800, i64 48384, i64 768, i64 256, i64 4864, i64 35328, i64 27392, i64 14848, i64 37120, i64 4352, i64 16640, i64 20224, i64 26368, i64 56320, i64 59904, i64 38656, i64 61952, i64 52992, i64 52736, i64 61440, i64 46080, i64 58880, i64 29440, i64 38400, i64 44032, i64 29696, i64 8704, i64 59136, i64 44288, i64 13568, i64 34048, i64 57856, i64 63744, i64 14080, i64 59392, i64 7168, i64 29952, i64 57088, i64 28160, i64 18176, i64 61696, i64 6656, i64 28928, i64 7424, i64 10496, i64 50432, i64 35072, i64 28416, i64 46848, i64 25088, i64 3584, i64 43520, i64 6144, i64 48640, i64 6912, i64 64512, i64 22016, i64 15872, i64 19200, i64 50688, i64 53760, i64 30976, i64 8192, i64 39424, i64 56064, i64 49152, i64 65024, i64 30720, i64 52480, i64 23040, i64 62464, i64 7936, i64 56576, i64 43008, i64 13056, i64 34816, i64 1792, i64 50944, i64 12544, i64 45312, i64 4608, i64 4096, i64 22784, i64 9984, i64 32768, i64 60416, i64 24320, i64 24576, i64 20736, i64 32512, i64 43264, i64 6400, i64 46336, i64 18944, i64 3328, i64 11520, i64 58624, i64 31232, i64 40704, i64 37632, i64 51456, i64 39936, i64 61184, i64 40960, i64 57344, i64 15104, i64 19712, i64 44544, i64 10752, i64 62720, i64 45056, i64 51200, i64 60160, i64 47872, i64 15360, i64 33536, i64 21248, i64 39168, i64 24832, i64 5888, i64 11008, i64 1024, i64 32256, i64 47616, i64 30464, i64 54784, i64 9728, i64 57600, i64 26880, i64 5120, i64 25344, i64 21760, i64 8448, i64 3072, i64 32000], [256 x i64] [i64 5373952, i64 589824, i64 6946816, i64 13959168, i64 3145728, i64 3538944, i64 10813440, i64 3670016, i64 12517376, i64 4194304, i64 10682368, i64 10354688, i64 8454144, i64 15925248, i64 14090240, i64 16449536, i64 8126464, i64 14876672, i64 3735552, i64 8519680, i64 10158080, i64 3080192, i64 16711680, i64 8847360, i64 3407872, i64 9306112, i64 4390912, i64 4456448, i64 12845056, i64 14548992, i64 15269888, i64 13303808, i64 5505024, i64 8060928, i64 9699328, i64 3276800, i64 10878976, i64 12713984, i64 2293760, i64 3997696, i64 15597568, i64 4980736, i64 9764864, i64 720896, i64 4325376, i64 16384000, i64 12779520, i64 5111808, i64 524288, i64 3014656, i64 10551296, i64 6684672, i64 2621440, i64 14221312, i64 2359296, i64 11665408, i64 7733248, i64 5963776, i64 10616832, i64 4784128, i64 7143424, i64 9109504, i64 13697024, i64 2424832, i64 7471104, i64 16252928, i64 16121856, i64 6553600, i64 8781824, i64 6815744, i64 9961472, i64 1441792, i64 13893632, i64 10747904, i64 6029312, i64 13369344, i64 6094848, i64 6619136, i64 11927552, i64 9568256, i64 7077888, i64 7340032, i64 4718592, i64 5242880, i64 16580608, i64 15532032, i64 12124160, i64 14286848, i64 6160384, i64 1376256, i64 4587520, i64 5701632, i64 10944512, i64 9240576, i64 10289152, i64 8650752, i64 9437184, i64 14155776, i64 11206656, i64 0, i64 9175040, i64 12320768, i64 13828096, i64 655360, i64 16187392, i64 14942208, i64 5767168, i64 327680, i64 12058624, i64 11730944, i64 4521984, i64 393216, i64 13631488, i64 2883584, i64 1966080, i64 9371648, i64 13238272, i64 4128768, i64 983040, i64 131072, i64 12648448, i64 11468800, i64 12386304, i64 196608, i64 65536, i64 1245184, i64 9043968, i64 7012352, i64 3801088, i64 9502720, i64 1114112, i64 4259840, i64 5177344, i64 6750208, i64 14417920, i64 15335424, i64 9895936, i64 15859712, i64 13565952, i64 13500416, i64 15728640, i64 11796480, i64 15073280, i64 7536640, i64 9830400, i64 11272192, i64 7602176, i64 2228224, i64 15138816, i64 11337728, i64 3473408, i64 8716288, i64 14811136, i64 16318464, i64 3604480, i64 15204352, i64 1835008, i64 7667712, i64 14614528, i64 7208960, i64 4653056, i64 15794176, i64 1703936, i64 7405568, i64 1900544, i64 2686976, i64 12910592, i64 8978432, i64 7274496, i64 11993088, i64 6422528, i64 917504, i64 11141120, i64 1572864, i64 12451840, i64 1769472, i64 16515072, i64 5636096, i64 4063232, i64 4915200, i64 12976128, i64 13762560, i64 7929856, i64 2097152, i64 10092544, i64 14352384, i64 12582912, i64 16646144, i64 7864320, i64 13434880, i64 5898240, i64 15990784, i64 2031616, i64 14483456, i64 11010048, i64 3342336, i64 8912896, i64 458752, i64 13041664, i64 3211264, i64 11599872, i64 1179648, i64 1048576, i64 5832704, i64 2555904, i64 8388608, i64 15466496, i64 6225920, i64 6291456, i64 5308416, i64 8323072, i64 11075584, i64 1638400, i64 11862016, i64 4849664, i64 851968, i64 2949120, i64 15007744, i64 7995392, i64 10420224, i64 9633792, i64 13172736, i64 10223616, i64 15663104, i64 10485760, i64 14680064, i64 3866624, i64 5046272, i64 11403264, i64 2752512, i64 16056320, i64 11534336, i64 13107200, i64 15400960, i64 12255232, i64 3932160, i64 8585216, i64 5439488, i64 10027008, i64 6356992, i64 1507328, i64 2818048, i64 262144, i64 8257536, i64 12189696, i64 7798784, i64 14024704, i64 2490368, i64 14745600, i64 6881280, i64 1310720, i64 6488064, i64 5570560, i64 2162688, i64 786432, i64 8192000], [256 x i64] [i64 1375731712, i64 150994944, i64 1778384896, i64 3573547008, i64 805306368, i64 905969664, i64 2768240640, i64 939524096, i64 3204448256, i64 1073741824, i64 2734686208, i64 2650800128, i64 2164260864, i64 4076863488, i64 3607101440, i64 4211081216, i64 2080374784, i64 3808428032, i64 956301312, i64 2181038080, i64 2600468480, i64 788529152, i64 4278190080, i64 2264924160, i64 872415232, i64 2382364672, i64 1124073472, i64 1140850688, i64 3288334336, i64 3724541952, i64 3909091328, i64 3405774848, i64 1409286144, i64 2063597568, i64 2483027968, i64 838860800, i64 2785017856, i64 3254779904, i64 587202560, i64 1023410176, i64 3992977408, i64 1275068416, i64 2499805184, i64 184549376, i64 1107296256, i64 4194304000, i64 3271557120, i64 1308622848, i64 134217728, i64 771751936, i64 2701131776, i64 1711276032, i64 671088640, i64 3640655872, i64 603979776, i64 2986344448, i64 1979711488, i64 1526726656, i64 2717908992, i64 1224736768, i64 1828716544, i64 2332033024, i64 3506438144, i64 620756992, i64 1912602624, i64 4160749568, i64 4127195136, i64 1677721600, i64 2248146944, i64 1744830464, i64 2550136832, i64 369098752, i64 3556769792, i64 2751463424, i64 1543503872, i64 3422552064, i64 1560281088, i64 1694498816, i64 3053453312, i64 2449473536, i64 1811939328, i64 1879048192, i64 1207959552, i64 1342177280, i64 4244635648, i64 3976200192, i64 3103784960, i64 3657433088, i64 1577058304, i64 352321536, i64 1174405120, i64 1459617792, i64 2801795072, i64 2365587456, i64 2634022912, i64 2214592512, i64 2415919104, i64 3623878656, i64 2868903936, i64 0, i64 2348810240, i64 3154116608, i64 3539992576, i64 167772160, i64 4143972352, i64 3825205248, i64 1476395008, i64 83886080, i64 3087007744, i64 3003121664, i64 1157627904, i64 100663296, i64 3489660928, i64 738197504, i64 503316480, i64 2399141888, i64 3388997632, i64 1056964608, i64 251658240, i64 33554432, i64 3238002688, i64 2936012800, i64 3170893824, i64 50331648, i64 16777216, i64 318767104, i64 2315255808, i64 1795162112, i64 973078528, i64 2432696320, i64 285212672, i64 1090519040, i64 1325400064, i64 1728053248, i64 3690987520, i64 3925868544, i64 2533359616, i64 4060086272, i64 3472883712, i64 3456106496, i64 4026531840, i64 3019898880, i64 3858759680, i64 1929379840, i64 2516582400, i64 2885681152, i64 1946157056, i64 570425344, i64 3875536896, i64 2902458368, i64 889192448, i64 2231369728, i64 3791650816, i64 4177526784, i64 922746880, i64 3892314112, i64 469762048, i64 1962934272, i64 3741319168, i64 1845493760, i64 1191182336, i64 4043309056, i64 436207616, i64 1895825408, i64 486539264, i64 687865856, i64 3305111552, i64 2298478592, i64 1862270976, i64 3070230528, i64 1644167168, i64 234881024, i64 2852126720, i64 402653184, i64 3187671040, i64 452984832, i64 4227858432, i64 1442840576, i64 1040187392, i64 1258291200, i64 3321888768, i64 3523215360, i64 2030043136, i64 536870912, i64 2583691264, i64 3674210304, i64 3221225472, i64 4261412864, i64 2013265920, i64 3439329280, i64 1509949440, i64 4093640704, i64 520093696, i64 3707764736, i64 2818572288, i64 855638016, i64 2281701376, i64 117440512, i64 3338665984, i64 822083584, i64 2969567232, i64 301989888, i64 268435456, i64 1493172224, i64 654311424, i64 2147483648, i64 3959422976, i64 1593835520, i64 1610612736, i64 1358954496, i64 2130706432, i64 2835349504, i64 419430400, i64 3036676096, i64 1241513984, i64 218103808, i64 754974720, i64 3841982464, i64 2046820352, i64 2667577344, i64 2466250752, i64 3372220416, i64 2617245696, i64 4009754624, i64 2684354560, i64 3758096384, i64 989855744, i64 1291845632, i64 2919235584, i64 704643072, i64 4110417920, i64 2952790016, i64 3355443200, i64 3942645760, i64 3137339392, i64 1006632960, i64 2197815296, i64 1392508928, i64 2566914048, i64 1627389952, i64 385875968, i64 721420288, i64 67108864, i64 2113929216, i64 3120562176, i64 1996488704, i64 3590324224, i64 637534208, i64 3774873600, i64 1761607680, i64 335544320, i64 1660944384, i64 1426063360, i64 553648128, i64 201326592, i64 2097152000]], align 16
@im_tab = local_unnamed_addr constant [4 x [256 x i64]] [[256 x i64] [i64 0, i64 185403662, i64 370807324, i64 488053522, i64 741614648, i64 658058550, i64 976107044, i64 824393514, i64 1483229296, i64 1399144830, i64 1316117100, i64 1165972322, i64 1952214088, i64 2136040774, i64 1648787028, i64 1766553434, i64 2966458592, i64 3151862254, i64 2798289660, i64 2915535858, i64 2632234200, i64 2548678102, i64 2331944644, i64 2180231114, i64 3904428176, i64 3820343710, i64 4272081548, i64 4121936770, i64 3297574056, i64 3481400742, i64 3533106868, i64 3650873274, i64 2075868123, i64 1890988757, i64 1839278535, i64 1722556617, i64 1468997603, i64 1552029421, i64 1100287487, i64 1251476721, i64 601060267, i64 685669029, i64 902390199, i64 1053059257, i64 266819475, i64 82468509, i64 436028815, i64 317738113, i64 3412831035, i64 3227951669, i64 3715217703, i64 3598495785, i64 3881799427, i64 3964831245, i64 4047871263, i64 4199060497, i64 2466505547, i64 2551114309, i64 2233069911, i64 2383738969, i64 3208103795, i64 3023752829, i64 2838353263, i64 2720062561, i64 4134368941, i64 4250959779, i64 3765920945, i64 3950669247, i64 3663286933, i64 3511966619, i64 3426959497, i64 3343796615, i64 2919579357, i64 2768779219, i64 3089050817, i64 3004310991, i64 2184256229, i64 2302415851, i64 2485848313, i64 2670068215, i64 1186850381, i64 1303441219, i64 1353184337, i64 1537932639, i64 1787413109, i64 1636092795, i64 2090061929, i64 2006899047, i64 517320253, i64 366520115, i64 147831841, i64 63092015, i64 853641733, i64 971801355, i64 620468249, i64 804688151, i64 2379631990, i64 2262516856, i64 2613862250, i64 2428589668, i64 2715969870, i64 2867814464, i64 3086515026, i64 3170202204, i64 3586000134, i64 3736275976, i64 3282310938, i64 3366526484, i64 4186579262, i64 4068943920, i64 4019204898, i64 3835509292, i64 1023860118, i64 906744984, i64 723308426, i64 538035844, i64 288553390, i64 440397984, i64 120122290, i64 203809468, i64 1701746150, i64 1852021992, i64 1937016826, i64 2021232372, i64 1230680542, i64 1113045200, i64 1598071746, i64 1414376140, i64 4158319681, i64 4242007375, i64 3787521629, i64 3939366739, i64 3689859193, i64 3504587127, i64 3455375973, i64 3338261355, i64 2947720241, i64 2764025151, i64 3114841645, i64 2997206819, i64 2206629897, i64 2290845959, i64 2510066197, i64 2660342555, i64 1191869601, i64 1275557295, i64 1360031421, i64 1511876531, i64 1799248025, i64 1613975959, i64 2099530373, i64 1982415755, i64 526529745, i64 342834655, i64 158869197, i64 41234371, i64 861278441, i64 945494503, i64 625738485, i64 776014843, i64 2355222426, i64 2272059028, i64 2591802758, i64 2440481928, i64 2689987490, i64 2874735276, i64 3058688446, i64 3175278768, i64 3557400554, i64 3741619940, i64 3256061430, i64 3374220536, i64 4164795346, i64 4080055004, i64 3995576782, i64 3844776128, i64 1018251130, i64 935087732, i64 715871590, i64 564550760, i64 277177154, i64 461924940, i64 111112542, i64 227702864, i64 1691946762, i64 1876166148, i64 1925389590, i64 2043548696, i64 1223502642, i64 1138762300, i64 1593260334, i64 1442459680, i64 28809964, i64 179999714, i64 397248752, i64 480281086, i64 763608788, i64 646887386, i64 999926984, i64 815048134, i64 1507840668, i64 1389550482, i64 1338359936, i64 1154009486, i64 1978398372, i64 2129067946, i64 1676797112, i64 1761406390, i64 2976320012, i64 3127509762, i64 2809993232, i64 2893025566, i64 2639474228, i64 2522752826, i64 2336832552, i64 2151953702, i64 3910091388, i64 3791801202, i64 4279586912, i64 4095236462, i64 3309004356, i64 3459673930, i64 3542185048, i64 3626794326, i64 2047648055, i64 1895934009, i64 1813426987, i64 1729870373, i64 1446544655, i64 1563790337, i64 1076008723, i64 1261411869, i64 577038663, i64 694804553, i64 880737115, i64 1064563285, i64 240176511, i64 90031217, i64 407560035, i64 323475053, i64 3403428311, i64 3251714265, i64 3703972811, i64 3620416197, i64 3873969647, i64 3991215329, i64 4042393587, i64 4227796733, i64 2461301159, i64 2579067049, i64 2226023355, i64 2409849525, i64 3196083615, i64 3045938321, i64 2828685187, i64 2744600205], [256 x i64] [i64 0, i64 218697227, i64 437394454, i64 387650077, i64 874788908, i64 959264295, i64 775300154, i64 591342129, i64 1749577816, i64 1698790995, i64 1918528590, i64 2136171077, i64 1550600308, i64 1365591679, i64 1182684258, i64 1266113129, i64 3499155632, i64 3717852859, i64 3397581990, i64 3347837613, i64 3837057180, i64 3921532567, i64 4272342154, i64 4088384129, i64 3101200616, i64 3050413795, i64 2731183358, i64 2948825845, i64 2365368516, i64 2180359887, i64 2532226258, i64 2615655129, i64 3141262203, i64 3056784752, i64 2703869805, i64 2887829862, i64 2401231703, i64 2182540636, i64 2500722497, i64 2550460746, i64 3547573027, i64 3732579624, i64 3378624309, i64 3295197502, i64 3881276175, i64 3932069124, i64 4249194265, i64 4031545618, i64 1806384075, i64 1721906624, i64 1907959773, i64 2091919830, i64 1603208167, i64 1384517100, i64 1167925233, i64 1217663482, i64 65227667, i64 250234264, i64 435246981, i64 351820174, i64 935818175, i64 986611124, i64 768962473, i64 551313826, i64 1836494326, i64 1618977789, i64 2003087840, i64 2054012907, i64 1498584538, i64 1415289809, i64 1128303052, i64 1313441735, i64 88006062, i64 137876389, i64 523026872, i64 304467891, i64 823846274, i64 1007938441, i64 722008468, i64 637663135, i64 3185986886, i64 2968470349, i64 2817806672, i64 2868731739, i64 2311222634, i64 2227927905, i64 2479909244, i64 2665047927, i64 3584965918, i64 3634836245, i64 3485212936, i64 3266653955, i64 3783918898, i64 3968011065, i64 4221049124, i64 4136703791, i64 3595400845, i64 3678697606, i64 3428805275, i64 3243664528, i64 3798552225, i64 4016062634, i64 4168831671, i64 4117912764, i64 3188000469, i64 3003910366, i64 2752977603, i64 2837320904, i64 2317434617, i64 2267558130, i64 2419270383, i64 2637835492, i64 115185213, i64 198481974, i64 483363371, i64 298222624, i64 855223825, i64 1072734234, i64 686535175, i64 635616268, i64 1855317605, i64 1671227502, i64 1955068531, i64 2039411832, i64 1521606217, i64 1471729730, i64 1084473951, i64 1303039060, i64 3672916471, i64 3622129660, i64 3237895649, i64 3455538154, i64 4006115803, i64 3821107152, i64 4107953613, i64 4191382470, i64 2997105071, i64 3215802276, i64 2830511545, i64 2780767154, i64 2256537987, i64 2341013384, i64 2626819477, i64 2442861470, i64 175939911, i64 125153100, i64 275692881, i64 493335386, i64 1045993835, i64 860985184, i64 608863613, i64 692292470, i64 1647628575, i64 1866325780, i64 2015808777, i64 1966064386, i64 1443948851, i64 1528424248, i64 1275262245, i64 1091304238, i64 1641519756, i64 1826526343, i64 2076542618, i64 1993115793, i64 1442030240, i64 1492823211, i64 1340194486, i64 1122545853, i64 161475284, i64 76997855, i64 328070850, i64 512030921, i64 1035719416, i64 817028339, i64 665439982, i64 715178213, i64 2974251580, i64 3159258167, i64 2874500650, i64 2791073825, i64 2237874704, i64 2288667675, i64 2675006982, i64 2457358349, i64 3641641572, i64 3557164143, i64 3273463410, i64 3457423481, i64 3979031112, i64 3760340035, i64 4147719774, i64 4197458005, i64 3080383489, i64 3130253834, i64 2911432727, i64 2692873756, i64 2210321453, i64 2394413606, i64 2578237499, i64 2493892144, i64 3755121753, i64 3537605202, i64 3317727311, i64 3368652356, i64 3958809717, i64 3875515006, i64 4058298467, i64 4243437160, i64 1728711857, i64 1778582202, i64 2098729127, i64 1880170156, i64 1395537053, i64 1579629206, i64 1228679307, i64 1144333952, i64 256015593, i64 38499042, i64 357589247, i64 408514292, i64 996558021, i64 913263310, i64 561273043, i64 746411736, i64 211892090, i64 27801969, i64 380840812, i64 465184103, i64 948244310, i64 898367837, i64 580326208, i64 798891339, i64 1693009698, i64 1776306473, i64 2130402100, i64 1945261375, i64 1355644686, i64 1573155077, i64 1256153880, i64 1205234963, i64 3694254026, i64 3510163905, i64 3324234716, i64 3408578007, i64 3893751782, i64 3843875309, i64 4060607472, i64 4279172603, i64 3027871634, i64 3111168409, i64 2926295940, i64 2741155215, i64 2153619390, i64 2371129781, i64 2588902312, i64 2537983395], [256 x i64] [i64 0, i64 151915277, i64 303830554, i64 454171927, i64 607661108, i64 758523705, i64 908343854, i64 1059729699, i64 1215322216, i64 1098797925, i64 1517047410, i64 1398949247, i64 1816687708, i64 1699118929, i64 2119459398, i64 2002413899, i64 2430644432, i64 2582559709, i64 2197595850, i64 2347937223, i64 3034094820, i64 3184957417, i64 2797898494, i64 2949284339, i64 3633375416, i64 3516851125, i64 3398237858, i64 3280139695, i64 4238918796, i64 4121350017, i64 4004827798, i64 3887782299, i64 1004239803, i64 852848822, i64 700935585, i64 550069932, i64 534992783, i64 384654466, i64 234832277, i64 82922136, i64 1940595667, i64 2057644254, i64 1639396809, i64 1756970692, i64 1469255655, i64 1587348714, i64 1167006205, i64 1283527408, i64 2872822635, i64 2721431654, i64 3106397553, i64 2955531900, i64 2399397727, i64 2249059410, i64 2636116293, i64 2484206152, i64 3813380867, i64 3930429454, i64 4049044761, i64 4166618644, i64 3346251575, i64 3464344634, i64 3580864813, i64 3697386016, i64 1991112301, i64 2141453664, i64 1689378935, i64 1841294202, i64 1385552473, i64 1536938324, i64 1082772547, i64 1233635150, i64 1054715397, i64 936617224, i64 750893087, i64 634368786, i64 451248689, i64 334203196, i64 150574123, i64 33005350, i64 3863824061, i64 4014165424, i64 4098969767, i64 4250885034, i64 3262474889, i64 3413860740, i64 3496574099, i64 3647436702, i64 2923241173, i64 2805143000, i64 3156281551, i64 3039757250, i64 2315596513, i64 2198551020, i64 2551784699, i64 2434215926, i64 1299615190, i64 1148749531, i64 1600822220, i64 1449431233, i64 1766760930, i64 1614850799, i64 2069018616, i64 1918680309, i64 84334014, i64 201907891, i64 387629988, i64 504678569, i64 557775242, i64 674296455, i64 857927568, i64 976020637, i64 3717610758, i64 3566745099, i64 3481938716, i64 3330547729, i64 4188934450, i64 4037024319, i64 3954313000, i64 3803974693, i64 2514904430, i64 2632478307, i64 2281337716, i64 2398386297, i64 2984135002, i64 3100656215, i64 2747424576, i64 2865517645, i64 3963746266, i64 3847224535, i64 4267565504, i64 4149471949, i64 3363429358, i64 3245854947, i64 3664104948, i64 3547055865, i64 2754719666, i64 2906629311, i64 3056449960, i64 3206787749, i64 2148107142, i64 2298972299, i64 2450888092, i64 2602278545, i64 2090944266, i64 1974422535, i64 1857900816, i64 1739807261, i64 1486449470, i64 1368875059, i64 1250262308, i64 1133213225, i64 886120290, i64 1038029935, i64 650971512, i64 801309301, i64 283718486, i64 434583643, i64 49620300, i64 201010753, i64 3617229921, i64 3734275948, i64 3313932923, i64 3431502198, i64 4087521365, i64 4205620056, i64 3787372111, i64 3903896898, i64 2682967049, i64 2531581700, i64 2381758995, i64 2230896926, i64 3151165501, i64 3000824624, i64 2848910887, i64 2696996138, i64 1199193265, i64 1316239292, i64 1432758955, i64 1550328230, i64 1665273989, i64 1783372680, i64 1901987487, i64 2018512274, i64 252339417, i64 100954068, i64 488010435, i64 337148366, i64 724715757, i64 574374880, i64 959340279, i64 807425530, i64 2599158199, i64 2481064634, i64 2297436077, i64 2180914336, i64 3201576323, i64 3084527246, i64 2898803609, i64 2781229204, i64 3533461983, i64 3683799762, i64 3229634501, i64 3381544136, i64 4137973227, i64 4289363686, i64 3837289457, i64 3988154620, i64 168604007, i64 50510442, i64 403744637, i64 287222896, i64 775200083, i64 658151006, i64 1009290057, i64 891715652, i64 1115482383, i64 1265820162, i64 1348534037, i64 1500443672, i64 1715782971, i64 1867173430, i64 1951978273, i64 2102843436, i64 2704767500, i64 2822336769, i64 3005967382, i64 3123013403, i64 2232374840, i64 2348899637, i64 2534621218, i64 2652719919, i64 3913753188, i64 3762891113, i64 4217058430, i64 4065673075, i64 3447656016, i64 3295741277, i64 3747813450, i64 3597472583, i64 836225756, i64 953795025, i64 600562886, i64 717608907, i64 368043752, i64 484568549, i64 133427442, i64 251526143, i64 2041025204, i64 1890163129, i64 1807451310, i64 1656065955, i64 1570750080, i64 1418835341, i64 1334028442, i64 1183687575], [256 x i64] [i64 0, i64 235605257, i64 471210514, i64 303896347, i64 942421028, i64 908540205, i64 607792694, i64 707863359, i64 1884842056, i64 2119394625, i64 1817080410, i64 1648721747, i64 1215585388, i64 1182749029, i64 1415726718, i64 1516850039, i64 3769684112, i64 4005289369, i64 4238789250, i64 4071475083, i64 3634160820, i64 3600279997, i64 3297443494, i64 3397514159, i64 2431170776, i64 2665723345, i64 2365498058, i64 2197139395, i64 2831453436, i64 2798617077, i64 3033700078, i64 3134823399, i64 3682319163, i64 3580933682, i64 3345850665, i64 3378949152, i64 3814166303, i64 3982262806, i64 4282488077, i64 4048197636, i64 2871251827, i64 2770919034, i64 3073755489, i64 3107898472, i64 2467293015, i64 2634345054, i64 2400845125, i64 2165502028, i64 1003187115, i64 901801634, i64 668823993, i64 701922480, i64 65494927, i64 233591430, i64 535905693, i64 301615252, i64 1267925987, i64 1167593194, i64 1468340721, i64 1502483704, i64 1941911495, i64 2108963534, i64 1873358293, i64 1638015196, i64 2918608246, i64 2751291519, i64 2984277860, i64 3219880557, i64 2514114898, i64 2614187099, i64 2311865152, i64 2277985865, i64 3719169342, i64 3550808119, i64 3250069292, i64 3484619301, i64 3850514714, i64 3951639571, i64 4187237128, i64 4154402305, i64 1296481766, i64 1129165039, i64 1364240372, i64 1599843069, i64 1969916354, i64 2069988555, i64 1769771984, i64 1735892697, i64 1025430958, i64 857069735, i64 554225596, i64 788775605, i64 87220618, i64 188345475, i64 421854104, i64 389019281, i64 1989006925, i64 2022103876, i64 1788595295, i64 1687208278, i64 1319232105, i64 1084944224, i64 1387788411, i64 1555887474, i64 114671109, i64 148812556, i64 449029143, i64 348694814, i64 1056541217, i64 821200680, i64 586125363, i64 753179962, i64 2520581853, i64 2553678804, i64 2318081231, i64 2216694214, i64 2920362745, i64 2686074864, i64 2986813675, i64 3154912738, i64 3865407125, i64 3899548572, i64 4201870471, i64 4101536142, i64 3729349297, i64 3494008760, i64 3261022371, i64 3428076970, i64 1106762476, i64 1341970405, i64 1575076094, i64 1407897079, i64 2044456648, i64 2010178497, i64 1707996378, i64 1808202195, i64 833598116, i64 1067761581, i64 767142070, i64 598910399, i64 159614592, i64 126389129, i64 362126482, i64 463376795, i64 2705787516, i64 2940995445, i64 3176206446, i64 3009027431, i64 2573942360, i64 2539664209, i64 2239571018, i64 2339776835, i64 3508494900, i64 3742658365, i64 3439949862, i64 3271718191, i64 3912455696, i64 3879230233, i64 4112862210, i64 4214112523, i64 2592891351, i64 2491903198, i64 2258271173, i64 2291234508, i64 2728416755, i64 2896910586, i64 3199619041, i64 2965193448, i64 3939764639, i64 3839820950, i64 4139914125, i64 4173930116, i64 3539484091, i64 3706925234, i64 3471714217, i64 3236244128, i64 2050797895, i64 1949809742, i64 1714072405, i64 1747035740, i64 1108378979, i64 1276872810, i64 1577492337, i64 1343066744, i64 174381327, i64 74437638, i64 376619805, i64 410635796, i64 843640107, i64 1011081250, i64 777975609, i64 542505520, i64 3959535514, i64 3792353939, i64 4028083592, i64 4263288961, i64 3559752638, i64 3659959991, i64 3359349164, i64 3325072549, i64 2623135698, i64 2454901467, i64 2152711616, i64 2386872521, i64 2759191542, i64 2860443391, i64 3093557732, i64 3060333805, i64 212952842, i64 45771267, i64 279411992, i64 514617361, i64 882725678, i64 982933031, i64 680216892, i64 645940277, i64 2095648578, i64 1927414347, i64 1627329872, i64 1861490777, i64 1153776486, i64 1255028335, i64 1490231668, i64 1457007741, i64 930745505, i64 963707304, i64 728503987, i64 627514298, i64 257308805, i64 22885772, i64 322970263, i64 491466654, i64 1193436393, i64 1227450848, i64 1530167035, i64 1430221810, i64 2131644621, i64 1896177092, i64 1662536415, i64 1829980118, i64 3620396081, i64 3653357880, i64 3420243491, i64 3319253802, i64 4024887317, i64 3790464284, i64 4092654087, i64 4261150478, i64 2811409529, i64 2845423984, i64 3146034795, i64 3046089570, i64 2680062045, i64 2444594516, i64 2208864847, i64 2376308550]], align 16

; Function Attrs: noinline norecurse nounwind uwtable
define signext i16 @set_key(i8* nocapture readonly, i64, i32, %struct.aes*) local_unnamed_addr #0 {
  %5 = ptrtoint %struct.aes* %3 to i64
  %6 = bitcast %struct.aes* %3 to i8*
  %7 = and i64 %1, 7
  %8 = icmp ne i64 %7, 0
  %.off = add i64 %1, -16
  %9 = icmp ugt i64 %.off, 16
  %10 = or i1 %9, %8
  %11 = and i32 %2, 3
  %12 = icmp eq i32 %11, 0
  %or.cond = or i1 %10, %12
  br i1 %or.cond, label %13, label %23

; <label>:13:                                     ; preds = %4
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %19, label %15

; <label>:15:                                     ; preds = %13
  %16 = getelementptr inbounds %struct.aes, %struct.aes* %3, i64 0, i32 4
  %17 = load i8, i8* %16, align 8
  %18 = and i8 %17, -4
  store i8 %18, i8* %16, align 8
  br label %369

; <label>:19:                                     ; preds = %13
  %20 = getelementptr inbounds %struct.aes, %struct.aes* %3, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %.tr = trunc i64 %21 to i16
  %22 = shl i16 %.tr, 2
  br label %369

; <label>:23:                                     ; preds = %4
  %24 = getelementptr inbounds %struct.aes, %struct.aes* %3, i64 0, i32 4
  %25 = load i8, i8* %24, align 8
  %26 = and i8 %25, -4
  %27 = zext i8 %26 to i32
  %28 = and i32 %2, 3
  %29 = or i32 %27, %28
  %30 = trunc i32 %29 to i8
  store i8 %30, i8* %24, align 8
  %31 = lshr i64 %1, 2
  %32 = getelementptr inbounds %struct.aes, %struct.aes* %3, i64 0, i32 0
  store i64 %31, i64* %32, align 8
  %33 = icmp ugt i64 %1, 19
  %phitmp = add nuw nsw i64 %31, 6
  %phitmp. = select i1 %33, i64 %phitmp, i64 10
  %34 = getelementptr inbounds %struct.aes, %struct.aes* %3, i64 0, i32 1
  store i64 %phitmp., i64* %34, align 8
  %35 = bitcast i8* %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %struct.aes, %struct.aes* %3, i64 0, i32 2, i64 0
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds i8, i8* %0, i64 4
  %39 = bitcast i8* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %struct.aes, %struct.aes* %3, i64 0, i32 2, i64 1
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds i8, i8* %0, i64 8
  %43 = bitcast i8* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %struct.aes, %struct.aes* %3, i64 0, i32 2, i64 2
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds i8, i8* %0, i64 12
  %47 = bitcast i8* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %struct.aes, %struct.aes* %3, i64 0, i32 2, i64 3
  store i64 %48, i64* %49, align 8
  %50 = load i64, i64* %34, align 8
  %51 = shl i64 %50, 2
  %52 = add i64 %51, 4
  %53 = getelementptr inbounds %struct.aes, %struct.aes* %3, i64 0, i32 2, i64 %52
  %54 = load i64, i64* %32, align 8
  %55 = sub i64 0, %54
  %56 = getelementptr inbounds i64, i64* %53, i64 %55
  switch i64 %54, label %.loopexit [
    i64 4, label %.preheader.preheader
    i64 6, label %102
    i64 8, label %159
  ]

.preheader.preheader:                             ; preds = %23
  %57 = shl i64 %50, 5
  %58 = add i64 %57, 48
  %59 = shl i64 %54, 3
  %60 = sub i64 %58, %59
  %uglygep = getelementptr i8, i8* %6, i64 %60
  %uglygep23 = ptrtoint i8* %uglygep to i64
  %scevgep = getelementptr %struct.aes, %struct.aes* %3, i64 0, i32 2, i64 4
  %scevgep24 = ptrtoint i64* %scevgep to i64
  %61 = icmp ugt i64 %uglygep23, %scevgep24
  %umax = select i1 %61, i64 %uglygep23, i64 %scevgep24
  %umax2526 = inttoptr i64 %umax to i8*
  %62 = sub i64 -17, %5
  %uglygep27 = getelementptr i8, i8* %umax2526, i64 %62
  %uglygep2728 = ptrtoint i8* %uglygep27 to i64
  %63 = lshr i64 %uglygep2728, 5
  br label %.preheader

.preheader:                                       ; preds = %.preheader, %.preheader.preheader
  %.04 = phi i64* [ %89, %.preheader ], [ %37, %.preheader.preheader ]
  %.02 = phi i64 [ %101, %.preheader ], [ 0, %.preheader.preheader ]
  %64 = load i64, i64* %.04, align 8
  %65 = getelementptr inbounds i64, i64* %.04, i64 3
  %66 = load i64, i64* %65, align 8
  %67 = lshr i64 %66, 8
  %68 = and i64 %67, 255
  %69 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 0, i64 %68
  %70 = load i64, i64* %69, align 8
  %71 = lshr i64 %66, 16
  %72 = and i64 %71, 255
  %73 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 1, i64 %72
  %74 = load i64, i64* %73, align 8
  %75 = lshr i64 %66, 24
  %76 = and i64 %75, 255
  %77 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 2, i64 %76
  %78 = load i64, i64* %77, align 8
  %79 = and i64 %66, 255
  %80 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 3, i64 %79
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds [29 x i64], [29 x i64]* @rcon_tab, i64 0, i64 %.02
  %83 = load i64, i64* %82, align 8
  %84 = xor i64 %70, %64
  %85 = xor i64 %84, %74
  %86 = xor i64 %85, %78
  %87 = xor i64 %86, %81
  %88 = xor i64 %87, %83
  %89 = getelementptr inbounds i64, i64* %.04, i64 4
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds i64, i64* %.04, i64 1
  %91 = load i64, i64* %90, align 8
  %92 = xor i64 %91, %88
  %93 = getelementptr inbounds i64, i64* %.04, i64 5
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds i64, i64* %.04, i64 2
  %95 = load i64, i64* %94, align 8
  %96 = xor i64 %95, %92
  %97 = getelementptr inbounds i64, i64* %.04, i64 6
  store i64 %96, i64* %97, align 8
  %98 = load i64, i64* %65, align 8
  %99 = xor i64 %98, %96
  %100 = getelementptr inbounds i64, i64* %.04, i64 7
  store i64 %99, i64* %100, align 8
  %101 = add nuw nsw i64 %.02, 1
  %exitcond = icmp eq i64 %.02, %63
  br i1 %exitcond, label %.loopexit.loopexit, label %.preheader

; <label>:102:                                    ; preds = %23
  %103 = getelementptr inbounds i8, i8* %0, i64 16
  %104 = bitcast i8* %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = getelementptr inbounds %struct.aes, %struct.aes* %3, i64 0, i32 2, i64 4
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds i8, i8* %0, i64 20
  %108 = bitcast i8* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds %struct.aes, %struct.aes* %3, i64 0, i32 2, i64 5
  store i64 %109, i64* %110, align 8
  br label %111

; <label>:111:                                    ; preds = %111, %102
  %.15 = phi i64* [ %37, %102 ], [ %137, %111 ]
  %.1 = phi i64 [ 0, %102 ], [ %157, %111 ]
  %112 = load i64, i64* %.15, align 8
  %113 = getelementptr inbounds i64, i64* %.15, i64 5
  %114 = load i64, i64* %113, align 8
  %115 = lshr i64 %114, 8
  %116 = and i64 %115, 255
  %117 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 0, i64 %116
  %118 = load i64, i64* %117, align 8
  %119 = lshr i64 %114, 16
  %120 = and i64 %119, 255
  %121 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 1, i64 %120
  %122 = load i64, i64* %121, align 8
  %123 = lshr i64 %114, 24
  %124 = and i64 %123, 255
  %125 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 2, i64 %124
  %126 = load i64, i64* %125, align 8
  %127 = and i64 %114, 255
  %128 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 3, i64 %127
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds [29 x i64], [29 x i64]* @rcon_tab, i64 0, i64 %.1
  %131 = load i64, i64* %130, align 8
  %132 = xor i64 %118, %112
  %133 = xor i64 %132, %122
  %134 = xor i64 %133, %126
  %135 = xor i64 %134, %129
  %136 = xor i64 %135, %131
  %137 = getelementptr inbounds i64, i64* %.15, i64 6
  store i64 %136, i64* %137, align 8
  %138 = getelementptr inbounds i64, i64* %.15, i64 1
  %139 = load i64, i64* %138, align 8
  %140 = xor i64 %139, %136
  %141 = getelementptr inbounds i64, i64* %.15, i64 7
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds i64, i64* %.15, i64 2
  %143 = load i64, i64* %142, align 8
  %144 = xor i64 %143, %140
  %145 = getelementptr inbounds i64, i64* %.15, i64 8
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds i64, i64* %.15, i64 3
  %147 = load i64, i64* %146, align 8
  %148 = xor i64 %147, %144
  %149 = getelementptr inbounds i64, i64* %.15, i64 9
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds i64, i64* %.15, i64 4
  %151 = load i64, i64* %150, align 8
  %152 = xor i64 %151, %148
  %153 = getelementptr inbounds i64, i64* %.15, i64 10
  store i64 %152, i64* %153, align 8
  %154 = load i64, i64* %113, align 8
  %155 = xor i64 %154, %152
  %156 = getelementptr inbounds i64, i64* %.15, i64 11
  store i64 %155, i64* %156, align 8
  %157 = add nuw nsw i64 %.1, 1
  %158 = icmp ult i64* %137, %56
  br i1 %158, label %111, label %.loopexit.loopexit45

; <label>:159:                                    ; preds = %23
  %160 = getelementptr inbounds i8, i8* %0, i64 16
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %struct.aes, %struct.aes* %3, i64 0, i32 2, i64 4
  store i64 %162, i64* %163, align 8
  %164 = getelementptr inbounds i8, i8* %0, i64 20
  %165 = bitcast i8* %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %struct.aes, %struct.aes* %3, i64 0, i32 2, i64 5
  store i64 %166, i64* %167, align 8
  %168 = getelementptr inbounds i8, i8* %0, i64 24
  %169 = bitcast i8* %168 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = getelementptr inbounds %struct.aes, %struct.aes* %3, i64 0, i32 2, i64 6
  store i64 %170, i64* %171, align 8
  %172 = getelementptr inbounds i8, i8* %0, i64 28
  %173 = bitcast i8* %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = getelementptr inbounds %struct.aes, %struct.aes* %3, i64 0, i32 2, i64 7
  store i64 %174, i64* %175, align 8
  %176 = shl i64 %50, 5
  %177 = add i64 %176, 48
  %178 = shl i64 %54, 3
  %179 = sub i64 %177, %178
  %uglygep29 = getelementptr i8, i8* %6, i64 %179
  %uglygep2930 = ptrtoint i8* %uglygep29 to i64
  %scevgep31 = getelementptr %struct.aes, %struct.aes* %3, i64 0, i32 2, i64 8
  %scevgep3132 = ptrtoint i64* %scevgep31 to i64
  %180 = icmp ugt i64 %uglygep2930, %scevgep3132
  %umax33 = select i1 %180, i64 %uglygep2930, i64 %scevgep3132
  %umax333435 = inttoptr i64 %umax33 to i8*
  %181 = sub i64 -17, %5
  %uglygep36 = getelementptr i8, i8* %umax333435, i64 %181
  %uglygep3637 = ptrtoint i8* %uglygep36 to i64
  %182 = lshr i64 %uglygep3637, 6
  br label %183

; <label>:183:                                    ; preds = %183, %159
  %.26 = phi i64* [ %37, %159 ], [ %209, %183 ]
  %.2 = phi i64 [ 0, %159 ], [ %255, %183 ]
  %184 = load i64, i64* %.26, align 8
  %185 = getelementptr inbounds i64, i64* %.26, i64 7
  %186 = load i64, i64* %185, align 8
  %187 = lshr i64 %186, 8
  %188 = and i64 %187, 255
  %189 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 0, i64 %188
  %190 = load i64, i64* %189, align 8
  %191 = lshr i64 %186, 16
  %192 = and i64 %191, 255
  %193 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 1, i64 %192
  %194 = load i64, i64* %193, align 8
  %195 = lshr i64 %186, 24
  %196 = and i64 %195, 255
  %197 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 2, i64 %196
  %198 = load i64, i64* %197, align 8
  %199 = and i64 %186, 255
  %200 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 3, i64 %199
  %201 = load i64, i64* %200, align 8
  %202 = getelementptr inbounds [29 x i64], [29 x i64]* @rcon_tab, i64 0, i64 %.2
  %203 = load i64, i64* %202, align 8
  %204 = xor i64 %190, %184
  %205 = xor i64 %204, %194
  %206 = xor i64 %205, %198
  %207 = xor i64 %206, %201
  %208 = xor i64 %207, %203
  %209 = getelementptr inbounds i64, i64* %.26, i64 8
  store i64 %208, i64* %209, align 8
  %210 = getelementptr inbounds i64, i64* %.26, i64 1
  %211 = load i64, i64* %210, align 8
  %212 = xor i64 %211, %208
  %213 = getelementptr inbounds i64, i64* %.26, i64 9
  store i64 %212, i64* %213, align 8
  %214 = getelementptr inbounds i64, i64* %.26, i64 2
  %215 = load i64, i64* %214, align 8
  %216 = xor i64 %215, %212
  %217 = getelementptr inbounds i64, i64* %.26, i64 10
  store i64 %216, i64* %217, align 8
  %218 = getelementptr inbounds i64, i64* %.26, i64 3
  %219 = load i64, i64* %218, align 8
  %220 = xor i64 %219, %216
  %221 = getelementptr inbounds i64, i64* %.26, i64 11
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds i64, i64* %.26, i64 4
  %223 = load i64, i64* %222, align 8
  %224 = and i64 %220, 255
  %225 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 0, i64 %224
  %226 = load i64, i64* %225, align 8
  %227 = lshr i64 %220, 8
  %228 = and i64 %227, 255
  %229 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 1, i64 %228
  %230 = load i64, i64* %229, align 8
  %231 = lshr i64 %220, 16
  %232 = and i64 %231, 255
  %233 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 2, i64 %232
  %234 = load i64, i64* %233, align 8
  %235 = lshr i64 %220, 24
  %236 = and i64 %235, 255
  %237 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 3, i64 %236
  %238 = load i64, i64* %237, align 8
  %239 = xor i64 %226, %223
  %240 = xor i64 %239, %230
  %241 = xor i64 %240, %234
  %242 = xor i64 %241, %238
  %243 = getelementptr inbounds i64, i64* %.26, i64 12
  store i64 %242, i64* %243, align 8
  %244 = getelementptr inbounds i64, i64* %.26, i64 5
  %245 = load i64, i64* %244, align 8
  %246 = xor i64 %245, %242
  %247 = getelementptr inbounds i64, i64* %.26, i64 13
  store i64 %246, i64* %247, align 8
  %248 = getelementptr inbounds i64, i64* %.26, i64 6
  %249 = load i64, i64* %248, align 8
  %250 = xor i64 %249, %246
  %251 = getelementptr inbounds i64, i64* %.26, i64 14
  store i64 %250, i64* %251, align 8
  %252 = load i64, i64* %185, align 8
  %253 = xor i64 %252, %250
  %254 = getelementptr inbounds i64, i64* %.26, i64 15
  store i64 %253, i64* %254, align 8
  %255 = add nuw nsw i64 %.2, 1
  %exitcond38 = icmp eq i64 %.2, %182
  br i1 %exitcond38, label %.loopexit.loopexit46, label %183

.loopexit.loopexit:                               ; preds = %.preheader
  br label %.loopexit

.loopexit.loopexit45:                             ; preds = %111
  br label %.loopexit

.loopexit.loopexit46:                             ; preds = %183
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit46, %.loopexit.loopexit45, %.loopexit.loopexit, %23
  %256 = load i8, i8* %24, align 8
  %257 = and i8 %256, 3
  %258 = icmp eq i8 %257, 1
  br i1 %258, label %369, label %259

; <label>:259:                                    ; preds = %.loopexit
  %260 = load i64, i64* %34, align 8
  %261 = shl i64 %260, 2
  %262 = getelementptr inbounds %struct.aes, %struct.aes* %3, i64 0, i32 3, i64 %261
  %263 = load i64, i64* %37, align 8
  %264 = getelementptr inbounds i64, i64* %262, i64 1
  store i64 %263, i64* %262, align 8
  %265 = load i64, i64* %41, align 8
  %266 = getelementptr inbounds i64, i64* %262, i64 2
  store i64 %265, i64* %264, align 8
  %267 = load i64, i64* %45, align 8
  %268 = getelementptr inbounds i64, i64* %262, i64 3
  store i64 %267, i64* %266, align 8
  %269 = getelementptr inbounds %struct.aes, %struct.aes* %3, i64 0, i32 2, i64 4
  %270 = load i64, i64* %49, align 8
  store i64 %270, i64* %268, align 8
  %.0313 = getelementptr inbounds i64, i64* %262, i64 -4
  %271 = load i64, i64* %34, align 8
  %272 = icmp ugt i64 %271, 1
  br i1 %272, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %259
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader
  %.0317 = phi i64* [ %.03, %.lr.ph ], [ %.0313, %.lr.ph.preheader ]
  %.0116 = phi i64 [ %356, %.lr.ph ], [ 1, %.lr.ph.preheader ]
  %.pn15 = phi i64* [ %.0317, %.lr.ph ], [ %262, %.lr.ph.preheader ]
  %.314 = phi i64* [ %355, %.lr.ph ], [ %269, %.lr.ph.preheader ]
  %273 = load i64, i64* %.314, align 8
  %274 = and i64 %273, 255
  %275 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @im_tab, i64 0, i64 0, i64 %274
  %276 = load i64, i64* %275, align 8
  %277 = lshr i64 %273, 8
  %278 = and i64 %277, 255
  %279 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @im_tab, i64 0, i64 1, i64 %278
  %280 = load i64, i64* %279, align 8
  %281 = xor i64 %280, %276
  %282 = lshr i64 %273, 16
  %283 = and i64 %282, 255
  %284 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @im_tab, i64 0, i64 2, i64 %283
  %285 = load i64, i64* %284, align 8
  %286 = xor i64 %281, %285
  %287 = lshr i64 %273, 24
  %288 = and i64 %287, 255
  %289 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @im_tab, i64 0, i64 3, i64 %288
  %290 = load i64, i64* %289, align 8
  %291 = xor i64 %286, %290
  %292 = getelementptr inbounds i64, i64* %.pn15, i64 -3
  store i64 %291, i64* %.0317, align 8
  %293 = getelementptr inbounds i64, i64* %.314, i64 1
  %294 = load i64, i64* %293, align 8
  %295 = and i64 %294, 255
  %296 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @im_tab, i64 0, i64 0, i64 %295
  %297 = load i64, i64* %296, align 8
  %298 = lshr i64 %294, 8
  %299 = and i64 %298, 255
  %300 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @im_tab, i64 0, i64 1, i64 %299
  %301 = load i64, i64* %300, align 8
  %302 = xor i64 %301, %297
  %303 = lshr i64 %294, 16
  %304 = and i64 %303, 255
  %305 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @im_tab, i64 0, i64 2, i64 %304
  %306 = load i64, i64* %305, align 8
  %307 = xor i64 %302, %306
  %308 = lshr i64 %294, 24
  %309 = and i64 %308, 255
  %310 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @im_tab, i64 0, i64 3, i64 %309
  %311 = load i64, i64* %310, align 8
  %312 = xor i64 %307, %311
  %313 = getelementptr inbounds i64, i64* %.pn15, i64 -2
  store i64 %312, i64* %292, align 8
  %314 = getelementptr inbounds i64, i64* %.314, i64 2
  %315 = load i64, i64* %314, align 8
  %316 = and i64 %315, 255
  %317 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @im_tab, i64 0, i64 0, i64 %316
  %318 = load i64, i64* %317, align 8
  %319 = lshr i64 %315, 8
  %320 = and i64 %319, 255
  %321 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @im_tab, i64 0, i64 1, i64 %320
  %322 = load i64, i64* %321, align 8
  %323 = xor i64 %322, %318
  %324 = lshr i64 %315, 16
  %325 = and i64 %324, 255
  %326 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @im_tab, i64 0, i64 2, i64 %325
  %327 = load i64, i64* %326, align 8
  %328 = xor i64 %323, %327
  %329 = lshr i64 %315, 24
  %330 = and i64 %329, 255
  %331 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @im_tab, i64 0, i64 3, i64 %330
  %332 = load i64, i64* %331, align 8
  %333 = xor i64 %328, %332
  %334 = getelementptr inbounds i64, i64* %.pn15, i64 -1
  store i64 %333, i64* %313, align 8
  %335 = getelementptr inbounds i64, i64* %.314, i64 3
  %336 = load i64, i64* %335, align 8
  %337 = and i64 %336, 255
  %338 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @im_tab, i64 0, i64 0, i64 %337
  %339 = load i64, i64* %338, align 8
  %340 = lshr i64 %336, 8
  %341 = and i64 %340, 255
  %342 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @im_tab, i64 0, i64 1, i64 %341
  %343 = load i64, i64* %342, align 8
  %344 = xor i64 %343, %339
  %345 = lshr i64 %336, 16
  %346 = and i64 %345, 255
  %347 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @im_tab, i64 0, i64 2, i64 %346
  %348 = load i64, i64* %347, align 8
  %349 = xor i64 %344, %348
  %350 = lshr i64 %336, 24
  %351 = and i64 %350, 255
  %352 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @im_tab, i64 0, i64 3, i64 %351
  %353 = load i64, i64* %352, align 8
  %354 = xor i64 %349, %353
  store i64 %354, i64* %334, align 8
  %355 = getelementptr inbounds i64, i64* %.314, i64 4
  %356 = add i64 %.0116, 1
  %.03 = getelementptr inbounds i64, i64* %.0317, i64 -4
  %357 = load i64, i64* %34, align 8
  %358 = icmp ult i64 %356, %357
  br i1 %358, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %259
  %.3.lcssa = phi i64* [ %269, %259 ], [ %355, %._crit_edge.loopexit ]
  %.pn.lcssa = phi i64* [ %262, %259 ], [ %.0317, %._crit_edge.loopexit ]
  %.03.lcssa = phi i64* [ %.0313, %259 ], [ %.03, %._crit_edge.loopexit ]
  %359 = getelementptr inbounds i64, i64* %.3.lcssa, i64 1
  %360 = load i64, i64* %.3.lcssa, align 8
  %361 = getelementptr inbounds i64, i64* %.pn.lcssa, i64 -3
  store i64 %360, i64* %.03.lcssa, align 8
  %362 = getelementptr inbounds i64, i64* %.3.lcssa, i64 2
  %363 = load i64, i64* %359, align 8
  %364 = getelementptr inbounds i64, i64* %.pn.lcssa, i64 -2
  store i64 %363, i64* %361, align 8
  %365 = getelementptr inbounds i64, i64* %.3.lcssa, i64 3
  %366 = load i64, i64* %362, align 8
  %367 = getelementptr inbounds i64, i64* %.pn.lcssa, i64 -1
  store i64 %366, i64* %364, align 8
  %368 = load i64, i64* %365, align 8
  store i64 %368, i64* %367, align 8
  br label %369

; <label>:369:                                    ; preds = %._crit_edge, %.loopexit, %19, %15
  %.0 = phi i16 [ 0, %15 ], [ %22, %19 ], [ 1, %.loopexit ], [ 1, %._crit_edge ]
  ret i16 %.0
}

; Function Attrs: noinline norecurse nounwind uwtable
define signext i16 @encrypt(i8* nocapture readonly, i8* nocapture, %struct.aes* readonly) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 4
  %5 = load i8, i8* %4, align 8
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %1221, label %8

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 2, i64 0
  %10 = bitcast i8* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = load i64, i64* %9, align 8
  %13 = xor i64 %12, %11
  %14 = getelementptr inbounds i8, i8* %0, i64 4
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 2, i64 1
  %18 = load i64, i64* %17, align 8
  %19 = xor i64 %18, %16
  %20 = getelementptr inbounds i8, i8* %0, i64 8
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 2, i64 2
  %24 = load i64, i64* %23, align 8
  %25 = xor i64 %24, %22
  %26 = getelementptr inbounds i8, i8* %0, i64 12
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 2, i64 3
  %30 = load i64, i64* %29, align 8
  %31 = xor i64 %30, %28
  %32 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 2, i64 4
  %33 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 1
  %34 = load i64, i64* %33, align 8
  switch i64 %34, label %1213 [
    i64 14, label %35
    i64 12, label %204
    i64 10, label %373
  ]

; <label>:35:                                     ; preds = %8
  %36 = load i64, i64* %32, align 8
  %37 = and i64 %13, 255
  %38 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %37
  %39 = load i64, i64* %38, align 8
  %40 = lshr i64 %19, 8
  %41 = and i64 %40, 255
  %42 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %41
  %43 = load i64, i64* %42, align 8
  %44 = lshr i64 %25, 16
  %45 = and i64 %44, 255
  %46 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %45
  %47 = load i64, i64* %46, align 8
  %48 = lshr i64 %31, 24
  %49 = and i64 %48, 255
  %50 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %49
  %51 = load i64, i64* %50, align 8
  %52 = xor i64 %39, %36
  %53 = xor i64 %52, %43
  %54 = xor i64 %53, %47
  %55 = xor i64 %54, %51
  %56 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 2, i64 5
  %57 = load i64, i64* %56, align 8
  %58 = and i64 %19, 255
  %59 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %58
  %60 = load i64, i64* %59, align 8
  %61 = lshr i64 %25, 8
  %62 = and i64 %61, 255
  %63 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %62
  %64 = load i64, i64* %63, align 8
  %65 = lshr i64 %31, 16
  %66 = and i64 %65, 255
  %67 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %66
  %68 = load i64, i64* %67, align 8
  %69 = lshr i64 %13, 24
  %70 = and i64 %69, 255
  %71 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %70
  %72 = load i64, i64* %71, align 8
  %73 = xor i64 %60, %57
  %74 = xor i64 %73, %64
  %75 = xor i64 %74, %68
  %76 = xor i64 %75, %72
  %77 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 2, i64 6
  %78 = load i64, i64* %77, align 8
  %79 = and i64 %25, 255
  %80 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %79
  %81 = load i64, i64* %80, align 8
  %82 = lshr i64 %31, 8
  %83 = and i64 %82, 255
  %84 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %83
  %85 = load i64, i64* %84, align 8
  %86 = lshr i64 %13, 16
  %87 = and i64 %86, 255
  %88 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %87
  %89 = load i64, i64* %88, align 8
  %90 = lshr i64 %19, 24
  %91 = and i64 %90, 255
  %92 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %91
  %93 = load i64, i64* %92, align 8
  %94 = xor i64 %81, %78
  %95 = xor i64 %94, %85
  %96 = xor i64 %95, %89
  %97 = xor i64 %96, %93
  %98 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 2, i64 7
  %99 = load i64, i64* %98, align 8
  %100 = and i64 %31, 255
  %101 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %100
  %102 = load i64, i64* %101, align 8
  %103 = lshr i64 %13, 8
  %104 = and i64 %103, 255
  %105 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %104
  %106 = load i64, i64* %105, align 8
  %107 = lshr i64 %19, 16
  %108 = and i64 %107, 255
  %109 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %108
  %110 = load i64, i64* %109, align 8
  %111 = lshr i64 %25, 24
  %112 = and i64 %111, 255
  %113 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %112
  %114 = load i64, i64* %113, align 8
  %115 = xor i64 %102, %99
  %116 = xor i64 %115, %106
  %117 = xor i64 %116, %110
  %118 = xor i64 %117, %114
  %119 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 2, i64 8
  %120 = load i64, i64* %119, align 8
  %121 = and i64 %55, 255
  %122 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %121
  %123 = load i64, i64* %122, align 8
  %124 = lshr i64 %76, 8
  %125 = and i64 %124, 255
  %126 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %125
  %127 = load i64, i64* %126, align 8
  %128 = lshr i64 %97, 16
  %129 = and i64 %128, 255
  %130 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %129
  %131 = load i64, i64* %130, align 8
  %132 = lshr i64 %118, 24
  %133 = and i64 %132, 255
  %134 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %133
  %135 = load i64, i64* %134, align 8
  %136 = xor i64 %123, %120
  %137 = xor i64 %136, %127
  %138 = xor i64 %137, %131
  %139 = xor i64 %138, %135
  %140 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 2, i64 9
  %141 = load i64, i64* %140, align 8
  %142 = and i64 %76, 255
  %143 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %142
  %144 = load i64, i64* %143, align 8
  %145 = lshr i64 %97, 8
  %146 = and i64 %145, 255
  %147 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %146
  %148 = load i64, i64* %147, align 8
  %149 = lshr i64 %118, 16
  %150 = and i64 %149, 255
  %151 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %150
  %152 = load i64, i64* %151, align 8
  %153 = lshr i64 %55, 24
  %154 = and i64 %153, 255
  %155 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %154
  %156 = load i64, i64* %155, align 8
  %157 = xor i64 %144, %141
  %158 = xor i64 %157, %148
  %159 = xor i64 %158, %152
  %160 = xor i64 %159, %156
  %161 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 2, i64 10
  %162 = load i64, i64* %161, align 8
  %163 = and i64 %97, 255
  %164 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %163
  %165 = load i64, i64* %164, align 8
  %166 = lshr i64 %118, 8
  %167 = and i64 %166, 255
  %168 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %167
  %169 = load i64, i64* %168, align 8
  %170 = lshr i64 %55, 16
  %171 = and i64 %170, 255
  %172 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %171
  %173 = load i64, i64* %172, align 8
  %174 = lshr i64 %76, 24
  %175 = and i64 %174, 255
  %176 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %175
  %177 = load i64, i64* %176, align 8
  %178 = xor i64 %165, %162
  %179 = xor i64 %178, %169
  %180 = xor i64 %179, %173
  %181 = xor i64 %180, %177
  %182 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 2, i64 11
  %183 = load i64, i64* %182, align 8
  %184 = and i64 %118, 255
  %185 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %184
  %186 = load i64, i64* %185, align 8
  %187 = lshr i64 %55, 8
  %188 = and i64 %187, 255
  %189 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %188
  %190 = load i64, i64* %189, align 8
  %191 = lshr i64 %76, 16
  %192 = and i64 %191, 255
  %193 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %192
  %194 = load i64, i64* %193, align 8
  %195 = lshr i64 %97, 24
  %196 = and i64 %195, 255
  %197 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %196
  %198 = load i64, i64* %197, align 8
  %199 = xor i64 %186, %183
  %200 = xor i64 %199, %190
  %201 = xor i64 %200, %194
  %202 = xor i64 %201, %198
  %203 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 2, i64 12
  br label %204

; <label>:204:                                    ; preds = %35, %8
  %.sroa.111.0 = phi i64 [ %31, %8 ], [ %202, %35 ]
  %.sroa.74.0 = phi i64 [ %25, %8 ], [ %181, %35 ]
  %.sroa.37.0 = phi i64 [ %19, %8 ], [ %160, %35 ]
  %.sroa.0.0 = phi i64 [ %13, %8 ], [ %139, %35 ]
  %.01 = phi i64* [ %32, %8 ], [ %203, %35 ]
  %205 = load i64, i64* %.01, align 8
  %206 = and i64 %.sroa.0.0, 255
  %207 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %206
  %208 = load i64, i64* %207, align 8
  %209 = lshr i64 %.sroa.37.0, 8
  %210 = and i64 %209, 255
  %211 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %210
  %212 = load i64, i64* %211, align 8
  %213 = lshr i64 %.sroa.74.0, 16
  %214 = and i64 %213, 255
  %215 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %214
  %216 = load i64, i64* %215, align 8
  %217 = lshr i64 %.sroa.111.0, 24
  %218 = and i64 %217, 255
  %219 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %218
  %220 = load i64, i64* %219, align 8
  %221 = xor i64 %208, %205
  %222 = xor i64 %221, %212
  %223 = xor i64 %222, %216
  %224 = xor i64 %223, %220
  %225 = getelementptr inbounds i64, i64* %.01, i64 1
  %226 = load i64, i64* %225, align 8
  %227 = and i64 %.sroa.37.0, 255
  %228 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %227
  %229 = load i64, i64* %228, align 8
  %230 = lshr i64 %.sroa.74.0, 8
  %231 = and i64 %230, 255
  %232 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %231
  %233 = load i64, i64* %232, align 8
  %234 = lshr i64 %.sroa.111.0, 16
  %235 = and i64 %234, 255
  %236 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %235
  %237 = load i64, i64* %236, align 8
  %238 = lshr i64 %.sroa.0.0, 24
  %239 = and i64 %238, 255
  %240 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %239
  %241 = load i64, i64* %240, align 8
  %242 = xor i64 %229, %226
  %243 = xor i64 %242, %233
  %244 = xor i64 %243, %237
  %245 = xor i64 %244, %241
  %246 = getelementptr inbounds i64, i64* %.01, i64 2
  %247 = load i64, i64* %246, align 8
  %248 = and i64 %.sroa.74.0, 255
  %249 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %248
  %250 = load i64, i64* %249, align 8
  %251 = lshr i64 %.sroa.111.0, 8
  %252 = and i64 %251, 255
  %253 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %252
  %254 = load i64, i64* %253, align 8
  %255 = lshr i64 %.sroa.0.0, 16
  %256 = and i64 %255, 255
  %257 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %256
  %258 = load i64, i64* %257, align 8
  %259 = lshr i64 %.sroa.37.0, 24
  %260 = and i64 %259, 255
  %261 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %260
  %262 = load i64, i64* %261, align 8
  %263 = xor i64 %250, %247
  %264 = xor i64 %263, %254
  %265 = xor i64 %264, %258
  %266 = xor i64 %265, %262
  %267 = getelementptr inbounds i64, i64* %.01, i64 3
  %268 = load i64, i64* %267, align 8
  %269 = and i64 %.sroa.111.0, 255
  %270 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %269
  %271 = load i64, i64* %270, align 8
  %272 = lshr i64 %.sroa.0.0, 8
  %273 = and i64 %272, 255
  %274 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %273
  %275 = load i64, i64* %274, align 8
  %276 = lshr i64 %.sroa.37.0, 16
  %277 = and i64 %276, 255
  %278 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %277
  %279 = load i64, i64* %278, align 8
  %280 = lshr i64 %.sroa.74.0, 24
  %281 = and i64 %280, 255
  %282 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %281
  %283 = load i64, i64* %282, align 8
  %284 = xor i64 %271, %268
  %285 = xor i64 %284, %275
  %286 = xor i64 %285, %279
  %287 = xor i64 %286, %283
  %288 = getelementptr inbounds i64, i64* %.01, i64 4
  %289 = load i64, i64* %288, align 8
  %290 = and i64 %224, 255
  %291 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %290
  %292 = load i64, i64* %291, align 8
  %293 = lshr i64 %245, 8
  %294 = and i64 %293, 255
  %295 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %294
  %296 = load i64, i64* %295, align 8
  %297 = lshr i64 %266, 16
  %298 = and i64 %297, 255
  %299 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %298
  %300 = load i64, i64* %299, align 8
  %301 = lshr i64 %287, 24
  %302 = and i64 %301, 255
  %303 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %302
  %304 = load i64, i64* %303, align 8
  %305 = xor i64 %292, %289
  %306 = xor i64 %305, %296
  %307 = xor i64 %306, %300
  %308 = xor i64 %307, %304
  %309 = getelementptr inbounds i64, i64* %.01, i64 5
  %310 = load i64, i64* %309, align 8
  %311 = and i64 %245, 255
  %312 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %311
  %313 = load i64, i64* %312, align 8
  %314 = lshr i64 %266, 8
  %315 = and i64 %314, 255
  %316 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %315
  %317 = load i64, i64* %316, align 8
  %318 = lshr i64 %287, 16
  %319 = and i64 %318, 255
  %320 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %319
  %321 = load i64, i64* %320, align 8
  %322 = lshr i64 %224, 24
  %323 = and i64 %322, 255
  %324 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %323
  %325 = load i64, i64* %324, align 8
  %326 = xor i64 %313, %310
  %327 = xor i64 %326, %317
  %328 = xor i64 %327, %321
  %329 = xor i64 %328, %325
  %330 = getelementptr inbounds i64, i64* %.01, i64 6
  %331 = load i64, i64* %330, align 8
  %332 = and i64 %266, 255
  %333 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %332
  %334 = load i64, i64* %333, align 8
  %335 = lshr i64 %287, 8
  %336 = and i64 %335, 255
  %337 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %336
  %338 = load i64, i64* %337, align 8
  %339 = lshr i64 %224, 16
  %340 = and i64 %339, 255
  %341 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %340
  %342 = load i64, i64* %341, align 8
  %343 = lshr i64 %245, 24
  %344 = and i64 %343, 255
  %345 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %344
  %346 = load i64, i64* %345, align 8
  %347 = xor i64 %334, %331
  %348 = xor i64 %347, %338
  %349 = xor i64 %348, %342
  %350 = xor i64 %349, %346
  %351 = getelementptr inbounds i64, i64* %.01, i64 7
  %352 = load i64, i64* %351, align 8
  %353 = and i64 %287, 255
  %354 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %353
  %355 = load i64, i64* %354, align 8
  %356 = lshr i64 %224, 8
  %357 = and i64 %356, 255
  %358 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %357
  %359 = load i64, i64* %358, align 8
  %360 = lshr i64 %245, 16
  %361 = and i64 %360, 255
  %362 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %361
  %363 = load i64, i64* %362, align 8
  %364 = lshr i64 %266, 24
  %365 = and i64 %364, 255
  %366 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %365
  %367 = load i64, i64* %366, align 8
  %368 = xor i64 %355, %352
  %369 = xor i64 %368, %359
  %370 = xor i64 %369, %363
  %371 = xor i64 %370, %367
  %372 = getelementptr inbounds i64, i64* %.01, i64 8
  br label %373

; <label>:373:                                    ; preds = %204, %8
  %.sroa.111.1 = phi i64 [ %31, %8 ], [ %371, %204 ]
  %.sroa.74.1 = phi i64 [ %25, %8 ], [ %350, %204 ]
  %.sroa.37.1 = phi i64 [ %19, %8 ], [ %329, %204 ]
  %.sroa.0.1 = phi i64 [ %13, %8 ], [ %308, %204 ]
  %.1 = phi i64* [ %32, %8 ], [ %372, %204 ]
  %374 = load i64, i64* %.1, align 8
  %375 = and i64 %.sroa.0.1, 255
  %376 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %375
  %377 = load i64, i64* %376, align 8
  %378 = lshr i64 %.sroa.37.1, 8
  %379 = and i64 %378, 255
  %380 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %379
  %381 = load i64, i64* %380, align 8
  %382 = lshr i64 %.sroa.74.1, 16
  %383 = and i64 %382, 255
  %384 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %383
  %385 = load i64, i64* %384, align 8
  %386 = lshr i64 %.sroa.111.1, 24
  %387 = and i64 %386, 255
  %388 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %387
  %389 = load i64, i64* %388, align 8
  %390 = xor i64 %377, %374
  %391 = xor i64 %390, %381
  %392 = xor i64 %391, %385
  %393 = xor i64 %392, %389
  %394 = getelementptr inbounds i64, i64* %.1, i64 1
  %395 = load i64, i64* %394, align 8
  %396 = and i64 %.sroa.37.1, 255
  %397 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %396
  %398 = load i64, i64* %397, align 8
  %399 = lshr i64 %.sroa.74.1, 8
  %400 = and i64 %399, 255
  %401 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %400
  %402 = load i64, i64* %401, align 8
  %403 = lshr i64 %.sroa.111.1, 16
  %404 = and i64 %403, 255
  %405 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %404
  %406 = load i64, i64* %405, align 8
  %407 = lshr i64 %.sroa.0.1, 24
  %408 = and i64 %407, 255
  %409 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %408
  %410 = load i64, i64* %409, align 8
  %411 = xor i64 %398, %395
  %412 = xor i64 %411, %402
  %413 = xor i64 %412, %406
  %414 = xor i64 %413, %410
  %415 = getelementptr inbounds i64, i64* %.1, i64 2
  %416 = load i64, i64* %415, align 8
  %417 = and i64 %.sroa.74.1, 255
  %418 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %417
  %419 = load i64, i64* %418, align 8
  %420 = lshr i64 %.sroa.111.1, 8
  %421 = and i64 %420, 255
  %422 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %421
  %423 = load i64, i64* %422, align 8
  %424 = lshr i64 %.sroa.0.1, 16
  %425 = and i64 %424, 255
  %426 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %425
  %427 = load i64, i64* %426, align 8
  %428 = lshr i64 %.sroa.37.1, 24
  %429 = and i64 %428, 255
  %430 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %429
  %431 = load i64, i64* %430, align 8
  %432 = xor i64 %419, %416
  %433 = xor i64 %432, %423
  %434 = xor i64 %433, %427
  %435 = xor i64 %434, %431
  %436 = getelementptr inbounds i64, i64* %.1, i64 3
  %437 = load i64, i64* %436, align 8
  %438 = and i64 %.sroa.111.1, 255
  %439 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %438
  %440 = load i64, i64* %439, align 8
  %441 = lshr i64 %.sroa.0.1, 8
  %442 = and i64 %441, 255
  %443 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %442
  %444 = load i64, i64* %443, align 8
  %445 = lshr i64 %.sroa.37.1, 16
  %446 = and i64 %445, 255
  %447 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %446
  %448 = load i64, i64* %447, align 8
  %449 = lshr i64 %.sroa.74.1, 24
  %450 = and i64 %449, 255
  %451 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %450
  %452 = load i64, i64* %451, align 8
  %453 = xor i64 %440, %437
  %454 = xor i64 %453, %444
  %455 = xor i64 %454, %448
  %456 = xor i64 %455, %452
  %457 = getelementptr inbounds i64, i64* %.1, i64 4
  %458 = load i64, i64* %457, align 8
  %459 = and i64 %393, 255
  %460 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %459
  %461 = load i64, i64* %460, align 8
  %462 = lshr i64 %414, 8
  %463 = and i64 %462, 255
  %464 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %463
  %465 = load i64, i64* %464, align 8
  %466 = lshr i64 %435, 16
  %467 = and i64 %466, 255
  %468 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %467
  %469 = load i64, i64* %468, align 8
  %470 = lshr i64 %456, 24
  %471 = and i64 %470, 255
  %472 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %471
  %473 = load i64, i64* %472, align 8
  %474 = xor i64 %461, %458
  %475 = xor i64 %474, %465
  %476 = xor i64 %475, %469
  %477 = xor i64 %476, %473
  %478 = getelementptr inbounds i64, i64* %.1, i64 5
  %479 = load i64, i64* %478, align 8
  %480 = and i64 %414, 255
  %481 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %480
  %482 = load i64, i64* %481, align 8
  %483 = lshr i64 %435, 8
  %484 = and i64 %483, 255
  %485 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %484
  %486 = load i64, i64* %485, align 8
  %487 = lshr i64 %456, 16
  %488 = and i64 %487, 255
  %489 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %488
  %490 = load i64, i64* %489, align 8
  %491 = lshr i64 %393, 24
  %492 = and i64 %491, 255
  %493 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %492
  %494 = load i64, i64* %493, align 8
  %495 = xor i64 %482, %479
  %496 = xor i64 %495, %486
  %497 = xor i64 %496, %490
  %498 = xor i64 %497, %494
  %499 = getelementptr inbounds i64, i64* %.1, i64 6
  %500 = load i64, i64* %499, align 8
  %501 = and i64 %435, 255
  %502 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %501
  %503 = load i64, i64* %502, align 8
  %504 = lshr i64 %456, 8
  %505 = and i64 %504, 255
  %506 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %505
  %507 = load i64, i64* %506, align 8
  %508 = lshr i64 %393, 16
  %509 = and i64 %508, 255
  %510 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %509
  %511 = load i64, i64* %510, align 8
  %512 = lshr i64 %414, 24
  %513 = and i64 %512, 255
  %514 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %513
  %515 = load i64, i64* %514, align 8
  %516 = xor i64 %503, %500
  %517 = xor i64 %516, %507
  %518 = xor i64 %517, %511
  %519 = xor i64 %518, %515
  %520 = getelementptr inbounds i64, i64* %.1, i64 7
  %521 = load i64, i64* %520, align 8
  %522 = and i64 %456, 255
  %523 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %522
  %524 = load i64, i64* %523, align 8
  %525 = lshr i64 %393, 8
  %526 = and i64 %525, 255
  %527 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %526
  %528 = load i64, i64* %527, align 8
  %529 = lshr i64 %414, 16
  %530 = and i64 %529, 255
  %531 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %530
  %532 = load i64, i64* %531, align 8
  %533 = lshr i64 %435, 24
  %534 = and i64 %533, 255
  %535 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %534
  %536 = load i64, i64* %535, align 8
  %537 = xor i64 %524, %521
  %538 = xor i64 %537, %528
  %539 = xor i64 %538, %532
  %540 = xor i64 %539, %536
  %541 = getelementptr inbounds i64, i64* %.1, i64 8
  %542 = load i64, i64* %541, align 8
  %543 = and i64 %477, 255
  %544 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %543
  %545 = load i64, i64* %544, align 8
  %546 = lshr i64 %498, 8
  %547 = and i64 %546, 255
  %548 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %547
  %549 = load i64, i64* %548, align 8
  %550 = lshr i64 %519, 16
  %551 = and i64 %550, 255
  %552 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %551
  %553 = load i64, i64* %552, align 8
  %554 = lshr i64 %540, 24
  %555 = and i64 %554, 255
  %556 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %555
  %557 = load i64, i64* %556, align 8
  %558 = xor i64 %545, %542
  %559 = xor i64 %558, %549
  %560 = xor i64 %559, %553
  %561 = xor i64 %560, %557
  %562 = getelementptr inbounds i64, i64* %.1, i64 9
  %563 = load i64, i64* %562, align 8
  %564 = and i64 %498, 255
  %565 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %564
  %566 = load i64, i64* %565, align 8
  %567 = lshr i64 %519, 8
  %568 = and i64 %567, 255
  %569 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %568
  %570 = load i64, i64* %569, align 8
  %571 = lshr i64 %540, 16
  %572 = and i64 %571, 255
  %573 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %572
  %574 = load i64, i64* %573, align 8
  %575 = lshr i64 %477, 24
  %576 = and i64 %575, 255
  %577 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %576
  %578 = load i64, i64* %577, align 8
  %579 = xor i64 %566, %563
  %580 = xor i64 %579, %570
  %581 = xor i64 %580, %574
  %582 = xor i64 %581, %578
  %583 = getelementptr inbounds i64, i64* %.1, i64 10
  %584 = load i64, i64* %583, align 8
  %585 = and i64 %519, 255
  %586 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %585
  %587 = load i64, i64* %586, align 8
  %588 = lshr i64 %540, 8
  %589 = and i64 %588, 255
  %590 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %589
  %591 = load i64, i64* %590, align 8
  %592 = lshr i64 %477, 16
  %593 = and i64 %592, 255
  %594 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %593
  %595 = load i64, i64* %594, align 8
  %596 = lshr i64 %498, 24
  %597 = and i64 %596, 255
  %598 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %597
  %599 = load i64, i64* %598, align 8
  %600 = xor i64 %587, %584
  %601 = xor i64 %600, %591
  %602 = xor i64 %601, %595
  %603 = xor i64 %602, %599
  %604 = getelementptr inbounds i64, i64* %.1, i64 11
  %605 = load i64, i64* %604, align 8
  %606 = and i64 %540, 255
  %607 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %606
  %608 = load i64, i64* %607, align 8
  %609 = lshr i64 %477, 8
  %610 = and i64 %609, 255
  %611 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %610
  %612 = load i64, i64* %611, align 8
  %613 = lshr i64 %498, 16
  %614 = and i64 %613, 255
  %615 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %614
  %616 = load i64, i64* %615, align 8
  %617 = lshr i64 %519, 24
  %618 = and i64 %617, 255
  %619 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %618
  %620 = load i64, i64* %619, align 8
  %621 = xor i64 %608, %605
  %622 = xor i64 %621, %612
  %623 = xor i64 %622, %616
  %624 = xor i64 %623, %620
  %625 = getelementptr inbounds i64, i64* %.1, i64 12
  %626 = load i64, i64* %625, align 8
  %627 = and i64 %561, 255
  %628 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %627
  %629 = load i64, i64* %628, align 8
  %630 = lshr i64 %582, 8
  %631 = and i64 %630, 255
  %632 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %631
  %633 = load i64, i64* %632, align 8
  %634 = lshr i64 %603, 16
  %635 = and i64 %634, 255
  %636 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %635
  %637 = load i64, i64* %636, align 8
  %638 = lshr i64 %624, 24
  %639 = and i64 %638, 255
  %640 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %639
  %641 = load i64, i64* %640, align 8
  %642 = xor i64 %629, %626
  %643 = xor i64 %642, %633
  %644 = xor i64 %643, %637
  %645 = xor i64 %644, %641
  %646 = getelementptr inbounds i64, i64* %.1, i64 13
  %647 = load i64, i64* %646, align 8
  %648 = and i64 %582, 255
  %649 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %648
  %650 = load i64, i64* %649, align 8
  %651 = lshr i64 %603, 8
  %652 = and i64 %651, 255
  %653 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %652
  %654 = load i64, i64* %653, align 8
  %655 = lshr i64 %624, 16
  %656 = and i64 %655, 255
  %657 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %656
  %658 = load i64, i64* %657, align 8
  %659 = lshr i64 %561, 24
  %660 = and i64 %659, 255
  %661 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %660
  %662 = load i64, i64* %661, align 8
  %663 = xor i64 %650, %647
  %664 = xor i64 %663, %654
  %665 = xor i64 %664, %658
  %666 = xor i64 %665, %662
  %667 = getelementptr inbounds i64, i64* %.1, i64 14
  %668 = load i64, i64* %667, align 8
  %669 = and i64 %603, 255
  %670 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %669
  %671 = load i64, i64* %670, align 8
  %672 = lshr i64 %624, 8
  %673 = and i64 %672, 255
  %674 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %673
  %675 = load i64, i64* %674, align 8
  %676 = lshr i64 %561, 16
  %677 = and i64 %676, 255
  %678 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %677
  %679 = load i64, i64* %678, align 8
  %680 = lshr i64 %582, 24
  %681 = and i64 %680, 255
  %682 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %681
  %683 = load i64, i64* %682, align 8
  %684 = xor i64 %671, %668
  %685 = xor i64 %684, %675
  %686 = xor i64 %685, %679
  %687 = xor i64 %686, %683
  %688 = getelementptr inbounds i64, i64* %.1, i64 15
  %689 = load i64, i64* %688, align 8
  %690 = and i64 %624, 255
  %691 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %690
  %692 = load i64, i64* %691, align 8
  %693 = lshr i64 %561, 8
  %694 = and i64 %693, 255
  %695 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %694
  %696 = load i64, i64* %695, align 8
  %697 = lshr i64 %582, 16
  %698 = and i64 %697, 255
  %699 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %698
  %700 = load i64, i64* %699, align 8
  %701 = lshr i64 %603, 24
  %702 = and i64 %701, 255
  %703 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %702
  %704 = load i64, i64* %703, align 8
  %705 = xor i64 %692, %689
  %706 = xor i64 %705, %696
  %707 = xor i64 %706, %700
  %708 = xor i64 %707, %704
  %709 = getelementptr inbounds i64, i64* %.1, i64 16
  %710 = load i64, i64* %709, align 8
  %711 = and i64 %645, 255
  %712 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %711
  %713 = load i64, i64* %712, align 8
  %714 = lshr i64 %666, 8
  %715 = and i64 %714, 255
  %716 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %715
  %717 = load i64, i64* %716, align 8
  %718 = lshr i64 %687, 16
  %719 = and i64 %718, 255
  %720 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %719
  %721 = load i64, i64* %720, align 8
  %722 = lshr i64 %708, 24
  %723 = and i64 %722, 255
  %724 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %723
  %725 = load i64, i64* %724, align 8
  %726 = xor i64 %713, %710
  %727 = xor i64 %726, %717
  %728 = xor i64 %727, %721
  %729 = xor i64 %728, %725
  %730 = getelementptr inbounds i64, i64* %.1, i64 17
  %731 = load i64, i64* %730, align 8
  %732 = and i64 %666, 255
  %733 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %732
  %734 = load i64, i64* %733, align 8
  %735 = lshr i64 %687, 8
  %736 = and i64 %735, 255
  %737 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %736
  %738 = load i64, i64* %737, align 8
  %739 = lshr i64 %708, 16
  %740 = and i64 %739, 255
  %741 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %740
  %742 = load i64, i64* %741, align 8
  %743 = lshr i64 %645, 24
  %744 = and i64 %743, 255
  %745 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %744
  %746 = load i64, i64* %745, align 8
  %747 = xor i64 %734, %731
  %748 = xor i64 %747, %738
  %749 = xor i64 %748, %742
  %750 = xor i64 %749, %746
  %751 = getelementptr inbounds i64, i64* %.1, i64 18
  %752 = load i64, i64* %751, align 8
  %753 = and i64 %687, 255
  %754 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %753
  %755 = load i64, i64* %754, align 8
  %756 = lshr i64 %708, 8
  %757 = and i64 %756, 255
  %758 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %757
  %759 = load i64, i64* %758, align 8
  %760 = lshr i64 %645, 16
  %761 = and i64 %760, 255
  %762 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %761
  %763 = load i64, i64* %762, align 8
  %764 = lshr i64 %666, 24
  %765 = and i64 %764, 255
  %766 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %765
  %767 = load i64, i64* %766, align 8
  %768 = xor i64 %755, %752
  %769 = xor i64 %768, %759
  %770 = xor i64 %769, %763
  %771 = xor i64 %770, %767
  %772 = getelementptr inbounds i64, i64* %.1, i64 19
  %773 = load i64, i64* %772, align 8
  %774 = and i64 %708, 255
  %775 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %774
  %776 = load i64, i64* %775, align 8
  %777 = lshr i64 %645, 8
  %778 = and i64 %777, 255
  %779 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %778
  %780 = load i64, i64* %779, align 8
  %781 = lshr i64 %666, 16
  %782 = and i64 %781, 255
  %783 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %782
  %784 = load i64, i64* %783, align 8
  %785 = lshr i64 %687, 24
  %786 = and i64 %785, 255
  %787 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %786
  %788 = load i64, i64* %787, align 8
  %789 = xor i64 %776, %773
  %790 = xor i64 %789, %780
  %791 = xor i64 %790, %784
  %792 = xor i64 %791, %788
  %793 = getelementptr inbounds i64, i64* %.1, i64 20
  %794 = load i64, i64* %793, align 8
  %795 = and i64 %729, 255
  %796 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %795
  %797 = load i64, i64* %796, align 8
  %798 = lshr i64 %750, 8
  %799 = and i64 %798, 255
  %800 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %799
  %801 = load i64, i64* %800, align 8
  %802 = lshr i64 %771, 16
  %803 = and i64 %802, 255
  %804 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %803
  %805 = load i64, i64* %804, align 8
  %806 = lshr i64 %792, 24
  %807 = and i64 %806, 255
  %808 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %807
  %809 = load i64, i64* %808, align 8
  %810 = xor i64 %797, %794
  %811 = xor i64 %810, %801
  %812 = xor i64 %811, %805
  %813 = xor i64 %812, %809
  %814 = getelementptr inbounds i64, i64* %.1, i64 21
  %815 = load i64, i64* %814, align 8
  %816 = and i64 %750, 255
  %817 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %816
  %818 = load i64, i64* %817, align 8
  %819 = lshr i64 %771, 8
  %820 = and i64 %819, 255
  %821 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %820
  %822 = load i64, i64* %821, align 8
  %823 = lshr i64 %792, 16
  %824 = and i64 %823, 255
  %825 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %824
  %826 = load i64, i64* %825, align 8
  %827 = lshr i64 %729, 24
  %828 = and i64 %827, 255
  %829 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %828
  %830 = load i64, i64* %829, align 8
  %831 = xor i64 %818, %815
  %832 = xor i64 %831, %822
  %833 = xor i64 %832, %826
  %834 = xor i64 %833, %830
  %835 = getelementptr inbounds i64, i64* %.1, i64 22
  %836 = load i64, i64* %835, align 8
  %837 = and i64 %771, 255
  %838 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %837
  %839 = load i64, i64* %838, align 8
  %840 = lshr i64 %792, 8
  %841 = and i64 %840, 255
  %842 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %841
  %843 = load i64, i64* %842, align 8
  %844 = lshr i64 %729, 16
  %845 = and i64 %844, 255
  %846 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %845
  %847 = load i64, i64* %846, align 8
  %848 = lshr i64 %750, 24
  %849 = and i64 %848, 255
  %850 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %849
  %851 = load i64, i64* %850, align 8
  %852 = xor i64 %839, %836
  %853 = xor i64 %852, %843
  %854 = xor i64 %853, %847
  %855 = xor i64 %854, %851
  %856 = getelementptr inbounds i64, i64* %.1, i64 23
  %857 = load i64, i64* %856, align 8
  %858 = and i64 %792, 255
  %859 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %858
  %860 = load i64, i64* %859, align 8
  %861 = lshr i64 %729, 8
  %862 = and i64 %861, 255
  %863 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %862
  %864 = load i64, i64* %863, align 8
  %865 = lshr i64 %750, 16
  %866 = and i64 %865, 255
  %867 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %866
  %868 = load i64, i64* %867, align 8
  %869 = lshr i64 %771, 24
  %870 = and i64 %869, 255
  %871 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %870
  %872 = load i64, i64* %871, align 8
  %873 = xor i64 %860, %857
  %874 = xor i64 %873, %864
  %875 = xor i64 %874, %868
  %876 = xor i64 %875, %872
  %877 = getelementptr inbounds i64, i64* %.1, i64 24
  %878 = load i64, i64* %877, align 8
  %879 = and i64 %813, 255
  %880 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %879
  %881 = load i64, i64* %880, align 8
  %882 = lshr i64 %834, 8
  %883 = and i64 %882, 255
  %884 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %883
  %885 = load i64, i64* %884, align 8
  %886 = lshr i64 %855, 16
  %887 = and i64 %886, 255
  %888 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %887
  %889 = load i64, i64* %888, align 8
  %890 = lshr i64 %876, 24
  %891 = and i64 %890, 255
  %892 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %891
  %893 = load i64, i64* %892, align 8
  %894 = xor i64 %881, %878
  %895 = xor i64 %894, %885
  %896 = xor i64 %895, %889
  %897 = xor i64 %896, %893
  %898 = getelementptr inbounds i64, i64* %.1, i64 25
  %899 = load i64, i64* %898, align 8
  %900 = and i64 %834, 255
  %901 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %900
  %902 = load i64, i64* %901, align 8
  %903 = lshr i64 %855, 8
  %904 = and i64 %903, 255
  %905 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %904
  %906 = load i64, i64* %905, align 8
  %907 = lshr i64 %876, 16
  %908 = and i64 %907, 255
  %909 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %908
  %910 = load i64, i64* %909, align 8
  %911 = lshr i64 %813, 24
  %912 = and i64 %911, 255
  %913 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %912
  %914 = load i64, i64* %913, align 8
  %915 = xor i64 %902, %899
  %916 = xor i64 %915, %906
  %917 = xor i64 %916, %910
  %918 = xor i64 %917, %914
  %919 = getelementptr inbounds i64, i64* %.1, i64 26
  %920 = load i64, i64* %919, align 8
  %921 = and i64 %855, 255
  %922 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %921
  %923 = load i64, i64* %922, align 8
  %924 = lshr i64 %876, 8
  %925 = and i64 %924, 255
  %926 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %925
  %927 = load i64, i64* %926, align 8
  %928 = lshr i64 %813, 16
  %929 = and i64 %928, 255
  %930 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %929
  %931 = load i64, i64* %930, align 8
  %932 = lshr i64 %834, 24
  %933 = and i64 %932, 255
  %934 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %933
  %935 = load i64, i64* %934, align 8
  %936 = xor i64 %923, %920
  %937 = xor i64 %936, %927
  %938 = xor i64 %937, %931
  %939 = xor i64 %938, %935
  %940 = getelementptr inbounds i64, i64* %.1, i64 27
  %941 = load i64, i64* %940, align 8
  %942 = and i64 %876, 255
  %943 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %942
  %944 = load i64, i64* %943, align 8
  %945 = lshr i64 %813, 8
  %946 = and i64 %945, 255
  %947 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %946
  %948 = load i64, i64* %947, align 8
  %949 = lshr i64 %834, 16
  %950 = and i64 %949, 255
  %951 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %950
  %952 = load i64, i64* %951, align 8
  %953 = lshr i64 %855, 24
  %954 = and i64 %953, 255
  %955 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %954
  %956 = load i64, i64* %955, align 8
  %957 = xor i64 %944, %941
  %958 = xor i64 %957, %948
  %959 = xor i64 %958, %952
  %960 = xor i64 %959, %956
  %961 = getelementptr inbounds i64, i64* %.1, i64 28
  %962 = load i64, i64* %961, align 8
  %963 = and i64 %897, 255
  %964 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %963
  %965 = load i64, i64* %964, align 8
  %966 = lshr i64 %918, 8
  %967 = and i64 %966, 255
  %968 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %967
  %969 = load i64, i64* %968, align 8
  %970 = lshr i64 %939, 16
  %971 = and i64 %970, 255
  %972 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %971
  %973 = load i64, i64* %972, align 8
  %974 = lshr i64 %960, 24
  %975 = and i64 %974, 255
  %976 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %975
  %977 = load i64, i64* %976, align 8
  %978 = xor i64 %965, %962
  %979 = xor i64 %978, %969
  %980 = xor i64 %979, %973
  %981 = xor i64 %980, %977
  %982 = getelementptr inbounds i64, i64* %.1, i64 29
  %983 = load i64, i64* %982, align 8
  %984 = and i64 %918, 255
  %985 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %984
  %986 = load i64, i64* %985, align 8
  %987 = lshr i64 %939, 8
  %988 = and i64 %987, 255
  %989 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %988
  %990 = load i64, i64* %989, align 8
  %991 = lshr i64 %960, 16
  %992 = and i64 %991, 255
  %993 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %992
  %994 = load i64, i64* %993, align 8
  %995 = lshr i64 %897, 24
  %996 = and i64 %995, 255
  %997 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %996
  %998 = load i64, i64* %997, align 8
  %999 = xor i64 %986, %983
  %1000 = xor i64 %999, %990
  %1001 = xor i64 %1000, %994
  %1002 = xor i64 %1001, %998
  %1003 = getelementptr inbounds i64, i64* %.1, i64 30
  %1004 = load i64, i64* %1003, align 8
  %1005 = and i64 %939, 255
  %1006 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %1005
  %1007 = load i64, i64* %1006, align 8
  %1008 = lshr i64 %960, 8
  %1009 = and i64 %1008, 255
  %1010 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %1009
  %1011 = load i64, i64* %1010, align 8
  %1012 = lshr i64 %897, 16
  %1013 = and i64 %1012, 255
  %1014 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %1013
  %1015 = load i64, i64* %1014, align 8
  %1016 = lshr i64 %918, 24
  %1017 = and i64 %1016, 255
  %1018 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %1017
  %1019 = load i64, i64* %1018, align 8
  %1020 = xor i64 %1007, %1004
  %1021 = xor i64 %1020, %1011
  %1022 = xor i64 %1021, %1015
  %1023 = xor i64 %1022, %1019
  %1024 = getelementptr inbounds i64, i64* %.1, i64 31
  %1025 = load i64, i64* %1024, align 8
  %1026 = and i64 %960, 255
  %1027 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %1026
  %1028 = load i64, i64* %1027, align 8
  %1029 = lshr i64 %897, 8
  %1030 = and i64 %1029, 255
  %1031 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %1030
  %1032 = load i64, i64* %1031, align 8
  %1033 = lshr i64 %918, 16
  %1034 = and i64 %1033, 255
  %1035 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %1034
  %1036 = load i64, i64* %1035, align 8
  %1037 = lshr i64 %939, 24
  %1038 = and i64 %1037, 255
  %1039 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %1038
  %1040 = load i64, i64* %1039, align 8
  %1041 = xor i64 %1028, %1025
  %1042 = xor i64 %1041, %1032
  %1043 = xor i64 %1042, %1036
  %1044 = xor i64 %1043, %1040
  %1045 = getelementptr inbounds i64, i64* %.1, i64 32
  %1046 = load i64, i64* %1045, align 8
  %1047 = and i64 %981, 255
  %1048 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %1047
  %1049 = load i64, i64* %1048, align 8
  %1050 = lshr i64 %1002, 8
  %1051 = and i64 %1050, 255
  %1052 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %1051
  %1053 = load i64, i64* %1052, align 8
  %1054 = lshr i64 %1023, 16
  %1055 = and i64 %1054, 255
  %1056 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %1055
  %1057 = load i64, i64* %1056, align 8
  %1058 = lshr i64 %1044, 24
  %1059 = and i64 %1058, 255
  %1060 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %1059
  %1061 = load i64, i64* %1060, align 8
  %1062 = xor i64 %1049, %1046
  %1063 = xor i64 %1062, %1053
  %1064 = xor i64 %1063, %1057
  %1065 = xor i64 %1064, %1061
  %1066 = getelementptr inbounds i64, i64* %.1, i64 33
  %1067 = load i64, i64* %1066, align 8
  %1068 = and i64 %1002, 255
  %1069 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %1068
  %1070 = load i64, i64* %1069, align 8
  %1071 = lshr i64 %1023, 8
  %1072 = and i64 %1071, 255
  %1073 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %1072
  %1074 = load i64, i64* %1073, align 8
  %1075 = lshr i64 %1044, 16
  %1076 = and i64 %1075, 255
  %1077 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %1076
  %1078 = load i64, i64* %1077, align 8
  %1079 = lshr i64 %981, 24
  %1080 = and i64 %1079, 255
  %1081 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %1080
  %1082 = load i64, i64* %1081, align 8
  %1083 = xor i64 %1070, %1067
  %1084 = xor i64 %1083, %1074
  %1085 = xor i64 %1084, %1078
  %1086 = xor i64 %1085, %1082
  %1087 = getelementptr inbounds i64, i64* %.1, i64 34
  %1088 = load i64, i64* %1087, align 8
  %1089 = and i64 %1023, 255
  %1090 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %1089
  %1091 = load i64, i64* %1090, align 8
  %1092 = lshr i64 %1044, 8
  %1093 = and i64 %1092, 255
  %1094 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %1093
  %1095 = load i64, i64* %1094, align 8
  %1096 = lshr i64 %981, 16
  %1097 = and i64 %1096, 255
  %1098 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %1097
  %1099 = load i64, i64* %1098, align 8
  %1100 = lshr i64 %1002, 24
  %1101 = and i64 %1100, 255
  %1102 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %1101
  %1103 = load i64, i64* %1102, align 8
  %1104 = xor i64 %1091, %1088
  %1105 = xor i64 %1104, %1095
  %1106 = xor i64 %1105, %1099
  %1107 = xor i64 %1106, %1103
  %1108 = getelementptr inbounds i64, i64* %.1, i64 35
  %1109 = load i64, i64* %1108, align 8
  %1110 = and i64 %1044, 255
  %1111 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 0, i64 %1110
  %1112 = load i64, i64* %1111, align 8
  %1113 = lshr i64 %981, 8
  %1114 = and i64 %1113, 255
  %1115 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 1, i64 %1114
  %1116 = load i64, i64* %1115, align 8
  %1117 = lshr i64 %1002, 16
  %1118 = and i64 %1117, 255
  %1119 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 2, i64 %1118
  %1120 = load i64, i64* %1119, align 8
  %1121 = lshr i64 %1023, 24
  %1122 = and i64 %1121, 255
  %1123 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @ft_tab, i64 0, i64 3, i64 %1122
  %1124 = load i64, i64* %1123, align 8
  %1125 = xor i64 %1112, %1109
  %1126 = xor i64 %1125, %1116
  %1127 = xor i64 %1126, %1120
  %1128 = xor i64 %1127, %1124
  %1129 = getelementptr inbounds i64, i64* %.1, i64 36
  %1130 = load i64, i64* %1129, align 8
  %1131 = and i64 %1065, 255
  %1132 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 0, i64 %1131
  %1133 = load i64, i64* %1132, align 8
  %1134 = lshr i64 %1086, 8
  %1135 = and i64 %1134, 255
  %1136 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 1, i64 %1135
  %1137 = load i64, i64* %1136, align 8
  %1138 = lshr i64 %1107, 16
  %1139 = and i64 %1138, 255
  %1140 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 2, i64 %1139
  %1141 = load i64, i64* %1140, align 8
  %1142 = lshr i64 %1128, 24
  %1143 = and i64 %1142, 255
  %1144 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 3, i64 %1143
  %1145 = load i64, i64* %1144, align 8
  %1146 = xor i64 %1133, %1130
  %1147 = xor i64 %1146, %1137
  %1148 = xor i64 %1147, %1141
  %1149 = xor i64 %1148, %1145
  %1150 = getelementptr inbounds i64, i64* %.1, i64 37
  %1151 = load i64, i64* %1150, align 8
  %1152 = and i64 %1086, 255
  %1153 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 0, i64 %1152
  %1154 = load i64, i64* %1153, align 8
  %1155 = lshr i64 %1107, 8
  %1156 = and i64 %1155, 255
  %1157 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 1, i64 %1156
  %1158 = load i64, i64* %1157, align 8
  %1159 = lshr i64 %1128, 16
  %1160 = and i64 %1159, 255
  %1161 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 2, i64 %1160
  %1162 = load i64, i64* %1161, align 8
  %1163 = lshr i64 %1065, 24
  %1164 = and i64 %1163, 255
  %1165 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 3, i64 %1164
  %1166 = load i64, i64* %1165, align 8
  %1167 = xor i64 %1154, %1151
  %1168 = xor i64 %1167, %1158
  %1169 = xor i64 %1168, %1162
  %1170 = xor i64 %1169, %1166
  %1171 = getelementptr inbounds i64, i64* %.1, i64 38
  %1172 = load i64, i64* %1171, align 8
  %1173 = and i64 %1107, 255
  %1174 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 0, i64 %1173
  %1175 = load i64, i64* %1174, align 8
  %1176 = lshr i64 %1128, 8
  %1177 = and i64 %1176, 255
  %1178 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 1, i64 %1177
  %1179 = load i64, i64* %1178, align 8
  %1180 = lshr i64 %1065, 16
  %1181 = and i64 %1180, 255
  %1182 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 2, i64 %1181
  %1183 = load i64, i64* %1182, align 8
  %1184 = lshr i64 %1086, 24
  %1185 = and i64 %1184, 255
  %1186 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 3, i64 %1185
  %1187 = load i64, i64* %1186, align 8
  %1188 = xor i64 %1175, %1172
  %1189 = xor i64 %1188, %1179
  %1190 = xor i64 %1189, %1183
  %1191 = xor i64 %1190, %1187
  %1192 = getelementptr inbounds i64, i64* %.1, i64 39
  %1193 = load i64, i64* %1192, align 8
  %1194 = and i64 %1128, 255
  %1195 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 0, i64 %1194
  %1196 = load i64, i64* %1195, align 8
  %1197 = lshr i64 %1065, 8
  %1198 = and i64 %1197, 255
  %1199 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 1, i64 %1198
  %1200 = load i64, i64* %1199, align 8
  %1201 = lshr i64 %1086, 16
  %1202 = and i64 %1201, 255
  %1203 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 2, i64 %1202
  %1204 = load i64, i64* %1203, align 8
  %1205 = lshr i64 %1107, 24
  %1206 = and i64 %1205, 255
  %1207 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @fl_tab, i64 0, i64 3, i64 %1206
  %1208 = load i64, i64* %1207, align 8
  %1209 = xor i64 %1196, %1193
  %1210 = xor i64 %1209, %1200
  %1211 = xor i64 %1210, %1204
  %1212 = xor i64 %1211, %1208
  br label %1213

; <label>:1213:                                   ; preds = %373, %8
  %.sroa.111.2 = phi i64 [ %31, %8 ], [ %1212, %373 ]
  %.sroa.74.2 = phi i64 [ %25, %8 ], [ %1191, %373 ]
  %.sroa.37.2 = phi i64 [ %19, %8 ], [ %1170, %373 ]
  %.sroa.0.2 = phi i64 [ %13, %8 ], [ %1149, %373 ]
  %1214 = bitcast i8* %1 to i64*
  store i64 %.sroa.0.2, i64* %1214, align 8
  %1215 = getelementptr inbounds i8, i8* %1, i64 4
  %1216 = bitcast i8* %1215 to i64*
  store i64 %.sroa.37.2, i64* %1216, align 8
  %1217 = getelementptr inbounds i8, i8* %1, i64 8
  %1218 = bitcast i8* %1217 to i64*
  store i64 %.sroa.74.2, i64* %1218, align 8
  %1219 = getelementptr inbounds i8, i8* %1, i64 12
  %1220 = bitcast i8* %1219 to i64*
  store i64 %.sroa.111.2, i64* %1220, align 8
  br label %1221

; <label>:1221:                                   ; preds = %1213, %3
  %.0 = phi i16 [ 1, %1213 ], [ 0, %3 ]
  ret i16 %.0
}

; Function Attrs: noinline norecurse nounwind uwtable
define signext i16 @decrypt(i8* nocapture readonly, i8* nocapture, %struct.aes* readonly) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 4
  %5 = load i8, i8* %4, align 8
  %6 = and i8 %5, 2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %1221, label %8

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 3, i64 0
  %10 = bitcast i8* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = load i64, i64* %9, align 8
  %13 = xor i64 %12, %11
  %14 = getelementptr inbounds i8, i8* %0, i64 4
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 3, i64 1
  %18 = load i64, i64* %17, align 8
  %19 = xor i64 %18, %16
  %20 = getelementptr inbounds i8, i8* %0, i64 8
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 3, i64 2
  %24 = load i64, i64* %23, align 8
  %25 = xor i64 %24, %22
  %26 = getelementptr inbounds i8, i8* %0, i64 12
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 3, i64 3
  %30 = load i64, i64* %29, align 8
  %31 = xor i64 %30, %28
  %32 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 3, i64 4
  %33 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 1
  %34 = load i64, i64* %33, align 8
  switch i64 %34, label %1213 [
    i64 14, label %35
    i64 12, label %204
    i64 10, label %373
  ]

; <label>:35:                                     ; preds = %8
  %36 = load i64, i64* %32, align 8
  %37 = and i64 %13, 255
  %38 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %37
  %39 = load i64, i64* %38, align 8
  %40 = lshr i64 %31, 8
  %41 = and i64 %40, 255
  %42 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %41
  %43 = load i64, i64* %42, align 8
  %44 = lshr i64 %25, 16
  %45 = and i64 %44, 255
  %46 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %45
  %47 = load i64, i64* %46, align 8
  %48 = lshr i64 %19, 24
  %49 = and i64 %48, 255
  %50 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %49
  %51 = load i64, i64* %50, align 8
  %52 = xor i64 %39, %36
  %53 = xor i64 %52, %43
  %54 = xor i64 %53, %47
  %55 = xor i64 %54, %51
  %56 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 3, i64 5
  %57 = load i64, i64* %56, align 8
  %58 = and i64 %19, 255
  %59 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %58
  %60 = load i64, i64* %59, align 8
  %61 = lshr i64 %13, 8
  %62 = and i64 %61, 255
  %63 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %62
  %64 = load i64, i64* %63, align 8
  %65 = lshr i64 %31, 16
  %66 = and i64 %65, 255
  %67 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %66
  %68 = load i64, i64* %67, align 8
  %69 = lshr i64 %25, 24
  %70 = and i64 %69, 255
  %71 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %70
  %72 = load i64, i64* %71, align 8
  %73 = xor i64 %60, %57
  %74 = xor i64 %73, %64
  %75 = xor i64 %74, %68
  %76 = xor i64 %75, %72
  %77 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 3, i64 6
  %78 = load i64, i64* %77, align 8
  %79 = and i64 %25, 255
  %80 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %79
  %81 = load i64, i64* %80, align 8
  %82 = lshr i64 %19, 8
  %83 = and i64 %82, 255
  %84 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %83
  %85 = load i64, i64* %84, align 8
  %86 = lshr i64 %13, 16
  %87 = and i64 %86, 255
  %88 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %87
  %89 = load i64, i64* %88, align 8
  %90 = lshr i64 %31, 24
  %91 = and i64 %90, 255
  %92 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %91
  %93 = load i64, i64* %92, align 8
  %94 = xor i64 %81, %78
  %95 = xor i64 %94, %85
  %96 = xor i64 %95, %89
  %97 = xor i64 %96, %93
  %98 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 3, i64 7
  %99 = load i64, i64* %98, align 8
  %100 = and i64 %31, 255
  %101 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %100
  %102 = load i64, i64* %101, align 8
  %103 = lshr i64 %25, 8
  %104 = and i64 %103, 255
  %105 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %104
  %106 = load i64, i64* %105, align 8
  %107 = lshr i64 %19, 16
  %108 = and i64 %107, 255
  %109 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %108
  %110 = load i64, i64* %109, align 8
  %111 = lshr i64 %13, 24
  %112 = and i64 %111, 255
  %113 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %112
  %114 = load i64, i64* %113, align 8
  %115 = xor i64 %102, %99
  %116 = xor i64 %115, %106
  %117 = xor i64 %116, %110
  %118 = xor i64 %117, %114
  %119 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 3, i64 8
  %120 = load i64, i64* %119, align 8
  %121 = and i64 %55, 255
  %122 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %121
  %123 = load i64, i64* %122, align 8
  %124 = lshr i64 %118, 8
  %125 = and i64 %124, 255
  %126 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %125
  %127 = load i64, i64* %126, align 8
  %128 = lshr i64 %97, 16
  %129 = and i64 %128, 255
  %130 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %129
  %131 = load i64, i64* %130, align 8
  %132 = lshr i64 %76, 24
  %133 = and i64 %132, 255
  %134 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %133
  %135 = load i64, i64* %134, align 8
  %136 = xor i64 %123, %120
  %137 = xor i64 %136, %127
  %138 = xor i64 %137, %131
  %139 = xor i64 %138, %135
  %140 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 3, i64 9
  %141 = load i64, i64* %140, align 8
  %142 = and i64 %76, 255
  %143 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %142
  %144 = load i64, i64* %143, align 8
  %145 = lshr i64 %55, 8
  %146 = and i64 %145, 255
  %147 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %146
  %148 = load i64, i64* %147, align 8
  %149 = lshr i64 %118, 16
  %150 = and i64 %149, 255
  %151 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %150
  %152 = load i64, i64* %151, align 8
  %153 = lshr i64 %97, 24
  %154 = and i64 %153, 255
  %155 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %154
  %156 = load i64, i64* %155, align 8
  %157 = xor i64 %144, %141
  %158 = xor i64 %157, %148
  %159 = xor i64 %158, %152
  %160 = xor i64 %159, %156
  %161 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 3, i64 10
  %162 = load i64, i64* %161, align 8
  %163 = and i64 %97, 255
  %164 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %163
  %165 = load i64, i64* %164, align 8
  %166 = lshr i64 %76, 8
  %167 = and i64 %166, 255
  %168 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %167
  %169 = load i64, i64* %168, align 8
  %170 = lshr i64 %55, 16
  %171 = and i64 %170, 255
  %172 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %171
  %173 = load i64, i64* %172, align 8
  %174 = lshr i64 %118, 24
  %175 = and i64 %174, 255
  %176 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %175
  %177 = load i64, i64* %176, align 8
  %178 = xor i64 %165, %162
  %179 = xor i64 %178, %169
  %180 = xor i64 %179, %173
  %181 = xor i64 %180, %177
  %182 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 3, i64 11
  %183 = load i64, i64* %182, align 8
  %184 = and i64 %118, 255
  %185 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %184
  %186 = load i64, i64* %185, align 8
  %187 = lshr i64 %97, 8
  %188 = and i64 %187, 255
  %189 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %188
  %190 = load i64, i64* %189, align 8
  %191 = lshr i64 %76, 16
  %192 = and i64 %191, 255
  %193 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %192
  %194 = load i64, i64* %193, align 8
  %195 = lshr i64 %55, 24
  %196 = and i64 %195, 255
  %197 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %196
  %198 = load i64, i64* %197, align 8
  %199 = xor i64 %186, %183
  %200 = xor i64 %199, %190
  %201 = xor i64 %200, %194
  %202 = xor i64 %201, %198
  %203 = getelementptr inbounds %struct.aes, %struct.aes* %2, i64 0, i32 3, i64 12
  br label %204

; <label>:204:                                    ; preds = %35, %8
  %.sroa.111.0 = phi i64 [ %31, %8 ], [ %202, %35 ]
  %.sroa.74.0 = phi i64 [ %25, %8 ], [ %181, %35 ]
  %.sroa.37.0 = phi i64 [ %19, %8 ], [ %160, %35 ]
  %.sroa.0.0 = phi i64 [ %13, %8 ], [ %139, %35 ]
  %.01 = phi i64* [ %32, %8 ], [ %203, %35 ]
  %205 = load i64, i64* %.01, align 8
  %206 = and i64 %.sroa.0.0, 255
  %207 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %206
  %208 = load i64, i64* %207, align 8
  %209 = lshr i64 %.sroa.111.0, 8
  %210 = and i64 %209, 255
  %211 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %210
  %212 = load i64, i64* %211, align 8
  %213 = lshr i64 %.sroa.74.0, 16
  %214 = and i64 %213, 255
  %215 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %214
  %216 = load i64, i64* %215, align 8
  %217 = lshr i64 %.sroa.37.0, 24
  %218 = and i64 %217, 255
  %219 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %218
  %220 = load i64, i64* %219, align 8
  %221 = xor i64 %208, %205
  %222 = xor i64 %221, %212
  %223 = xor i64 %222, %216
  %224 = xor i64 %223, %220
  %225 = getelementptr inbounds i64, i64* %.01, i64 1
  %226 = load i64, i64* %225, align 8
  %227 = and i64 %.sroa.37.0, 255
  %228 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %227
  %229 = load i64, i64* %228, align 8
  %230 = lshr i64 %.sroa.0.0, 8
  %231 = and i64 %230, 255
  %232 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %231
  %233 = load i64, i64* %232, align 8
  %234 = lshr i64 %.sroa.111.0, 16
  %235 = and i64 %234, 255
  %236 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %235
  %237 = load i64, i64* %236, align 8
  %238 = lshr i64 %.sroa.74.0, 24
  %239 = and i64 %238, 255
  %240 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %239
  %241 = load i64, i64* %240, align 8
  %242 = xor i64 %229, %226
  %243 = xor i64 %242, %233
  %244 = xor i64 %243, %237
  %245 = xor i64 %244, %241
  %246 = getelementptr inbounds i64, i64* %.01, i64 2
  %247 = load i64, i64* %246, align 8
  %248 = and i64 %.sroa.74.0, 255
  %249 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %248
  %250 = load i64, i64* %249, align 8
  %251 = lshr i64 %.sroa.37.0, 8
  %252 = and i64 %251, 255
  %253 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %252
  %254 = load i64, i64* %253, align 8
  %255 = lshr i64 %.sroa.0.0, 16
  %256 = and i64 %255, 255
  %257 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %256
  %258 = load i64, i64* %257, align 8
  %259 = lshr i64 %.sroa.111.0, 24
  %260 = and i64 %259, 255
  %261 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %260
  %262 = load i64, i64* %261, align 8
  %263 = xor i64 %250, %247
  %264 = xor i64 %263, %254
  %265 = xor i64 %264, %258
  %266 = xor i64 %265, %262
  %267 = getelementptr inbounds i64, i64* %.01, i64 3
  %268 = load i64, i64* %267, align 8
  %269 = and i64 %.sroa.111.0, 255
  %270 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %269
  %271 = load i64, i64* %270, align 8
  %272 = lshr i64 %.sroa.74.0, 8
  %273 = and i64 %272, 255
  %274 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %273
  %275 = load i64, i64* %274, align 8
  %276 = lshr i64 %.sroa.37.0, 16
  %277 = and i64 %276, 255
  %278 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %277
  %279 = load i64, i64* %278, align 8
  %280 = lshr i64 %.sroa.0.0, 24
  %281 = and i64 %280, 255
  %282 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %281
  %283 = load i64, i64* %282, align 8
  %284 = xor i64 %271, %268
  %285 = xor i64 %284, %275
  %286 = xor i64 %285, %279
  %287 = xor i64 %286, %283
  %288 = getelementptr inbounds i64, i64* %.01, i64 4
  %289 = load i64, i64* %288, align 8
  %290 = and i64 %224, 255
  %291 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %290
  %292 = load i64, i64* %291, align 8
  %293 = lshr i64 %287, 8
  %294 = and i64 %293, 255
  %295 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %294
  %296 = load i64, i64* %295, align 8
  %297 = lshr i64 %266, 16
  %298 = and i64 %297, 255
  %299 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %298
  %300 = load i64, i64* %299, align 8
  %301 = lshr i64 %245, 24
  %302 = and i64 %301, 255
  %303 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %302
  %304 = load i64, i64* %303, align 8
  %305 = xor i64 %292, %289
  %306 = xor i64 %305, %296
  %307 = xor i64 %306, %300
  %308 = xor i64 %307, %304
  %309 = getelementptr inbounds i64, i64* %.01, i64 5
  %310 = load i64, i64* %309, align 8
  %311 = and i64 %245, 255
  %312 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %311
  %313 = load i64, i64* %312, align 8
  %314 = lshr i64 %224, 8
  %315 = and i64 %314, 255
  %316 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %315
  %317 = load i64, i64* %316, align 8
  %318 = lshr i64 %287, 16
  %319 = and i64 %318, 255
  %320 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %319
  %321 = load i64, i64* %320, align 8
  %322 = lshr i64 %266, 24
  %323 = and i64 %322, 255
  %324 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %323
  %325 = load i64, i64* %324, align 8
  %326 = xor i64 %313, %310
  %327 = xor i64 %326, %317
  %328 = xor i64 %327, %321
  %329 = xor i64 %328, %325
  %330 = getelementptr inbounds i64, i64* %.01, i64 6
  %331 = load i64, i64* %330, align 8
  %332 = and i64 %266, 255
  %333 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %332
  %334 = load i64, i64* %333, align 8
  %335 = lshr i64 %245, 8
  %336 = and i64 %335, 255
  %337 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %336
  %338 = load i64, i64* %337, align 8
  %339 = lshr i64 %224, 16
  %340 = and i64 %339, 255
  %341 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %340
  %342 = load i64, i64* %341, align 8
  %343 = lshr i64 %287, 24
  %344 = and i64 %343, 255
  %345 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %344
  %346 = load i64, i64* %345, align 8
  %347 = xor i64 %334, %331
  %348 = xor i64 %347, %338
  %349 = xor i64 %348, %342
  %350 = xor i64 %349, %346
  %351 = getelementptr inbounds i64, i64* %.01, i64 7
  %352 = load i64, i64* %351, align 8
  %353 = and i64 %287, 255
  %354 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %353
  %355 = load i64, i64* %354, align 8
  %356 = lshr i64 %266, 8
  %357 = and i64 %356, 255
  %358 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %357
  %359 = load i64, i64* %358, align 8
  %360 = lshr i64 %245, 16
  %361 = and i64 %360, 255
  %362 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %361
  %363 = load i64, i64* %362, align 8
  %364 = lshr i64 %224, 24
  %365 = and i64 %364, 255
  %366 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %365
  %367 = load i64, i64* %366, align 8
  %368 = xor i64 %355, %352
  %369 = xor i64 %368, %359
  %370 = xor i64 %369, %363
  %371 = xor i64 %370, %367
  %372 = getelementptr inbounds i64, i64* %.01, i64 8
  br label %373

; <label>:373:                                    ; preds = %204, %8
  %.sroa.111.1 = phi i64 [ %31, %8 ], [ %371, %204 ]
  %.sroa.74.1 = phi i64 [ %25, %8 ], [ %350, %204 ]
  %.sroa.37.1 = phi i64 [ %19, %8 ], [ %329, %204 ]
  %.sroa.0.1 = phi i64 [ %13, %8 ], [ %308, %204 ]
  %.1 = phi i64* [ %32, %8 ], [ %372, %204 ]
  %374 = load i64, i64* %.1, align 8
  %375 = and i64 %.sroa.0.1, 255
  %376 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %375
  %377 = load i64, i64* %376, align 8
  %378 = lshr i64 %.sroa.111.1, 8
  %379 = and i64 %378, 255
  %380 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %379
  %381 = load i64, i64* %380, align 8
  %382 = lshr i64 %.sroa.74.1, 16
  %383 = and i64 %382, 255
  %384 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %383
  %385 = load i64, i64* %384, align 8
  %386 = lshr i64 %.sroa.37.1, 24
  %387 = and i64 %386, 255
  %388 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %387
  %389 = load i64, i64* %388, align 8
  %390 = xor i64 %377, %374
  %391 = xor i64 %390, %381
  %392 = xor i64 %391, %385
  %393 = xor i64 %392, %389
  %394 = getelementptr inbounds i64, i64* %.1, i64 1
  %395 = load i64, i64* %394, align 8
  %396 = and i64 %.sroa.37.1, 255
  %397 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %396
  %398 = load i64, i64* %397, align 8
  %399 = lshr i64 %.sroa.0.1, 8
  %400 = and i64 %399, 255
  %401 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %400
  %402 = load i64, i64* %401, align 8
  %403 = lshr i64 %.sroa.111.1, 16
  %404 = and i64 %403, 255
  %405 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %404
  %406 = load i64, i64* %405, align 8
  %407 = lshr i64 %.sroa.74.1, 24
  %408 = and i64 %407, 255
  %409 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %408
  %410 = load i64, i64* %409, align 8
  %411 = xor i64 %398, %395
  %412 = xor i64 %411, %402
  %413 = xor i64 %412, %406
  %414 = xor i64 %413, %410
  %415 = getelementptr inbounds i64, i64* %.1, i64 2
  %416 = load i64, i64* %415, align 8
  %417 = and i64 %.sroa.74.1, 255
  %418 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %417
  %419 = load i64, i64* %418, align 8
  %420 = lshr i64 %.sroa.37.1, 8
  %421 = and i64 %420, 255
  %422 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %421
  %423 = load i64, i64* %422, align 8
  %424 = lshr i64 %.sroa.0.1, 16
  %425 = and i64 %424, 255
  %426 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %425
  %427 = load i64, i64* %426, align 8
  %428 = lshr i64 %.sroa.111.1, 24
  %429 = and i64 %428, 255
  %430 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %429
  %431 = load i64, i64* %430, align 8
  %432 = xor i64 %419, %416
  %433 = xor i64 %432, %423
  %434 = xor i64 %433, %427
  %435 = xor i64 %434, %431
  %436 = getelementptr inbounds i64, i64* %.1, i64 3
  %437 = load i64, i64* %436, align 8
  %438 = and i64 %.sroa.111.1, 255
  %439 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %438
  %440 = load i64, i64* %439, align 8
  %441 = lshr i64 %.sroa.74.1, 8
  %442 = and i64 %441, 255
  %443 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %442
  %444 = load i64, i64* %443, align 8
  %445 = lshr i64 %.sroa.37.1, 16
  %446 = and i64 %445, 255
  %447 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %446
  %448 = load i64, i64* %447, align 8
  %449 = lshr i64 %.sroa.0.1, 24
  %450 = and i64 %449, 255
  %451 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %450
  %452 = load i64, i64* %451, align 8
  %453 = xor i64 %440, %437
  %454 = xor i64 %453, %444
  %455 = xor i64 %454, %448
  %456 = xor i64 %455, %452
  %457 = getelementptr inbounds i64, i64* %.1, i64 4
  %458 = load i64, i64* %457, align 8
  %459 = and i64 %393, 255
  %460 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %459
  %461 = load i64, i64* %460, align 8
  %462 = lshr i64 %456, 8
  %463 = and i64 %462, 255
  %464 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %463
  %465 = load i64, i64* %464, align 8
  %466 = lshr i64 %435, 16
  %467 = and i64 %466, 255
  %468 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %467
  %469 = load i64, i64* %468, align 8
  %470 = lshr i64 %414, 24
  %471 = and i64 %470, 255
  %472 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %471
  %473 = load i64, i64* %472, align 8
  %474 = xor i64 %461, %458
  %475 = xor i64 %474, %465
  %476 = xor i64 %475, %469
  %477 = xor i64 %476, %473
  %478 = getelementptr inbounds i64, i64* %.1, i64 5
  %479 = load i64, i64* %478, align 8
  %480 = and i64 %414, 255
  %481 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %480
  %482 = load i64, i64* %481, align 8
  %483 = lshr i64 %393, 8
  %484 = and i64 %483, 255
  %485 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %484
  %486 = load i64, i64* %485, align 8
  %487 = lshr i64 %456, 16
  %488 = and i64 %487, 255
  %489 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %488
  %490 = load i64, i64* %489, align 8
  %491 = lshr i64 %435, 24
  %492 = and i64 %491, 255
  %493 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %492
  %494 = load i64, i64* %493, align 8
  %495 = xor i64 %482, %479
  %496 = xor i64 %495, %486
  %497 = xor i64 %496, %490
  %498 = xor i64 %497, %494
  %499 = getelementptr inbounds i64, i64* %.1, i64 6
  %500 = load i64, i64* %499, align 8
  %501 = and i64 %435, 255
  %502 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %501
  %503 = load i64, i64* %502, align 8
  %504 = lshr i64 %414, 8
  %505 = and i64 %504, 255
  %506 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %505
  %507 = load i64, i64* %506, align 8
  %508 = lshr i64 %393, 16
  %509 = and i64 %508, 255
  %510 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %509
  %511 = load i64, i64* %510, align 8
  %512 = lshr i64 %456, 24
  %513 = and i64 %512, 255
  %514 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %513
  %515 = load i64, i64* %514, align 8
  %516 = xor i64 %503, %500
  %517 = xor i64 %516, %507
  %518 = xor i64 %517, %511
  %519 = xor i64 %518, %515
  %520 = getelementptr inbounds i64, i64* %.1, i64 7
  %521 = load i64, i64* %520, align 8
  %522 = and i64 %456, 255
  %523 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %522
  %524 = load i64, i64* %523, align 8
  %525 = lshr i64 %435, 8
  %526 = and i64 %525, 255
  %527 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %526
  %528 = load i64, i64* %527, align 8
  %529 = lshr i64 %414, 16
  %530 = and i64 %529, 255
  %531 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %530
  %532 = load i64, i64* %531, align 8
  %533 = lshr i64 %393, 24
  %534 = and i64 %533, 255
  %535 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %534
  %536 = load i64, i64* %535, align 8
  %537 = xor i64 %524, %521
  %538 = xor i64 %537, %528
  %539 = xor i64 %538, %532
  %540 = xor i64 %539, %536
  %541 = getelementptr inbounds i64, i64* %.1, i64 8
  %542 = load i64, i64* %541, align 8
  %543 = and i64 %477, 255
  %544 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %543
  %545 = load i64, i64* %544, align 8
  %546 = lshr i64 %540, 8
  %547 = and i64 %546, 255
  %548 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %547
  %549 = load i64, i64* %548, align 8
  %550 = lshr i64 %519, 16
  %551 = and i64 %550, 255
  %552 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %551
  %553 = load i64, i64* %552, align 8
  %554 = lshr i64 %498, 24
  %555 = and i64 %554, 255
  %556 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %555
  %557 = load i64, i64* %556, align 8
  %558 = xor i64 %545, %542
  %559 = xor i64 %558, %549
  %560 = xor i64 %559, %553
  %561 = xor i64 %560, %557
  %562 = getelementptr inbounds i64, i64* %.1, i64 9
  %563 = load i64, i64* %562, align 8
  %564 = and i64 %498, 255
  %565 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %564
  %566 = load i64, i64* %565, align 8
  %567 = lshr i64 %477, 8
  %568 = and i64 %567, 255
  %569 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %568
  %570 = load i64, i64* %569, align 8
  %571 = lshr i64 %540, 16
  %572 = and i64 %571, 255
  %573 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %572
  %574 = load i64, i64* %573, align 8
  %575 = lshr i64 %519, 24
  %576 = and i64 %575, 255
  %577 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %576
  %578 = load i64, i64* %577, align 8
  %579 = xor i64 %566, %563
  %580 = xor i64 %579, %570
  %581 = xor i64 %580, %574
  %582 = xor i64 %581, %578
  %583 = getelementptr inbounds i64, i64* %.1, i64 10
  %584 = load i64, i64* %583, align 8
  %585 = and i64 %519, 255
  %586 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %585
  %587 = load i64, i64* %586, align 8
  %588 = lshr i64 %498, 8
  %589 = and i64 %588, 255
  %590 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %589
  %591 = load i64, i64* %590, align 8
  %592 = lshr i64 %477, 16
  %593 = and i64 %592, 255
  %594 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %593
  %595 = load i64, i64* %594, align 8
  %596 = lshr i64 %540, 24
  %597 = and i64 %596, 255
  %598 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %597
  %599 = load i64, i64* %598, align 8
  %600 = xor i64 %587, %584
  %601 = xor i64 %600, %591
  %602 = xor i64 %601, %595
  %603 = xor i64 %602, %599
  %604 = getelementptr inbounds i64, i64* %.1, i64 11
  %605 = load i64, i64* %604, align 8
  %606 = and i64 %540, 255
  %607 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %606
  %608 = load i64, i64* %607, align 8
  %609 = lshr i64 %519, 8
  %610 = and i64 %609, 255
  %611 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %610
  %612 = load i64, i64* %611, align 8
  %613 = lshr i64 %498, 16
  %614 = and i64 %613, 255
  %615 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %614
  %616 = load i64, i64* %615, align 8
  %617 = lshr i64 %477, 24
  %618 = and i64 %617, 255
  %619 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %618
  %620 = load i64, i64* %619, align 8
  %621 = xor i64 %608, %605
  %622 = xor i64 %621, %612
  %623 = xor i64 %622, %616
  %624 = xor i64 %623, %620
  %625 = getelementptr inbounds i64, i64* %.1, i64 12
  %626 = load i64, i64* %625, align 8
  %627 = and i64 %561, 255
  %628 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %627
  %629 = load i64, i64* %628, align 8
  %630 = lshr i64 %624, 8
  %631 = and i64 %630, 255
  %632 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %631
  %633 = load i64, i64* %632, align 8
  %634 = lshr i64 %603, 16
  %635 = and i64 %634, 255
  %636 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %635
  %637 = load i64, i64* %636, align 8
  %638 = lshr i64 %582, 24
  %639 = and i64 %638, 255
  %640 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %639
  %641 = load i64, i64* %640, align 8
  %642 = xor i64 %629, %626
  %643 = xor i64 %642, %633
  %644 = xor i64 %643, %637
  %645 = xor i64 %644, %641
  %646 = getelementptr inbounds i64, i64* %.1, i64 13
  %647 = load i64, i64* %646, align 8
  %648 = and i64 %582, 255
  %649 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %648
  %650 = load i64, i64* %649, align 8
  %651 = lshr i64 %561, 8
  %652 = and i64 %651, 255
  %653 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %652
  %654 = load i64, i64* %653, align 8
  %655 = lshr i64 %624, 16
  %656 = and i64 %655, 255
  %657 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %656
  %658 = load i64, i64* %657, align 8
  %659 = lshr i64 %603, 24
  %660 = and i64 %659, 255
  %661 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %660
  %662 = load i64, i64* %661, align 8
  %663 = xor i64 %650, %647
  %664 = xor i64 %663, %654
  %665 = xor i64 %664, %658
  %666 = xor i64 %665, %662
  %667 = getelementptr inbounds i64, i64* %.1, i64 14
  %668 = load i64, i64* %667, align 8
  %669 = and i64 %603, 255
  %670 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %669
  %671 = load i64, i64* %670, align 8
  %672 = lshr i64 %582, 8
  %673 = and i64 %672, 255
  %674 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %673
  %675 = load i64, i64* %674, align 8
  %676 = lshr i64 %561, 16
  %677 = and i64 %676, 255
  %678 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %677
  %679 = load i64, i64* %678, align 8
  %680 = lshr i64 %624, 24
  %681 = and i64 %680, 255
  %682 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %681
  %683 = load i64, i64* %682, align 8
  %684 = xor i64 %671, %668
  %685 = xor i64 %684, %675
  %686 = xor i64 %685, %679
  %687 = xor i64 %686, %683
  %688 = getelementptr inbounds i64, i64* %.1, i64 15
  %689 = load i64, i64* %688, align 8
  %690 = and i64 %624, 255
  %691 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %690
  %692 = load i64, i64* %691, align 8
  %693 = lshr i64 %603, 8
  %694 = and i64 %693, 255
  %695 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %694
  %696 = load i64, i64* %695, align 8
  %697 = lshr i64 %582, 16
  %698 = and i64 %697, 255
  %699 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %698
  %700 = load i64, i64* %699, align 8
  %701 = lshr i64 %561, 24
  %702 = and i64 %701, 255
  %703 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %702
  %704 = load i64, i64* %703, align 8
  %705 = xor i64 %692, %689
  %706 = xor i64 %705, %696
  %707 = xor i64 %706, %700
  %708 = xor i64 %707, %704
  %709 = getelementptr inbounds i64, i64* %.1, i64 16
  %710 = load i64, i64* %709, align 8
  %711 = and i64 %645, 255
  %712 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %711
  %713 = load i64, i64* %712, align 8
  %714 = lshr i64 %708, 8
  %715 = and i64 %714, 255
  %716 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %715
  %717 = load i64, i64* %716, align 8
  %718 = lshr i64 %687, 16
  %719 = and i64 %718, 255
  %720 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %719
  %721 = load i64, i64* %720, align 8
  %722 = lshr i64 %666, 24
  %723 = and i64 %722, 255
  %724 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %723
  %725 = load i64, i64* %724, align 8
  %726 = xor i64 %713, %710
  %727 = xor i64 %726, %717
  %728 = xor i64 %727, %721
  %729 = xor i64 %728, %725
  %730 = getelementptr inbounds i64, i64* %.1, i64 17
  %731 = load i64, i64* %730, align 8
  %732 = and i64 %666, 255
  %733 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %732
  %734 = load i64, i64* %733, align 8
  %735 = lshr i64 %645, 8
  %736 = and i64 %735, 255
  %737 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %736
  %738 = load i64, i64* %737, align 8
  %739 = lshr i64 %708, 16
  %740 = and i64 %739, 255
  %741 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %740
  %742 = load i64, i64* %741, align 8
  %743 = lshr i64 %687, 24
  %744 = and i64 %743, 255
  %745 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %744
  %746 = load i64, i64* %745, align 8
  %747 = xor i64 %734, %731
  %748 = xor i64 %747, %738
  %749 = xor i64 %748, %742
  %750 = xor i64 %749, %746
  %751 = getelementptr inbounds i64, i64* %.1, i64 18
  %752 = load i64, i64* %751, align 8
  %753 = and i64 %687, 255
  %754 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %753
  %755 = load i64, i64* %754, align 8
  %756 = lshr i64 %666, 8
  %757 = and i64 %756, 255
  %758 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %757
  %759 = load i64, i64* %758, align 8
  %760 = lshr i64 %645, 16
  %761 = and i64 %760, 255
  %762 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %761
  %763 = load i64, i64* %762, align 8
  %764 = lshr i64 %708, 24
  %765 = and i64 %764, 255
  %766 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %765
  %767 = load i64, i64* %766, align 8
  %768 = xor i64 %755, %752
  %769 = xor i64 %768, %759
  %770 = xor i64 %769, %763
  %771 = xor i64 %770, %767
  %772 = getelementptr inbounds i64, i64* %.1, i64 19
  %773 = load i64, i64* %772, align 8
  %774 = and i64 %708, 255
  %775 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %774
  %776 = load i64, i64* %775, align 8
  %777 = lshr i64 %687, 8
  %778 = and i64 %777, 255
  %779 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %778
  %780 = load i64, i64* %779, align 8
  %781 = lshr i64 %666, 16
  %782 = and i64 %781, 255
  %783 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %782
  %784 = load i64, i64* %783, align 8
  %785 = lshr i64 %645, 24
  %786 = and i64 %785, 255
  %787 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %786
  %788 = load i64, i64* %787, align 8
  %789 = xor i64 %776, %773
  %790 = xor i64 %789, %780
  %791 = xor i64 %790, %784
  %792 = xor i64 %791, %788
  %793 = getelementptr inbounds i64, i64* %.1, i64 20
  %794 = load i64, i64* %793, align 8
  %795 = and i64 %729, 255
  %796 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %795
  %797 = load i64, i64* %796, align 8
  %798 = lshr i64 %792, 8
  %799 = and i64 %798, 255
  %800 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %799
  %801 = load i64, i64* %800, align 8
  %802 = lshr i64 %771, 16
  %803 = and i64 %802, 255
  %804 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %803
  %805 = load i64, i64* %804, align 8
  %806 = lshr i64 %750, 24
  %807 = and i64 %806, 255
  %808 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %807
  %809 = load i64, i64* %808, align 8
  %810 = xor i64 %797, %794
  %811 = xor i64 %810, %801
  %812 = xor i64 %811, %805
  %813 = xor i64 %812, %809
  %814 = getelementptr inbounds i64, i64* %.1, i64 21
  %815 = load i64, i64* %814, align 8
  %816 = and i64 %750, 255
  %817 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %816
  %818 = load i64, i64* %817, align 8
  %819 = lshr i64 %729, 8
  %820 = and i64 %819, 255
  %821 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %820
  %822 = load i64, i64* %821, align 8
  %823 = lshr i64 %792, 16
  %824 = and i64 %823, 255
  %825 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %824
  %826 = load i64, i64* %825, align 8
  %827 = lshr i64 %771, 24
  %828 = and i64 %827, 255
  %829 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %828
  %830 = load i64, i64* %829, align 8
  %831 = xor i64 %818, %815
  %832 = xor i64 %831, %822
  %833 = xor i64 %832, %826
  %834 = xor i64 %833, %830
  %835 = getelementptr inbounds i64, i64* %.1, i64 22
  %836 = load i64, i64* %835, align 8
  %837 = and i64 %771, 255
  %838 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %837
  %839 = load i64, i64* %838, align 8
  %840 = lshr i64 %750, 8
  %841 = and i64 %840, 255
  %842 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %841
  %843 = load i64, i64* %842, align 8
  %844 = lshr i64 %729, 16
  %845 = and i64 %844, 255
  %846 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %845
  %847 = load i64, i64* %846, align 8
  %848 = lshr i64 %792, 24
  %849 = and i64 %848, 255
  %850 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %849
  %851 = load i64, i64* %850, align 8
  %852 = xor i64 %839, %836
  %853 = xor i64 %852, %843
  %854 = xor i64 %853, %847
  %855 = xor i64 %854, %851
  %856 = getelementptr inbounds i64, i64* %.1, i64 23
  %857 = load i64, i64* %856, align 8
  %858 = and i64 %792, 255
  %859 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %858
  %860 = load i64, i64* %859, align 8
  %861 = lshr i64 %771, 8
  %862 = and i64 %861, 255
  %863 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %862
  %864 = load i64, i64* %863, align 8
  %865 = lshr i64 %750, 16
  %866 = and i64 %865, 255
  %867 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %866
  %868 = load i64, i64* %867, align 8
  %869 = lshr i64 %729, 24
  %870 = and i64 %869, 255
  %871 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %870
  %872 = load i64, i64* %871, align 8
  %873 = xor i64 %860, %857
  %874 = xor i64 %873, %864
  %875 = xor i64 %874, %868
  %876 = xor i64 %875, %872
  %877 = getelementptr inbounds i64, i64* %.1, i64 24
  %878 = load i64, i64* %877, align 8
  %879 = and i64 %813, 255
  %880 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %879
  %881 = load i64, i64* %880, align 8
  %882 = lshr i64 %876, 8
  %883 = and i64 %882, 255
  %884 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %883
  %885 = load i64, i64* %884, align 8
  %886 = lshr i64 %855, 16
  %887 = and i64 %886, 255
  %888 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %887
  %889 = load i64, i64* %888, align 8
  %890 = lshr i64 %834, 24
  %891 = and i64 %890, 255
  %892 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %891
  %893 = load i64, i64* %892, align 8
  %894 = xor i64 %881, %878
  %895 = xor i64 %894, %885
  %896 = xor i64 %895, %889
  %897 = xor i64 %896, %893
  %898 = getelementptr inbounds i64, i64* %.1, i64 25
  %899 = load i64, i64* %898, align 8
  %900 = and i64 %834, 255
  %901 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %900
  %902 = load i64, i64* %901, align 8
  %903 = lshr i64 %813, 8
  %904 = and i64 %903, 255
  %905 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %904
  %906 = load i64, i64* %905, align 8
  %907 = lshr i64 %876, 16
  %908 = and i64 %907, 255
  %909 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %908
  %910 = load i64, i64* %909, align 8
  %911 = lshr i64 %855, 24
  %912 = and i64 %911, 255
  %913 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %912
  %914 = load i64, i64* %913, align 8
  %915 = xor i64 %902, %899
  %916 = xor i64 %915, %906
  %917 = xor i64 %916, %910
  %918 = xor i64 %917, %914
  %919 = getelementptr inbounds i64, i64* %.1, i64 26
  %920 = load i64, i64* %919, align 8
  %921 = and i64 %855, 255
  %922 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %921
  %923 = load i64, i64* %922, align 8
  %924 = lshr i64 %834, 8
  %925 = and i64 %924, 255
  %926 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %925
  %927 = load i64, i64* %926, align 8
  %928 = lshr i64 %813, 16
  %929 = and i64 %928, 255
  %930 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %929
  %931 = load i64, i64* %930, align 8
  %932 = lshr i64 %876, 24
  %933 = and i64 %932, 255
  %934 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %933
  %935 = load i64, i64* %934, align 8
  %936 = xor i64 %923, %920
  %937 = xor i64 %936, %927
  %938 = xor i64 %937, %931
  %939 = xor i64 %938, %935
  %940 = getelementptr inbounds i64, i64* %.1, i64 27
  %941 = load i64, i64* %940, align 8
  %942 = and i64 %876, 255
  %943 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %942
  %944 = load i64, i64* %943, align 8
  %945 = lshr i64 %855, 8
  %946 = and i64 %945, 255
  %947 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %946
  %948 = load i64, i64* %947, align 8
  %949 = lshr i64 %834, 16
  %950 = and i64 %949, 255
  %951 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %950
  %952 = load i64, i64* %951, align 8
  %953 = lshr i64 %813, 24
  %954 = and i64 %953, 255
  %955 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %954
  %956 = load i64, i64* %955, align 8
  %957 = xor i64 %944, %941
  %958 = xor i64 %957, %948
  %959 = xor i64 %958, %952
  %960 = xor i64 %959, %956
  %961 = getelementptr inbounds i64, i64* %.1, i64 28
  %962 = load i64, i64* %961, align 8
  %963 = and i64 %897, 255
  %964 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %963
  %965 = load i64, i64* %964, align 8
  %966 = lshr i64 %960, 8
  %967 = and i64 %966, 255
  %968 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %967
  %969 = load i64, i64* %968, align 8
  %970 = lshr i64 %939, 16
  %971 = and i64 %970, 255
  %972 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %971
  %973 = load i64, i64* %972, align 8
  %974 = lshr i64 %918, 24
  %975 = and i64 %974, 255
  %976 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %975
  %977 = load i64, i64* %976, align 8
  %978 = xor i64 %965, %962
  %979 = xor i64 %978, %969
  %980 = xor i64 %979, %973
  %981 = xor i64 %980, %977
  %982 = getelementptr inbounds i64, i64* %.1, i64 29
  %983 = load i64, i64* %982, align 8
  %984 = and i64 %918, 255
  %985 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %984
  %986 = load i64, i64* %985, align 8
  %987 = lshr i64 %897, 8
  %988 = and i64 %987, 255
  %989 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %988
  %990 = load i64, i64* %989, align 8
  %991 = lshr i64 %960, 16
  %992 = and i64 %991, 255
  %993 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %992
  %994 = load i64, i64* %993, align 8
  %995 = lshr i64 %939, 24
  %996 = and i64 %995, 255
  %997 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %996
  %998 = load i64, i64* %997, align 8
  %999 = xor i64 %986, %983
  %1000 = xor i64 %999, %990
  %1001 = xor i64 %1000, %994
  %1002 = xor i64 %1001, %998
  %1003 = getelementptr inbounds i64, i64* %.1, i64 30
  %1004 = load i64, i64* %1003, align 8
  %1005 = and i64 %939, 255
  %1006 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %1005
  %1007 = load i64, i64* %1006, align 8
  %1008 = lshr i64 %918, 8
  %1009 = and i64 %1008, 255
  %1010 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %1009
  %1011 = load i64, i64* %1010, align 8
  %1012 = lshr i64 %897, 16
  %1013 = and i64 %1012, 255
  %1014 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %1013
  %1015 = load i64, i64* %1014, align 8
  %1016 = lshr i64 %960, 24
  %1017 = and i64 %1016, 255
  %1018 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %1017
  %1019 = load i64, i64* %1018, align 8
  %1020 = xor i64 %1007, %1004
  %1021 = xor i64 %1020, %1011
  %1022 = xor i64 %1021, %1015
  %1023 = xor i64 %1022, %1019
  %1024 = getelementptr inbounds i64, i64* %.1, i64 31
  %1025 = load i64, i64* %1024, align 8
  %1026 = and i64 %960, 255
  %1027 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %1026
  %1028 = load i64, i64* %1027, align 8
  %1029 = lshr i64 %939, 8
  %1030 = and i64 %1029, 255
  %1031 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %1030
  %1032 = load i64, i64* %1031, align 8
  %1033 = lshr i64 %918, 16
  %1034 = and i64 %1033, 255
  %1035 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %1034
  %1036 = load i64, i64* %1035, align 8
  %1037 = lshr i64 %897, 24
  %1038 = and i64 %1037, 255
  %1039 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %1038
  %1040 = load i64, i64* %1039, align 8
  %1041 = xor i64 %1028, %1025
  %1042 = xor i64 %1041, %1032
  %1043 = xor i64 %1042, %1036
  %1044 = xor i64 %1043, %1040
  %1045 = getelementptr inbounds i64, i64* %.1, i64 32
  %1046 = load i64, i64* %1045, align 8
  %1047 = and i64 %981, 255
  %1048 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %1047
  %1049 = load i64, i64* %1048, align 8
  %1050 = lshr i64 %1044, 8
  %1051 = and i64 %1050, 255
  %1052 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %1051
  %1053 = load i64, i64* %1052, align 8
  %1054 = lshr i64 %1023, 16
  %1055 = and i64 %1054, 255
  %1056 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %1055
  %1057 = load i64, i64* %1056, align 8
  %1058 = lshr i64 %1002, 24
  %1059 = and i64 %1058, 255
  %1060 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %1059
  %1061 = load i64, i64* %1060, align 8
  %1062 = xor i64 %1049, %1046
  %1063 = xor i64 %1062, %1053
  %1064 = xor i64 %1063, %1057
  %1065 = xor i64 %1064, %1061
  %1066 = getelementptr inbounds i64, i64* %.1, i64 33
  %1067 = load i64, i64* %1066, align 8
  %1068 = and i64 %1002, 255
  %1069 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %1068
  %1070 = load i64, i64* %1069, align 8
  %1071 = lshr i64 %981, 8
  %1072 = and i64 %1071, 255
  %1073 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %1072
  %1074 = load i64, i64* %1073, align 8
  %1075 = lshr i64 %1044, 16
  %1076 = and i64 %1075, 255
  %1077 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %1076
  %1078 = load i64, i64* %1077, align 8
  %1079 = lshr i64 %1023, 24
  %1080 = and i64 %1079, 255
  %1081 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %1080
  %1082 = load i64, i64* %1081, align 8
  %1083 = xor i64 %1070, %1067
  %1084 = xor i64 %1083, %1074
  %1085 = xor i64 %1084, %1078
  %1086 = xor i64 %1085, %1082
  %1087 = getelementptr inbounds i64, i64* %.1, i64 34
  %1088 = load i64, i64* %1087, align 8
  %1089 = and i64 %1023, 255
  %1090 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %1089
  %1091 = load i64, i64* %1090, align 8
  %1092 = lshr i64 %1002, 8
  %1093 = and i64 %1092, 255
  %1094 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %1093
  %1095 = load i64, i64* %1094, align 8
  %1096 = lshr i64 %981, 16
  %1097 = and i64 %1096, 255
  %1098 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %1097
  %1099 = load i64, i64* %1098, align 8
  %1100 = lshr i64 %1044, 24
  %1101 = and i64 %1100, 255
  %1102 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %1101
  %1103 = load i64, i64* %1102, align 8
  %1104 = xor i64 %1091, %1088
  %1105 = xor i64 %1104, %1095
  %1106 = xor i64 %1105, %1099
  %1107 = xor i64 %1106, %1103
  %1108 = getelementptr inbounds i64, i64* %.1, i64 35
  %1109 = load i64, i64* %1108, align 8
  %1110 = and i64 %1044, 255
  %1111 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 0, i64 %1110
  %1112 = load i64, i64* %1111, align 8
  %1113 = lshr i64 %1023, 8
  %1114 = and i64 %1113, 255
  %1115 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 1, i64 %1114
  %1116 = load i64, i64* %1115, align 8
  %1117 = lshr i64 %1002, 16
  %1118 = and i64 %1117, 255
  %1119 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 2, i64 %1118
  %1120 = load i64, i64* %1119, align 8
  %1121 = lshr i64 %981, 24
  %1122 = and i64 %1121, 255
  %1123 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @it_tab, i64 0, i64 3, i64 %1122
  %1124 = load i64, i64* %1123, align 8
  %1125 = xor i64 %1112, %1109
  %1126 = xor i64 %1125, %1116
  %1127 = xor i64 %1126, %1120
  %1128 = xor i64 %1127, %1124
  %1129 = getelementptr inbounds i64, i64* %.1, i64 36
  %1130 = load i64, i64* %1129, align 8
  %1131 = and i64 %1065, 255
  %1132 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @il_tab, i64 0, i64 0, i64 %1131
  %1133 = load i64, i64* %1132, align 8
  %1134 = lshr i64 %1128, 8
  %1135 = and i64 %1134, 255
  %1136 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @il_tab, i64 0, i64 1, i64 %1135
  %1137 = load i64, i64* %1136, align 8
  %1138 = lshr i64 %1107, 16
  %1139 = and i64 %1138, 255
  %1140 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @il_tab, i64 0, i64 2, i64 %1139
  %1141 = load i64, i64* %1140, align 8
  %1142 = lshr i64 %1086, 24
  %1143 = and i64 %1142, 255
  %1144 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @il_tab, i64 0, i64 3, i64 %1143
  %1145 = load i64, i64* %1144, align 8
  %1146 = xor i64 %1133, %1130
  %1147 = xor i64 %1146, %1137
  %1148 = xor i64 %1147, %1141
  %1149 = xor i64 %1148, %1145
  %1150 = getelementptr inbounds i64, i64* %.1, i64 37
  %1151 = load i64, i64* %1150, align 8
  %1152 = and i64 %1086, 255
  %1153 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @il_tab, i64 0, i64 0, i64 %1152
  %1154 = load i64, i64* %1153, align 8
  %1155 = lshr i64 %1065, 8
  %1156 = and i64 %1155, 255
  %1157 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @il_tab, i64 0, i64 1, i64 %1156
  %1158 = load i64, i64* %1157, align 8
  %1159 = lshr i64 %1128, 16
  %1160 = and i64 %1159, 255
  %1161 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @il_tab, i64 0, i64 2, i64 %1160
  %1162 = load i64, i64* %1161, align 8
  %1163 = lshr i64 %1107, 24
  %1164 = and i64 %1163, 255
  %1165 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @il_tab, i64 0, i64 3, i64 %1164
  %1166 = load i64, i64* %1165, align 8
  %1167 = xor i64 %1154, %1151
  %1168 = xor i64 %1167, %1158
  %1169 = xor i64 %1168, %1162
  %1170 = xor i64 %1169, %1166
  %1171 = getelementptr inbounds i64, i64* %.1, i64 38
  %1172 = load i64, i64* %1171, align 8
  %1173 = and i64 %1107, 255
  %1174 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @il_tab, i64 0, i64 0, i64 %1173
  %1175 = load i64, i64* %1174, align 8
  %1176 = lshr i64 %1086, 8
  %1177 = and i64 %1176, 255
  %1178 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @il_tab, i64 0, i64 1, i64 %1177
  %1179 = load i64, i64* %1178, align 8
  %1180 = lshr i64 %1065, 16
  %1181 = and i64 %1180, 255
  %1182 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @il_tab, i64 0, i64 2, i64 %1181
  %1183 = load i64, i64* %1182, align 8
  %1184 = lshr i64 %1128, 24
  %1185 = and i64 %1184, 255
  %1186 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @il_tab, i64 0, i64 3, i64 %1185
  %1187 = load i64, i64* %1186, align 8
  %1188 = xor i64 %1175, %1172
  %1189 = xor i64 %1188, %1179
  %1190 = xor i64 %1189, %1183
  %1191 = xor i64 %1190, %1187
  %1192 = getelementptr inbounds i64, i64* %.1, i64 39
  %1193 = load i64, i64* %1192, align 8
  %1194 = and i64 %1128, 255
  %1195 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @il_tab, i64 0, i64 0, i64 %1194
  %1196 = load i64, i64* %1195, align 8
  %1197 = lshr i64 %1107, 8
  %1198 = and i64 %1197, 255
  %1199 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @il_tab, i64 0, i64 1, i64 %1198
  %1200 = load i64, i64* %1199, align 8
  %1201 = lshr i64 %1086, 16
  %1202 = and i64 %1201, 255
  %1203 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @il_tab, i64 0, i64 2, i64 %1202
  %1204 = load i64, i64* %1203, align 8
  %1205 = lshr i64 %1065, 24
  %1206 = and i64 %1205, 255
  %1207 = getelementptr inbounds [4 x [256 x i64]], [4 x [256 x i64]]* @il_tab, i64 0, i64 3, i64 %1206
  %1208 = load i64, i64* %1207, align 8
  %1209 = xor i64 %1196, %1193
  %1210 = xor i64 %1209, %1200
  %1211 = xor i64 %1210, %1204
  %1212 = xor i64 %1211, %1208
  br label %1213

; <label>:1213:                                   ; preds = %373, %8
  %.sroa.111.2 = phi i64 [ %31, %8 ], [ %1212, %373 ]
  %.sroa.74.2 = phi i64 [ %25, %8 ], [ %1191, %373 ]
  %.sroa.37.2 = phi i64 [ %19, %8 ], [ %1170, %373 ]
  %.sroa.0.2 = phi i64 [ %13, %8 ], [ %1149, %373 ]
  %1214 = bitcast i8* %1 to i64*
  store i64 %.sroa.0.2, i64* %1214, align 8
  %1215 = getelementptr inbounds i8, i8* %1, i64 4
  %1216 = bitcast i8* %1215 to i64*
  store i64 %.sroa.37.2, i64* %1216, align 8
  %1217 = getelementptr inbounds i8, i8* %1, i64 8
  %1218 = bitcast i8* %1217 to i64*
  store i64 %.sroa.74.2, i64* %1218, align 8
  %1219 = getelementptr inbounds i8, i8* %1, i64 12
  %1220 = bitcast i8* %1219 to i64*
  store i64 %.sroa.111.2, i64* %1220, align 8
  br label %1221

; <label>:1221:                                   ; preds = %1213, %3
  %.0 = phi i16 [ 1, %1213 ], [ 0, %3 ]
  ret i16 %.0
}

attributes #0 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"clang version 4.0.0 (tags/RELEASE_400/final)"}
