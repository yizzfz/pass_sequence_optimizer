; ModuleID = 'gsm_implode.ll'
source_filename = "gsm_implode.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.gsm_state = type { [280 x i16], i16, i64, i32, [8 x i16], [2 x [8 x i16]], i16, i16, [9 x i16], i16, i8, i8 }

; Function Attrs: noinline norecurse nounwind uwtable
define void @gsm_implode(%struct.gsm_state* nocapture readnone, i16* readonly, i8*) local_unnamed_addr #0 {
  %4 = load i16, i16* %1, align 2
  %5 = lshr i16 %4, 2
  %6 = trunc i16 %5 to i8
  %7 = and i8 %6, 15
  %8 = or i8 %7, -48
  %9 = getelementptr inbounds i8, i8* %2, i64 1
  store i8 %8, i8* %2, align 1
  %10 = load i16, i16* %1, align 2
  %11 = shl i16 %10, 6
  %12 = getelementptr inbounds i16, i16* %1, i64 1
  %13 = load i16, i16* %12, align 2
  %14 = and i16 %13, 63
  %15 = or i16 %14, %11
  %16 = trunc i16 %15 to i8
  %17 = getelementptr inbounds i8, i8* %2, i64 2
  store i8 %16, i8* %9, align 1
  %18 = getelementptr inbounds i16, i16* %1, i64 2
  %19 = load i16, i16* %18, align 2
  %20 = shl i16 %19, 3
  %21 = zext i16 %20 to i32
  %22 = getelementptr inbounds i16, i16* %1, i64 3
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = lshr i32 %24, 2
  %26 = and i32 %25, 7
  %27 = or i32 %26, %21
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds i8, i8* %2, i64 3
  store i8 %28, i8* %17, align 1
  %30 = load i16, i16* %22, align 2
  %31 = shl i16 %30, 6
  %32 = getelementptr inbounds i16, i16* %1, i64 4
  %33 = load i16, i16* %32, align 2
  %34 = shl i16 %33, 2
  %35 = and i16 %34, 60
  %36 = or i16 %35, %31
  %37 = zext i16 %36 to i32
  %38 = getelementptr inbounds i16, i16* %1, i64 5
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = lshr i32 %40, 2
  %42 = and i32 %41, 3
  %43 = or i32 %37, %42
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds i8, i8* %2, i64 4
  store i8 %44, i8* %29, align 1
  %46 = load i16, i16* %38, align 2
  %47 = shl i16 %46, 6
  %48 = getelementptr inbounds i16, i16* %1, i64 6
  %49 = load i16, i16* %48, align 2
  %50 = shl i16 %49, 3
  %51 = and i16 %50, 56
  %52 = or i16 %51, %47
  %53 = getelementptr inbounds i16, i16* %1, i64 7
  %54 = load i16, i16* %53, align 2
  %55 = and i16 %54, 7
  %56 = or i16 %52, %55
  %57 = trunc i16 %56 to i8
  %58 = getelementptr inbounds i8, i8* %2, i64 5
  store i8 %57, i8* %45, align 1
  %59 = getelementptr inbounds i16, i16* %1, i64 8
  %60 = load i16, i16* %59, align 2
  %61 = shl i16 %60, 1
  %62 = zext i16 %61 to i32
  %63 = getelementptr inbounds i16, i16* %1, i64 9
  %64 = load i16, i16* %63, align 2
  %65 = zext i16 %64 to i32
  %66 = lshr i32 %65, 1
  %67 = and i32 %66, 1
  %68 = or i32 %67, %62
  %69 = trunc i32 %68 to i8
  %70 = getelementptr inbounds i8, i8* %2, i64 6
  store i8 %69, i8* %58, align 1
  %71 = load i16, i16* %63, align 2
  %72 = shl i16 %71, 7
  %73 = getelementptr inbounds i16, i16* %1, i64 10
  %74 = load i16, i16* %73, align 2
  %75 = shl i16 %74, 5
  %76 = and i16 %75, 96
  %77 = or i16 %76, %72
  %78 = zext i16 %77 to i32
  %79 = getelementptr inbounds i16, i16* %1, i64 11
  %80 = load i16, i16* %79, align 2
  %81 = zext i16 %80 to i32
  %82 = lshr i32 %81, 1
  %83 = and i32 %82, 31
  %84 = or i32 %78, %83
  %85 = trunc i32 %84 to i8
  %86 = getelementptr inbounds i8, i8* %2, i64 7
  store i8 %85, i8* %70, align 1
  %87 = load i16, i16* %79, align 2
  %88 = shl i16 %87, 7
  %89 = and i16 %88, 128
  %90 = getelementptr inbounds i16, i16* %1, i64 12
  %91 = load i16, i16* %90, align 2
  %92 = shl i16 %91, 4
  %93 = and i16 %92, 112
  %94 = or i16 %93, %89
  %95 = getelementptr inbounds i16, i16* %1, i64 13
  %96 = load i16, i16* %95, align 2
  %97 = shl i16 %96, 1
  %98 = and i16 %97, 14
  %99 = or i16 %94, %98
  %100 = zext i16 %99 to i32
  %101 = getelementptr inbounds i16, i16* %1, i64 14
  %102 = load i16, i16* %101, align 2
  %103 = zext i16 %102 to i32
  %104 = lshr i32 %103, 2
  %105 = and i32 %104, 1
  %106 = or i32 %100, %105
  %107 = trunc i32 %106 to i8
  %108 = getelementptr inbounds i8, i8* %2, i64 8
  store i8 %107, i8* %86, align 1
  %109 = load i16, i16* %101, align 2
  %110 = shl i16 %109, 6
  %111 = getelementptr inbounds i16, i16* %1, i64 15
  %112 = load i16, i16* %111, align 2
  %113 = shl i16 %112, 3
  %114 = and i16 %113, 56
  %115 = or i16 %114, %110
  %116 = getelementptr inbounds i16, i16* %1, i64 16
  %117 = load i16, i16* %116, align 2
  %118 = and i16 %117, 7
  %119 = or i16 %115, %118
  %120 = trunc i16 %119 to i8
  %121 = getelementptr inbounds i8, i8* %2, i64 9
  store i8 %120, i8* %108, align 1
  %122 = getelementptr inbounds i16, i16* %1, i64 17
  %123 = load i16, i16* %122, align 2
  %124 = shl i16 %123, 5
  %125 = getelementptr inbounds i16, i16* %1, i64 18
  %126 = load i16, i16* %125, align 2
  %127 = shl i16 %126, 2
  %128 = and i16 %127, 28
  %129 = or i16 %128, %124
  %130 = zext i16 %129 to i32
  %131 = getelementptr inbounds i16, i16* %1, i64 19
  %132 = load i16, i16* %131, align 2
  %133 = zext i16 %132 to i32
  %134 = lshr i32 %133, 1
  %135 = and i32 %134, 3
  %136 = or i32 %130, %135
  %137 = trunc i32 %136 to i8
  %138 = getelementptr inbounds i8, i8* %2, i64 10
  store i8 %137, i8* %121, align 1
  %139 = load i16, i16* %131, align 2
  %140 = shl i16 %139, 7
  %141 = and i16 %140, 128
  %142 = getelementptr inbounds i16, i16* %1, i64 20
  %143 = load i16, i16* %142, align 2
  %144 = shl i16 %143, 4
  %145 = and i16 %144, 112
  %146 = or i16 %145, %141
  %147 = getelementptr inbounds i16, i16* %1, i64 21
  %148 = load i16, i16* %147, align 2
  %149 = shl i16 %148, 1
  %150 = and i16 %149, 14
  %151 = or i16 %146, %150
  %152 = zext i16 %151 to i32
  %153 = getelementptr inbounds i16, i16* %1, i64 22
  %154 = load i16, i16* %153, align 2
  %155 = zext i16 %154 to i32
  %156 = lshr i32 %155, 2
  %157 = and i32 %156, 1
  %158 = or i32 %152, %157
  %159 = trunc i32 %158 to i8
  %160 = getelementptr inbounds i8, i8* %2, i64 11
  store i8 %159, i8* %138, align 1
  %161 = load i16, i16* %153, align 2
  %162 = shl i16 %161, 6
  %163 = getelementptr inbounds i16, i16* %1, i64 23
  %164 = load i16, i16* %163, align 2
  %165 = shl i16 %164, 3
  %166 = and i16 %165, 56
  %167 = or i16 %166, %162
  %168 = getelementptr inbounds i16, i16* %1, i64 24
  %169 = load i16, i16* %168, align 2
  %170 = and i16 %169, 7
  %171 = or i16 %167, %170
  %172 = trunc i16 %171 to i8
  %173 = getelementptr inbounds i8, i8* %2, i64 12
  store i8 %172, i8* %160, align 1
  %174 = getelementptr inbounds i16, i16* %1, i64 25
  %175 = load i16, i16* %174, align 2
  %176 = shl i16 %175, 1
  %177 = zext i16 %176 to i32
  %178 = getelementptr inbounds i16, i16* %1, i64 26
  %179 = load i16, i16* %178, align 2
  %180 = zext i16 %179 to i32
  %181 = lshr i32 %180, 1
  %182 = and i32 %181, 1
  %183 = or i32 %182, %177
  %184 = trunc i32 %183 to i8
  %185 = getelementptr inbounds i8, i8* %2, i64 13
  store i8 %184, i8* %173, align 1
  %186 = load i16, i16* %178, align 2
  %187 = shl i16 %186, 7
  %188 = getelementptr inbounds i16, i16* %1, i64 27
  %189 = load i16, i16* %188, align 2
  %190 = shl i16 %189, 5
  %191 = and i16 %190, 96
  %192 = or i16 %191, %187
  %193 = zext i16 %192 to i32
  %194 = getelementptr inbounds i16, i16* %1, i64 28
  %195 = load i16, i16* %194, align 2
  %196 = zext i16 %195 to i32
  %197 = lshr i32 %196, 1
  %198 = and i32 %197, 31
  %199 = or i32 %193, %198
  %200 = trunc i32 %199 to i8
  %201 = getelementptr inbounds i8, i8* %2, i64 14
  store i8 %200, i8* %185, align 1
  %202 = load i16, i16* %194, align 2
  %203 = shl i16 %202, 7
  %204 = and i16 %203, 128
  %205 = getelementptr inbounds i16, i16* %1, i64 29
  %206 = load i16, i16* %205, align 2
  %207 = shl i16 %206, 4
  %208 = and i16 %207, 112
  %209 = or i16 %208, %204
  %210 = getelementptr inbounds i16, i16* %1, i64 30
  %211 = load i16, i16* %210, align 2
  %212 = shl i16 %211, 1
  %213 = and i16 %212, 14
  %214 = or i16 %209, %213
  %215 = zext i16 %214 to i32
  %216 = getelementptr inbounds i16, i16* %1, i64 31
  %217 = load i16, i16* %216, align 2
  %218 = zext i16 %217 to i32
  %219 = lshr i32 %218, 2
  %220 = and i32 %219, 1
  %221 = or i32 %215, %220
  %222 = trunc i32 %221 to i8
  %223 = getelementptr inbounds i8, i8* %2, i64 15
  store i8 %222, i8* %201, align 1
  %224 = load i16, i16* %216, align 2
  %225 = shl i16 %224, 6
  %226 = getelementptr inbounds i16, i16* %1, i64 32
  %227 = load i16, i16* %226, align 2
  %228 = shl i16 %227, 3
  %229 = and i16 %228, 56
  %230 = or i16 %229, %225
  %231 = getelementptr inbounds i16, i16* %1, i64 33
  %232 = load i16, i16* %231, align 2
  %233 = and i16 %232, 7
  %234 = or i16 %230, %233
  %235 = trunc i16 %234 to i8
  %236 = getelementptr inbounds i8, i8* %2, i64 16
  store i8 %235, i8* %223, align 1
  %237 = getelementptr inbounds i16, i16* %1, i64 34
  %238 = load i16, i16* %237, align 2
  %239 = shl i16 %238, 5
  %240 = getelementptr inbounds i16, i16* %1, i64 35
  %241 = load i16, i16* %240, align 2
  %242 = shl i16 %241, 2
  %243 = and i16 %242, 28
  %244 = or i16 %243, %239
  %245 = zext i16 %244 to i32
  %246 = getelementptr inbounds i16, i16* %1, i64 36
  %247 = load i16, i16* %246, align 2
  %248 = zext i16 %247 to i32
  %249 = lshr i32 %248, 1
  %250 = and i32 %249, 3
  %251 = or i32 %245, %250
  %252 = trunc i32 %251 to i8
  %253 = getelementptr inbounds i8, i8* %2, i64 17
  store i8 %252, i8* %236, align 1
  %254 = load i16, i16* %246, align 2
  %255 = shl i16 %254, 7
  %256 = and i16 %255, 128
  %257 = getelementptr inbounds i16, i16* %1, i64 37
  %258 = load i16, i16* %257, align 2
  %259 = shl i16 %258, 4
  %260 = and i16 %259, 112
  %261 = or i16 %260, %256
  %262 = getelementptr inbounds i16, i16* %1, i64 38
  %263 = load i16, i16* %262, align 2
  %264 = shl i16 %263, 1
  %265 = and i16 %264, 14
  %266 = or i16 %261, %265
  %267 = zext i16 %266 to i32
  %268 = getelementptr inbounds i16, i16* %1, i64 39
  %269 = load i16, i16* %268, align 2
  %270 = zext i16 %269 to i32
  %271 = lshr i32 %270, 2
  %272 = and i32 %271, 1
  %273 = or i32 %267, %272
  %274 = trunc i32 %273 to i8
  %275 = getelementptr inbounds i8, i8* %2, i64 18
  store i8 %274, i8* %253, align 1
  %276 = load i16, i16* %268, align 2
  %277 = shl i16 %276, 6
  %278 = getelementptr inbounds i16, i16* %1, i64 40
  %279 = load i16, i16* %278, align 2
  %280 = shl i16 %279, 3
  %281 = and i16 %280, 56
  %282 = or i16 %281, %277
  %283 = getelementptr inbounds i16, i16* %1, i64 41
  %284 = load i16, i16* %283, align 2
  %285 = and i16 %284, 7
  %286 = or i16 %282, %285
  %287 = trunc i16 %286 to i8
  %288 = getelementptr inbounds i8, i8* %2, i64 19
  store i8 %287, i8* %275, align 1
  %289 = getelementptr inbounds i16, i16* %1, i64 42
  %290 = load i16, i16* %289, align 2
  %291 = shl i16 %290, 1
  %292 = zext i16 %291 to i32
  %293 = getelementptr inbounds i16, i16* %1, i64 43
  %294 = load i16, i16* %293, align 2
  %295 = zext i16 %294 to i32
  %296 = lshr i32 %295, 1
  %297 = and i32 %296, 1
  %298 = or i32 %297, %292
  %299 = trunc i32 %298 to i8
  %300 = getelementptr inbounds i8, i8* %2, i64 20
  store i8 %299, i8* %288, align 1
  %301 = load i16, i16* %293, align 2
  %302 = shl i16 %301, 7
  %303 = getelementptr inbounds i16, i16* %1, i64 44
  %304 = load i16, i16* %303, align 2
  %305 = shl i16 %304, 5
  %306 = and i16 %305, 96
  %307 = or i16 %306, %302
  %308 = zext i16 %307 to i32
  %309 = getelementptr inbounds i16, i16* %1, i64 45
  %310 = load i16, i16* %309, align 2
  %311 = zext i16 %310 to i32
  %312 = lshr i32 %311, 1
  %313 = and i32 %312, 31
  %314 = or i32 %308, %313
  %315 = trunc i32 %314 to i8
  %316 = getelementptr inbounds i8, i8* %2, i64 21
  store i8 %315, i8* %300, align 1
  %317 = load i16, i16* %309, align 2
  %318 = shl i16 %317, 7
  %319 = and i16 %318, 128
  %320 = getelementptr inbounds i16, i16* %1, i64 46
  %321 = load i16, i16* %320, align 2
  %322 = shl i16 %321, 4
  %323 = and i16 %322, 112
  %324 = or i16 %323, %319
  %325 = getelementptr inbounds i16, i16* %1, i64 47
  %326 = load i16, i16* %325, align 2
  %327 = shl i16 %326, 1
  %328 = and i16 %327, 14
  %329 = or i16 %324, %328
  %330 = zext i16 %329 to i32
  %331 = getelementptr inbounds i16, i16* %1, i64 48
  %332 = load i16, i16* %331, align 2
  %333 = zext i16 %332 to i32
  %334 = lshr i32 %333, 2
  %335 = and i32 %334, 1
  %336 = or i32 %330, %335
  %337 = trunc i32 %336 to i8
  %338 = getelementptr inbounds i8, i8* %2, i64 22
  store i8 %337, i8* %316, align 1
  %339 = load i16, i16* %331, align 2
  %340 = shl i16 %339, 6
  %341 = getelementptr inbounds i16, i16* %1, i64 49
  %342 = load i16, i16* %341, align 2
  %343 = shl i16 %342, 3
  %344 = and i16 %343, 56
  %345 = or i16 %344, %340
  %346 = getelementptr inbounds i16, i16* %1, i64 50
  %347 = load i16, i16* %346, align 2
  %348 = and i16 %347, 7
  %349 = or i16 %345, %348
  %350 = trunc i16 %349 to i8
  %351 = getelementptr inbounds i8, i8* %2, i64 23
  store i8 %350, i8* %338, align 1
  %352 = getelementptr inbounds i16, i16* %1, i64 51
  %353 = load i16, i16* %352, align 2
  %354 = shl i16 %353, 5
  %355 = getelementptr inbounds i16, i16* %1, i64 52
  %356 = load i16, i16* %355, align 2
  %357 = shl i16 %356, 2
  %358 = and i16 %357, 28
  %359 = or i16 %358, %354
  %360 = zext i16 %359 to i32
  %361 = getelementptr inbounds i16, i16* %1, i64 53
  %362 = load i16, i16* %361, align 2
  %363 = zext i16 %362 to i32
  %364 = lshr i32 %363, 1
  %365 = and i32 %364, 3
  %366 = or i32 %360, %365
  %367 = trunc i32 %366 to i8
  %368 = getelementptr inbounds i8, i8* %2, i64 24
  store i8 %367, i8* %351, align 1
  %369 = load i16, i16* %361, align 2
  %370 = shl i16 %369, 7
  %371 = and i16 %370, 128
  %372 = getelementptr inbounds i16, i16* %1, i64 54
  %373 = load i16, i16* %372, align 2
  %374 = shl i16 %373, 4
  %375 = and i16 %374, 112
  %376 = or i16 %375, %371
  %377 = getelementptr inbounds i16, i16* %1, i64 55
  %378 = load i16, i16* %377, align 2
  %379 = shl i16 %378, 1
  %380 = and i16 %379, 14
  %381 = or i16 %376, %380
  %382 = zext i16 %381 to i32
  %383 = getelementptr inbounds i16, i16* %1, i64 56
  %384 = load i16, i16* %383, align 2
  %385 = zext i16 %384 to i32
  %386 = lshr i32 %385, 2
  %387 = and i32 %386, 1
  %388 = or i32 %382, %387
  %389 = trunc i32 %388 to i8
  %390 = getelementptr inbounds i8, i8* %2, i64 25
  store i8 %389, i8* %368, align 1
  %391 = load i16, i16* %383, align 2
  %392 = shl i16 %391, 6
  %393 = getelementptr inbounds i16, i16* %1, i64 57
  %394 = load i16, i16* %393, align 2
  %395 = shl i16 %394, 3
  %396 = and i16 %395, 56
  %397 = or i16 %396, %392
  %398 = getelementptr inbounds i16, i16* %1, i64 58
  %399 = load i16, i16* %398, align 2
  %400 = and i16 %399, 7
  %401 = or i16 %397, %400
  %402 = trunc i16 %401 to i8
  %403 = getelementptr inbounds i8, i8* %2, i64 26
  store i8 %402, i8* %390, align 1
  %404 = getelementptr inbounds i16, i16* %1, i64 59
  %405 = load i16, i16* %404, align 2
  %406 = shl i16 %405, 1
  %407 = zext i16 %406 to i32
  %408 = getelementptr inbounds i16, i16* %1, i64 60
  %409 = load i16, i16* %408, align 2
  %410 = zext i16 %409 to i32
  %411 = lshr i32 %410, 1
  %412 = and i32 %411, 1
  %413 = or i32 %412, %407
  %414 = trunc i32 %413 to i8
  %415 = getelementptr inbounds i8, i8* %2, i64 27
  store i8 %414, i8* %403, align 1
  %416 = load i16, i16* %408, align 2
  %417 = shl i16 %416, 7
  %418 = getelementptr inbounds i16, i16* %1, i64 61
  %419 = load i16, i16* %418, align 2
  %420 = shl i16 %419, 5
  %421 = and i16 %420, 96
  %422 = or i16 %421, %417
  %423 = zext i16 %422 to i32
  %424 = getelementptr inbounds i16, i16* %1, i64 62
  %425 = load i16, i16* %424, align 2
  %426 = zext i16 %425 to i32
  %427 = lshr i32 %426, 1
  %428 = and i32 %427, 31
  %429 = or i32 %423, %428
  %430 = trunc i32 %429 to i8
  %431 = getelementptr inbounds i8, i8* %2, i64 28
  store i8 %430, i8* %415, align 1
  %432 = load i16, i16* %424, align 2
  %433 = shl i16 %432, 7
  %434 = and i16 %433, 128
  %435 = getelementptr inbounds i16, i16* %1, i64 63
  %436 = load i16, i16* %435, align 2
  %437 = shl i16 %436, 4
  %438 = and i16 %437, 112
  %439 = or i16 %438, %434
  %440 = getelementptr inbounds i16, i16* %1, i64 64
  %441 = load i16, i16* %440, align 2
  %442 = shl i16 %441, 1
  %443 = and i16 %442, 14
  %444 = or i16 %439, %443
  %445 = zext i16 %444 to i32
  %446 = getelementptr inbounds i16, i16* %1, i64 65
  %447 = load i16, i16* %446, align 2
  %448 = zext i16 %447 to i32
  %449 = lshr i32 %448, 2
  %450 = and i32 %449, 1
  %451 = or i32 %445, %450
  %452 = trunc i32 %451 to i8
  %453 = getelementptr inbounds i8, i8* %2, i64 29
  store i8 %452, i8* %431, align 1
  %454 = load i16, i16* %446, align 2
  %455 = shl i16 %454, 6
  %456 = getelementptr inbounds i16, i16* %1, i64 66
  %457 = load i16, i16* %456, align 2
  %458 = shl i16 %457, 3
  %459 = and i16 %458, 56
  %460 = or i16 %459, %455
  %461 = getelementptr inbounds i16, i16* %1, i64 67
  %462 = load i16, i16* %461, align 2
  %463 = and i16 %462, 7
  %464 = or i16 %460, %463
  %465 = trunc i16 %464 to i8
  %466 = getelementptr inbounds i8, i8* %2, i64 30
  store i8 %465, i8* %453, align 1
  %467 = getelementptr inbounds i16, i16* %1, i64 68
  %468 = load i16, i16* %467, align 2
  %469 = shl i16 %468, 5
  %470 = getelementptr inbounds i16, i16* %1, i64 69
  %471 = load i16, i16* %470, align 2
  %472 = shl i16 %471, 2
  %473 = and i16 %472, 28
  %474 = or i16 %473, %469
  %475 = zext i16 %474 to i32
  %476 = getelementptr inbounds i16, i16* %1, i64 70
  %477 = load i16, i16* %476, align 2
  %478 = zext i16 %477 to i32
  %479 = lshr i32 %478, 1
  %480 = and i32 %479, 3
  %481 = or i32 %475, %480
  %482 = trunc i32 %481 to i8
  %483 = getelementptr inbounds i8, i8* %2, i64 31
  store i8 %482, i8* %466, align 1
  %484 = load i16, i16* %476, align 2
  %485 = shl i16 %484, 7
  %486 = and i16 %485, 128
  %487 = getelementptr inbounds i16, i16* %1, i64 71
  %488 = load i16, i16* %487, align 2
  %489 = shl i16 %488, 4
  %490 = and i16 %489, 112
  %491 = or i16 %490, %486
  %492 = getelementptr inbounds i16, i16* %1, i64 72
  %493 = load i16, i16* %492, align 2
  %494 = shl i16 %493, 1
  %495 = and i16 %494, 14
  %496 = or i16 %491, %495
  %497 = zext i16 %496 to i32
  %498 = getelementptr inbounds i16, i16* %1, i64 73
  %499 = load i16, i16* %498, align 2
  %500 = zext i16 %499 to i32
  %501 = lshr i32 %500, 2
  %502 = and i32 %501, 1
  %503 = or i32 %497, %502
  %504 = trunc i32 %503 to i8
  %505 = getelementptr inbounds i8, i8* %2, i64 32
  store i8 %504, i8* %483, align 1
  %506 = load i16, i16* %498, align 2
  %507 = shl i16 %506, 6
  %508 = getelementptr inbounds i16, i16* %1, i64 74
  %509 = load i16, i16* %508, align 2
  %510 = shl i16 %509, 3
  %511 = and i16 %510, 56
  %512 = or i16 %511, %507
  %513 = getelementptr inbounds i16, i16* %1, i64 75
  %514 = load i16, i16* %513, align 2
  %515 = and i16 %514, 7
  %516 = or i16 %512, %515
  %517 = trunc i16 %516 to i8
  store i8 %517, i8* %505, align 1
  ret void
}

attributes #0 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"clang version 4.0.0 (tags/RELEASE_400/final)"}
