; ModuleID = 'gsm_encode.ll'
source_filename = "gsm_encode.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.gsm_state = type { [280 x i16], i16, i64, i32, [8 x i16], [2 x [8 x i16]], i16, i16, [9 x i16], i16, i8, i8 }

; Function Attrs: noinline nounwind uwtable
define void @gsm_encode(%struct.gsm_state*, i16*, i8*) local_unnamed_addr #0 {
  %4 = alloca [8 x i16], align 16
  %5 = alloca [4 x i16], align 2
  %6 = alloca [4 x i16], align 2
  %7 = alloca [4 x i16], align 2
  %8 = alloca [4 x i16], align 2
  %9 = alloca [52 x i16], align 16
  %10 = getelementptr inbounds [8 x i16], [8 x i16]* %4, i64 0, i64 0
  %11 = getelementptr inbounds [4 x i16], [4 x i16]* %5, i64 0, i64 0
  %12 = getelementptr inbounds [4 x i16], [4 x i16]* %7, i64 0, i64 0
  %13 = getelementptr inbounds [4 x i16], [4 x i16]* %6, i64 0, i64 0
  %14 = getelementptr inbounds [4 x i16], [4 x i16]* %8, i64 0, i64 0
  %15 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 0
  call void @Gsm_Coder(%struct.gsm_state* %0, i16* %1, i16* nonnull %10, i16* nonnull %11, i16* nonnull %12, i16* nonnull %13, i16* nonnull %14, i16* nonnull %15) #2
  %16 = load i16, i16* %10, align 16
  %17 = lshr i16 %16, 2
  %18 = trunc i16 %17 to i8
  %19 = and i8 %18, 15
  %20 = or i8 %19, -48
  %21 = getelementptr inbounds i8, i8* %2, i64 1
  store i8 %20, i8* %2, align 1
  %22 = load i16, i16* %10, align 16
  %23 = shl i16 %22, 6
  %24 = getelementptr inbounds [8 x i16], [8 x i16]* %4, i64 0, i64 1
  %25 = load i16, i16* %24, align 2
  %26 = and i16 %25, 63
  %27 = or i16 %26, %23
  %28 = trunc i16 %27 to i8
  %29 = getelementptr inbounds i8, i8* %2, i64 2
  store i8 %28, i8* %21, align 1
  %30 = getelementptr inbounds [8 x i16], [8 x i16]* %4, i64 0, i64 2
  %31 = load i16, i16* %30, align 4
  %32 = shl i16 %31, 3
  %33 = zext i16 %32 to i32
  %34 = getelementptr inbounds [8 x i16], [8 x i16]* %4, i64 0, i64 3
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %35 to i32
  %37 = lshr i32 %36, 2
  %38 = and i32 %37, 7
  %39 = or i32 %38, %33
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds i8, i8* %2, i64 3
  store i8 %40, i8* %29, align 1
  %42 = load i16, i16* %34, align 2
  %43 = shl i16 %42, 6
  %44 = getelementptr inbounds [8 x i16], [8 x i16]* %4, i64 0, i64 4
  %45 = load i16, i16* %44, align 8
  %46 = shl i16 %45, 2
  %47 = and i16 %46, 60
  %48 = or i16 %47, %43
  %49 = zext i16 %48 to i32
  %50 = getelementptr inbounds [8 x i16], [8 x i16]* %4, i64 0, i64 5
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  %53 = lshr i32 %52, 2
  %54 = and i32 %53, 3
  %55 = or i32 %49, %54
  %56 = trunc i32 %55 to i8
  %57 = getelementptr inbounds i8, i8* %2, i64 4
  store i8 %56, i8* %41, align 1
  %58 = load i16, i16* %50, align 2
  %59 = shl i16 %58, 6
  %60 = getelementptr inbounds [8 x i16], [8 x i16]* %4, i64 0, i64 6
  %61 = load i16, i16* %60, align 4
  %62 = shl i16 %61, 3
  %63 = and i16 %62, 56
  %64 = or i16 %63, %59
  %65 = getelementptr inbounds [8 x i16], [8 x i16]* %4, i64 0, i64 7
  %66 = load i16, i16* %65, align 2
  %67 = and i16 %66, 7
  %68 = or i16 %64, %67
  %69 = trunc i16 %68 to i8
  %70 = getelementptr inbounds i8, i8* %2, i64 5
  store i8 %69, i8* %57, align 1
  %71 = load i16, i16* %11, align 2
  %72 = shl i16 %71, 1
  %73 = zext i16 %72 to i32
  %74 = load i16, i16* %12, align 2
  %75 = zext i16 %74 to i32
  %76 = lshr i32 %75, 1
  %77 = and i32 %76, 1
  %78 = or i32 %77, %73
  %79 = trunc i32 %78 to i8
  %80 = getelementptr inbounds i8, i8* %2, i64 6
  store i8 %79, i8* %70, align 1
  %81 = load i16, i16* %12, align 2
  %82 = shl i16 %81, 7
  %83 = load i16, i16* %13, align 2
  %84 = shl i16 %83, 5
  %85 = and i16 %84, 96
  %86 = or i16 %85, %82
  %87 = zext i16 %86 to i32
  %88 = load i16, i16* %14, align 2
  %89 = zext i16 %88 to i32
  %90 = lshr i32 %89, 1
  %91 = and i32 %90, 31
  %92 = or i32 %87, %91
  %93 = trunc i32 %92 to i8
  %94 = getelementptr inbounds i8, i8* %2, i64 7
  store i8 %93, i8* %80, align 1
  %95 = load i16, i16* %14, align 2
  %96 = shl i16 %95, 7
  %97 = and i16 %96, 128
  %98 = load i16, i16* %15, align 16
  %99 = shl i16 %98, 4
  %100 = and i16 %99, 112
  %101 = or i16 %100, %97
  %102 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 1
  %103 = load i16, i16* %102, align 2
  %104 = shl i16 %103, 1
  %105 = and i16 %104, 14
  %106 = or i16 %101, %105
  %107 = zext i16 %106 to i32
  %108 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 2
  %109 = load i16, i16* %108, align 4
  %110 = zext i16 %109 to i32
  %111 = lshr i32 %110, 2
  %112 = and i32 %111, 1
  %113 = or i32 %107, %112
  %114 = trunc i32 %113 to i8
  %115 = getelementptr inbounds i8, i8* %2, i64 8
  store i8 %114, i8* %94, align 1
  %116 = load i16, i16* %108, align 4
  %117 = shl i16 %116, 6
  %118 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 3
  %119 = load i16, i16* %118, align 2
  %120 = shl i16 %119, 3
  %121 = and i16 %120, 56
  %122 = or i16 %121, %117
  %123 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 4
  %124 = load i16, i16* %123, align 8
  %125 = and i16 %124, 7
  %126 = or i16 %122, %125
  %127 = trunc i16 %126 to i8
  %128 = getelementptr inbounds i8, i8* %2, i64 9
  store i8 %127, i8* %115, align 1
  %129 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 5
  %130 = load i16, i16* %129, align 2
  %131 = shl i16 %130, 5
  %132 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 6
  %133 = load i16, i16* %132, align 4
  %134 = shl i16 %133, 2
  %135 = and i16 %134, 28
  %136 = or i16 %135, %131
  %137 = zext i16 %136 to i32
  %138 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 7
  %139 = load i16, i16* %138, align 2
  %140 = zext i16 %139 to i32
  %141 = lshr i32 %140, 1
  %142 = and i32 %141, 3
  %143 = or i32 %137, %142
  %144 = trunc i32 %143 to i8
  %145 = getelementptr inbounds i8, i8* %2, i64 10
  store i8 %144, i8* %128, align 1
  %146 = load i16, i16* %138, align 2
  %147 = shl i16 %146, 7
  %148 = and i16 %147, 128
  %149 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 8
  %150 = load i16, i16* %149, align 16
  %151 = shl i16 %150, 4
  %152 = and i16 %151, 112
  %153 = or i16 %152, %148
  %154 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 9
  %155 = load i16, i16* %154, align 2
  %156 = shl i16 %155, 1
  %157 = and i16 %156, 14
  %158 = or i16 %153, %157
  %159 = zext i16 %158 to i32
  %160 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 10
  %161 = load i16, i16* %160, align 4
  %162 = zext i16 %161 to i32
  %163 = lshr i32 %162, 2
  %164 = and i32 %163, 1
  %165 = or i32 %159, %164
  %166 = trunc i32 %165 to i8
  %167 = getelementptr inbounds i8, i8* %2, i64 11
  store i8 %166, i8* %145, align 1
  %168 = load i16, i16* %160, align 4
  %169 = shl i16 %168, 6
  %170 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 11
  %171 = load i16, i16* %170, align 2
  %172 = shl i16 %171, 3
  %173 = and i16 %172, 56
  %174 = or i16 %173, %169
  %175 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 12
  %176 = load i16, i16* %175, align 8
  %177 = and i16 %176, 7
  %178 = or i16 %174, %177
  %179 = trunc i16 %178 to i8
  %180 = getelementptr inbounds i8, i8* %2, i64 12
  store i8 %179, i8* %167, align 1
  %181 = getelementptr inbounds [4 x i16], [4 x i16]* %5, i64 0, i64 1
  %182 = load i16, i16* %181, align 2
  %183 = shl i16 %182, 1
  %184 = zext i16 %183 to i32
  %185 = getelementptr inbounds [4 x i16], [4 x i16]* %7, i64 0, i64 1
  %186 = load i16, i16* %185, align 2
  %187 = zext i16 %186 to i32
  %188 = lshr i32 %187, 1
  %189 = and i32 %188, 1
  %190 = or i32 %189, %184
  %191 = trunc i32 %190 to i8
  %192 = getelementptr inbounds i8, i8* %2, i64 13
  store i8 %191, i8* %180, align 1
  %193 = load i16, i16* %185, align 2
  %194 = shl i16 %193, 7
  %195 = getelementptr inbounds [4 x i16], [4 x i16]* %6, i64 0, i64 1
  %196 = load i16, i16* %195, align 2
  %197 = shl i16 %196, 5
  %198 = and i16 %197, 96
  %199 = or i16 %198, %194
  %200 = zext i16 %199 to i32
  %201 = getelementptr inbounds [4 x i16], [4 x i16]* %8, i64 0, i64 1
  %202 = load i16, i16* %201, align 2
  %203 = zext i16 %202 to i32
  %204 = lshr i32 %203, 1
  %205 = and i32 %204, 31
  %206 = or i32 %200, %205
  %207 = trunc i32 %206 to i8
  %208 = getelementptr inbounds i8, i8* %2, i64 14
  store i8 %207, i8* %192, align 1
  %209 = load i16, i16* %201, align 2
  %210 = shl i16 %209, 7
  %211 = and i16 %210, 128
  %212 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 13
  %213 = load i16, i16* %212, align 2
  %214 = shl i16 %213, 4
  %215 = and i16 %214, 112
  %216 = or i16 %215, %211
  %217 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 14
  %218 = load i16, i16* %217, align 4
  %219 = shl i16 %218, 1
  %220 = and i16 %219, 14
  %221 = or i16 %216, %220
  %222 = zext i16 %221 to i32
  %223 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 15
  %224 = load i16, i16* %223, align 2
  %225 = zext i16 %224 to i32
  %226 = lshr i32 %225, 2
  %227 = and i32 %226, 1
  %228 = or i32 %222, %227
  %229 = trunc i32 %228 to i8
  %230 = getelementptr inbounds i8, i8* %2, i64 15
  store i8 %229, i8* %208, align 1
  %231 = load i16, i16* %223, align 2
  %232 = shl i16 %231, 6
  %233 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 16
  %234 = load i16, i16* %233, align 16
  %235 = shl i16 %234, 3
  %236 = and i16 %235, 56
  %237 = or i16 %236, %232
  %238 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 17
  %239 = load i16, i16* %238, align 2
  %240 = and i16 %239, 7
  %241 = or i16 %237, %240
  %242 = trunc i16 %241 to i8
  %243 = getelementptr inbounds i8, i8* %2, i64 16
  store i8 %242, i8* %230, align 1
  %244 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 18
  %245 = load i16, i16* %244, align 4
  %246 = shl i16 %245, 5
  %247 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 19
  %248 = load i16, i16* %247, align 2
  %249 = shl i16 %248, 2
  %250 = and i16 %249, 28
  %251 = or i16 %250, %246
  %252 = zext i16 %251 to i32
  %253 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 20
  %254 = load i16, i16* %253, align 8
  %255 = zext i16 %254 to i32
  %256 = lshr i32 %255, 1
  %257 = and i32 %256, 3
  %258 = or i32 %252, %257
  %259 = trunc i32 %258 to i8
  %260 = getelementptr inbounds i8, i8* %2, i64 17
  store i8 %259, i8* %243, align 1
  %261 = load i16, i16* %253, align 8
  %262 = shl i16 %261, 7
  %263 = and i16 %262, 128
  %264 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 21
  %265 = load i16, i16* %264, align 2
  %266 = shl i16 %265, 4
  %267 = and i16 %266, 112
  %268 = or i16 %267, %263
  %269 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 22
  %270 = load i16, i16* %269, align 4
  %271 = shl i16 %270, 1
  %272 = and i16 %271, 14
  %273 = or i16 %268, %272
  %274 = zext i16 %273 to i32
  %275 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 23
  %276 = load i16, i16* %275, align 2
  %277 = zext i16 %276 to i32
  %278 = lshr i32 %277, 2
  %279 = and i32 %278, 1
  %280 = or i32 %274, %279
  %281 = trunc i32 %280 to i8
  %282 = getelementptr inbounds i8, i8* %2, i64 18
  store i8 %281, i8* %260, align 1
  %283 = load i16, i16* %275, align 2
  %284 = shl i16 %283, 6
  %285 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 24
  %286 = load i16, i16* %285, align 16
  %287 = shl i16 %286, 3
  %288 = and i16 %287, 56
  %289 = or i16 %288, %284
  %290 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 25
  %291 = load i16, i16* %290, align 2
  %292 = and i16 %291, 7
  %293 = or i16 %289, %292
  %294 = trunc i16 %293 to i8
  %295 = getelementptr inbounds i8, i8* %2, i64 19
  store i8 %294, i8* %282, align 1
  %296 = getelementptr inbounds [4 x i16], [4 x i16]* %5, i64 0, i64 2
  %297 = load i16, i16* %296, align 2
  %298 = shl i16 %297, 1
  %299 = zext i16 %298 to i32
  %300 = getelementptr inbounds [4 x i16], [4 x i16]* %7, i64 0, i64 2
  %301 = load i16, i16* %300, align 2
  %302 = zext i16 %301 to i32
  %303 = lshr i32 %302, 1
  %304 = and i32 %303, 1
  %305 = or i32 %304, %299
  %306 = trunc i32 %305 to i8
  %307 = getelementptr inbounds i8, i8* %2, i64 20
  store i8 %306, i8* %295, align 1
  %308 = load i16, i16* %300, align 2
  %309 = shl i16 %308, 7
  %310 = getelementptr inbounds [4 x i16], [4 x i16]* %6, i64 0, i64 2
  %311 = load i16, i16* %310, align 2
  %312 = shl i16 %311, 5
  %313 = and i16 %312, 96
  %314 = or i16 %313, %309
  %315 = zext i16 %314 to i32
  %316 = getelementptr inbounds [4 x i16], [4 x i16]* %8, i64 0, i64 2
  %317 = load i16, i16* %316, align 2
  %318 = zext i16 %317 to i32
  %319 = lshr i32 %318, 1
  %320 = and i32 %319, 31
  %321 = or i32 %315, %320
  %322 = trunc i32 %321 to i8
  %323 = getelementptr inbounds i8, i8* %2, i64 21
  store i8 %322, i8* %307, align 1
  %324 = load i16, i16* %316, align 2
  %325 = shl i16 %324, 7
  %326 = and i16 %325, 128
  %327 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 26
  %328 = load i16, i16* %327, align 4
  %329 = shl i16 %328, 4
  %330 = and i16 %329, 112
  %331 = or i16 %330, %326
  %332 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 27
  %333 = load i16, i16* %332, align 2
  %334 = shl i16 %333, 1
  %335 = and i16 %334, 14
  %336 = or i16 %331, %335
  %337 = zext i16 %336 to i32
  %338 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 28
  %339 = load i16, i16* %338, align 8
  %340 = zext i16 %339 to i32
  %341 = lshr i32 %340, 2
  %342 = and i32 %341, 1
  %343 = or i32 %337, %342
  %344 = trunc i32 %343 to i8
  %345 = getelementptr inbounds i8, i8* %2, i64 22
  store i8 %344, i8* %323, align 1
  %346 = load i16, i16* %338, align 8
  %347 = shl i16 %346, 6
  %348 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 29
  %349 = load i16, i16* %348, align 2
  %350 = shl i16 %349, 3
  %351 = and i16 %350, 56
  %352 = or i16 %351, %347
  %353 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 30
  %354 = load i16, i16* %353, align 4
  %355 = and i16 %354, 7
  %356 = or i16 %352, %355
  %357 = trunc i16 %356 to i8
  %358 = getelementptr inbounds i8, i8* %2, i64 23
  store i8 %357, i8* %345, align 1
  %359 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 31
  %360 = load i16, i16* %359, align 2
  %361 = shl i16 %360, 5
  %362 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 32
  %363 = load i16, i16* %362, align 16
  %364 = shl i16 %363, 2
  %365 = and i16 %364, 28
  %366 = or i16 %365, %361
  %367 = zext i16 %366 to i32
  %368 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 33
  %369 = load i16, i16* %368, align 2
  %370 = zext i16 %369 to i32
  %371 = lshr i32 %370, 1
  %372 = and i32 %371, 3
  %373 = or i32 %367, %372
  %374 = trunc i32 %373 to i8
  %375 = getelementptr inbounds i8, i8* %2, i64 24
  store i8 %374, i8* %358, align 1
  %376 = load i16, i16* %368, align 2
  %377 = shl i16 %376, 7
  %378 = and i16 %377, 128
  %379 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 34
  %380 = load i16, i16* %379, align 4
  %381 = shl i16 %380, 4
  %382 = and i16 %381, 112
  %383 = or i16 %382, %378
  %384 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 35
  %385 = load i16, i16* %384, align 2
  %386 = shl i16 %385, 1
  %387 = and i16 %386, 14
  %388 = or i16 %383, %387
  %389 = zext i16 %388 to i32
  %390 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 36
  %391 = load i16, i16* %390, align 8
  %392 = zext i16 %391 to i32
  %393 = lshr i32 %392, 2
  %394 = and i32 %393, 1
  %395 = or i32 %389, %394
  %396 = trunc i32 %395 to i8
  %397 = getelementptr inbounds i8, i8* %2, i64 25
  store i8 %396, i8* %375, align 1
  %398 = load i16, i16* %390, align 8
  %399 = shl i16 %398, 6
  %400 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 37
  %401 = load i16, i16* %400, align 2
  %402 = shl i16 %401, 3
  %403 = and i16 %402, 56
  %404 = or i16 %403, %399
  %405 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 38
  %406 = load i16, i16* %405, align 4
  %407 = and i16 %406, 7
  %408 = or i16 %404, %407
  %409 = trunc i16 %408 to i8
  %410 = getelementptr inbounds i8, i8* %2, i64 26
  store i8 %409, i8* %397, align 1
  %411 = getelementptr inbounds [4 x i16], [4 x i16]* %5, i64 0, i64 3
  %412 = load i16, i16* %411, align 2
  %413 = shl i16 %412, 1
  %414 = zext i16 %413 to i32
  %415 = getelementptr inbounds [4 x i16], [4 x i16]* %7, i64 0, i64 3
  %416 = load i16, i16* %415, align 2
  %417 = zext i16 %416 to i32
  %418 = lshr i32 %417, 1
  %419 = and i32 %418, 1
  %420 = or i32 %419, %414
  %421 = trunc i32 %420 to i8
  %422 = getelementptr inbounds i8, i8* %2, i64 27
  store i8 %421, i8* %410, align 1
  %423 = load i16, i16* %415, align 2
  %424 = shl i16 %423, 7
  %425 = getelementptr inbounds [4 x i16], [4 x i16]* %6, i64 0, i64 3
  %426 = load i16, i16* %425, align 2
  %427 = shl i16 %426, 5
  %428 = and i16 %427, 96
  %429 = or i16 %428, %424
  %430 = zext i16 %429 to i32
  %431 = getelementptr inbounds [4 x i16], [4 x i16]* %8, i64 0, i64 3
  %432 = load i16, i16* %431, align 2
  %433 = zext i16 %432 to i32
  %434 = lshr i32 %433, 1
  %435 = and i32 %434, 31
  %436 = or i32 %430, %435
  %437 = trunc i32 %436 to i8
  %438 = getelementptr inbounds i8, i8* %2, i64 28
  store i8 %437, i8* %422, align 1
  %439 = load i16, i16* %431, align 2
  %440 = shl i16 %439, 7
  %441 = and i16 %440, 128
  %442 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 39
  %443 = load i16, i16* %442, align 2
  %444 = shl i16 %443, 4
  %445 = and i16 %444, 112
  %446 = or i16 %445, %441
  %447 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 40
  %448 = load i16, i16* %447, align 16
  %449 = shl i16 %448, 1
  %450 = and i16 %449, 14
  %451 = or i16 %446, %450
  %452 = zext i16 %451 to i32
  %453 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 41
  %454 = load i16, i16* %453, align 2
  %455 = zext i16 %454 to i32
  %456 = lshr i32 %455, 2
  %457 = and i32 %456, 1
  %458 = or i32 %452, %457
  %459 = trunc i32 %458 to i8
  %460 = getelementptr inbounds i8, i8* %2, i64 29
  store i8 %459, i8* %438, align 1
  %461 = load i16, i16* %453, align 2
  %462 = shl i16 %461, 6
  %463 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 42
  %464 = load i16, i16* %463, align 4
  %465 = shl i16 %464, 3
  %466 = and i16 %465, 56
  %467 = or i16 %466, %462
  %468 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 43
  %469 = load i16, i16* %468, align 2
  %470 = and i16 %469, 7
  %471 = or i16 %467, %470
  %472 = trunc i16 %471 to i8
  %473 = getelementptr inbounds i8, i8* %2, i64 30
  store i8 %472, i8* %460, align 1
  %474 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 44
  %475 = load i16, i16* %474, align 8
  %476 = shl i16 %475, 5
  %477 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 45
  %478 = load i16, i16* %477, align 2
  %479 = shl i16 %478, 2
  %480 = and i16 %479, 28
  %481 = or i16 %480, %476
  %482 = zext i16 %481 to i32
  %483 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 46
  %484 = load i16, i16* %483, align 4
  %485 = zext i16 %484 to i32
  %486 = lshr i32 %485, 1
  %487 = and i32 %486, 3
  %488 = or i32 %482, %487
  %489 = trunc i32 %488 to i8
  %490 = getelementptr inbounds i8, i8* %2, i64 31
  store i8 %489, i8* %473, align 1
  %491 = load i16, i16* %483, align 4
  %492 = shl i16 %491, 7
  %493 = and i16 %492, 128
  %494 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 47
  %495 = load i16, i16* %494, align 2
  %496 = shl i16 %495, 4
  %497 = and i16 %496, 112
  %498 = or i16 %497, %493
  %499 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 48
  %500 = load i16, i16* %499, align 16
  %501 = shl i16 %500, 1
  %502 = and i16 %501, 14
  %503 = or i16 %498, %502
  %504 = zext i16 %503 to i32
  %505 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 49
  %506 = load i16, i16* %505, align 2
  %507 = zext i16 %506 to i32
  %508 = lshr i32 %507, 2
  %509 = and i32 %508, 1
  %510 = or i32 %504, %509
  %511 = trunc i32 %510 to i8
  %512 = getelementptr inbounds i8, i8* %2, i64 32
  store i8 %511, i8* %490, align 1
  %513 = load i16, i16* %505, align 2
  %514 = shl i16 %513, 6
  %515 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 50
  %516 = load i16, i16* %515, align 4
  %517 = shl i16 %516, 3
  %518 = and i16 %517, 56
  %519 = or i16 %518, %514
  %520 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 51
  %521 = load i16, i16* %520, align 2
  %522 = and i16 %521, 7
  %523 = or i16 %519, %522
  %524 = trunc i16 %523 to i8
  store i8 %524, i8* %512, align 1
  ret void
}

declare void @Gsm_Coder(%struct.gsm_state*, i16*, i16*, i16*, i16*, i16*, i16*, i16*) local_unnamed_addr #1

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 4.0.0 (tags/RELEASE_400/final)"}
